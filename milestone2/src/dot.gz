digraph ethane {graph [ordering="out"];    1[label=simple_type_name]    2[label="void"]    1 -> 2    3[label=type_specifier]    3 -> 1    4[label=type_specifier_]    4 -> 3    5[label=name]    6[label="func"]    5 -> 6    7[label=declarator0]    7 -> 5    8[label=simple_type_name]    9[label="int"]    8 -> 9    10[label=type_specifier]    10 -> 8    11[label=type_specifier_]    11 -> 10    12[label=name]    13[label="a"]    12 -> 13    14[label=declarator0]    14 -> 12    15[label=argument_declaration_1]    15 -> 11    15 -> 14    16[label=argument_declaration_list]    16 -> 15    17[label=arg_list]    17 -> 16    18[label=jump_statement]    19[label="return"]    18 -> 19    20[label=";"]    18 -> 20    21[label=statement]    21 -> 18    22[label=statement_list]    22 -> 21    23[label=compound_statement]    24[label="{"]    23 -> 24    23 -> 22    25[label="}"]    23 -> 25    26[label=fct_body]    26 -> 23    27[label=function_definition]    27 -> 4    27 -> 7    28[label="None"]    27 -> 28    27 -> 17    29[label=")"]    27 -> 29    27 -> 26    30[label="None"]    27 -> 30    31[label=declaration2]    31 -> 27    32[label=declaration_seq]    32 -> 31    33[label=simple_type_name]    34[label="void"]    33 -> 34    35[label=type_specifier]    35 -> 33    36[label=type_specifier_]    36 -> 35    37[label=name]    38[label="func"]    37 -> 38    39[label=declarator0]    39 -> 37    40[label=simple_type_name]    41[label="float"]    40 -> 41    42[label=type_specifier]    42 -> 40    43[label=type_specifier_]    43 -> 42    44[label=name]    45[label="a"]    44 -> 45    46[label=declarator0]    46 -> 44    47[label=argument_declaration_1]    47 -> 43    47 -> 46    48[label=argument_declaration_list]    48 -> 47    49[label=arg_list]    49 -> 48    50[label=jump_statement]    51[label="return"]    50 -> 51    52[label=";"]    50 -> 52    53[label=statement]    53 -> 50    54[label=statement_list]    54 -> 53    55[label=compound_statement]    56[label="{"]    55 -> 56    55 -> 54    57[label="}"]    55 -> 57    58[label=fct_body]    58 -> 55    59[label=function_definition]    59 -> 36    59 -> 39    60[label="None"]    59 -> 60    59 -> 49    61[label=")"]    59 -> 61    59 -> 58    62[label="None"]    59 -> 62    63[label=declaration2]    63 -> 59    64[label=declaration_seq]    64 -> 32    64 -> 63    65[label=simple_type_name]    66[label="void"]    65 -> 66    67[label=type_specifier]    67 -> 65    68[label=type_specifier_]    68 -> 67    69[label=name]    70[label="func"]    69 -> 70    71[label=declarator0]    71 -> 69    72[label=arg_list]    73[label=jump_statement]    74[label="return"]    73 -> 74    75[label=";"]    73 -> 75    76[label=statement]    76 -> 73    77[label=statement_list]    77 -> 76    78[label=compound_statement]    79[label="{"]    78 -> 79    78 -> 77    80[label="}"]    78 -> 80    81[label=fct_body]    81 -> 78    82[label=function_definition]    82 -> 68    82 -> 71    83[label="None"]    82 -> 83    82 -> 72    84[label=")"]    82 -> 84    82 -> 81    85[label="None"]    82 -> 85    86[label=declaration2]    86 -> 82    87[label=declaration_seq]    87 -> 64    87 -> 86    88[label=simple_type_name]    89[label="int"]    88 -> 89    90[label=type_specifier]    90 -> 88    91[label=type_specifier_]    91 -> 90    92[label=name]    93[label="main"]    92 -> 93    94[label=declarator0]    94 -> 92    95[label=simple_type_name]    96[label="int"]    95 -> 96    97[label=type_specifier]    97 -> 95    98[label=type_specifier_]    98 -> 97    99[label=name]    100[label="a"]    99 -> 100    101[label=declarator0]    101 -> 99    102[label=argument_declaration_1]    102 -> 98    102 -> 101    103[label=simple_type_name]    104[label="char"]    103 -> 104    105[label=type_specifier]    105 -> 103    106[label=type_specifier_]    106 -> 105    107[label=unary2_operator]    108[label="*"]    107 -> 108    109[label=unary2_operator]    110[label="*"]    109 -> 110    111[label=name]    112[label="b"]    111 -> 112    113[label=declarator0]    113 -> 111    114[label=declarator1]    114 -> 109    114 -> 113    115[label=declarator1]    115 -> 107    115 -> 114    116[label=argument_declaration_1]    116 -> 106    116 -> 115    117[label=argument_declaration_list]    117 -> 116    118[label=argument_declaration_list]    118 -> 102    119[label=","]    118 -> 119    118 -> 117    120[label=arg_list]    120 -> 118    121[label=simple_type_name]    122[label="int"]    121 -> 122    123[label=type_specifier]    123 -> 121    124[label=type_specifier_]    124 -> 123    125[label=name]    126[label="c"]    125 -> 126    127[label=declarator0]    127 -> 125    128[label=init_declarator]    128 -> 127    129[label=declarator_list]    129 -> 128    130[label=name]    131[label="d"]    130 -> 131    132[label=declarator0]    132 -> 130    133[label=init_declarator]    133 -> 132    134[label=declarator_list]    134 -> 129    135[label=","]    134 -> 135    134 -> 133    136[label=declaration0]    136 -> 124    136 -> 134    137[label=";"]    136 -> 137    138[label=declaration_statement]    138 -> 136    139[label=statement]    139 -> 138    140[label=statement_list]    140 -> 139    141[label=name]    142[label="func"]    141 -> 142    143[label=primary_expression0]    143 -> 141    144[label=postfix_expression_1]    144 -> 143    145[label=name]    146[label="c"]    145 -> 146    147[label=primary_expression0]    147 -> 145    148[label=postfix_expression_1]    148 -> 147    149[label=unary_expression]    149 -> 148    150[label=cast_expression]    150 -> 149    151[label=multiplicative_expression]    151 -> 150    152[label=additive_expression]    152 -> 151    153[label=shift_expression]    153 -> 152    154[label=relational_expression]    154 -> 153    155[label=equality_expression]    155 -> 154    156[label=AND_expression]    156 -> 155    157[label=exclusive_OR_expression]    157 -> 156    158[label=inclusive_OR_expression]    158 -> 157    159[label=logical_AND_expression]    159 -> 158    160[label=logical_OR_expression]    160 -> 159    161[label=conditional_expression]    161 -> 160    162[label=assignment_expression]    162 -> 161    163[label=expression_list]    163 -> 162    164[label=postfix_expression_3]    164 -> 144    165[label="("]    164 -> 165    164 -> 163    166[label=")"]    164 -> 166