digraph ethane {graph [ordering="out"];    1[label=simple_type_name]    2[label="int"]    1 -> 2    3[label=type_specifier]    3 -> 1    4[label=type_specifier_]    4 -> 3    5[label=name]    6[label="main"]    5 -> 6    7[label=declarator]    7 -> 5    8[label=simple_type_name]    9[label="int"]    8 -> 9    10[label=type_specifier]    10 -> 8    11[label=type_specifier_]    11 -> 10    12[label=unary2_operator]    13[label="*"]    12 -> 13    14[label=unary2_operator]    15[label="*"]    14 -> 15    16[label=abstract_declarator]    16 -> 14    17[label=abstract_declarator]    17 -> 12    17 -> 16    18[label=literal]    19[label="6.0"]    18 -> 19    20[label=primary_expression]    20 -> 18    21[label=postfix_expression]    21 -> 20    22[label=unary_expression]    22 -> 21    23[label=cast_expression]    23 -> 22    24[label=pm_expression]    24 -> 23    25[label=multiplicative_expression]    25 -> 24    26[label=additive_expression]    26 -> 25    27[label=shift_expression]    27 -> 26    28[label=relational_expression]    28 -> 27    29[label=equality_expression]    29 -> 28    30[label=AND_expression]    30 -> 29    31[label=exclusive_OR_expression]    31 -> 30    32[label=inclusive_OR_expression]    32 -> 31    33[label=logical_AND_expression]    33 -> 32    34[label=logical_OR_expression]    34 -> 33    35[label=conditional_expression]    35 -> 34    36[label=constant_expression]    36 -> 35    37[label=abstract_declarator]    37 -> 17    38[label="["]    37 -> 38    37 -> 36    39[label="]"]    37 -> 39    40[label=argument_declaration]    40 -> 11    40 -> 37    41[label=arg_declaration_list]    41 -> 40    42[label=argument_declaration_list]    42 -> 41    43[label=declarator]    43 -> 7    44[label="("]    43 -> 44    43 -> 42    45[label=")"]    43 -> 45    46[label=name]    47[label="f"]    46 -> 47    48[label=primary_expression]    48 -> 46    49[label=postfix_expression]    49 -> 48    50[label=literal]    51[label="3.0"]    50 -> 51    52[label=primary_expression]    52 -> 50    53[label=postfix_expression]    53 -> 52    54[label=unary_expression]    54 -> 53    55[label=cast_expression]    55 -> 54    56[label=pm_expression]    56 -> 55    57[label=multiplicative_expression]    57 -> 56    58[label=additive_expression]    58 -> 57    59[label=shift_expression]    59 -> 58    60[label=relational_expression]    60 -> 59    61[label=equality_expression]    61 -> 60    62[label=AND_expression]    62 -> 61    63[label=exclusive_OR_expression]    63 -> 62    64[label=inclusive_OR_expression]    64 -> 63    65[label=logical_AND_expression]    65 -> 64    66[label=logical_OR_expression]    66 -> 65    67[label=conditional_expression]    67 -> 66    68[label=assignment_expression]    68 -> 67    69[label=expression_list]    69 -> 68    70[label=literal]    71[label="4.0"]    70 -> 71    72[label=primary_expression]    72 -> 70    73[label=postfix_expression]    73 -> 72    74[label=unary_expression]    74 -> 73    75[label=cast_expression]    75 -> 74    76[label=pm_expression]    76 -> 75    77[label=multiplicative_expression]    77 -> 76    78[label=additive_expression]    78 -> 77    79[label=shift_expression]    79 -> 78    80[label=relational_expression]    80 -> 79    81[label=equality_expression]    81 -> 80    82[label=AND_expression]    82 -> 81    83[label=exclusive_OR_expression]    83 -> 82    84[label=inclusive_OR_expression]    84 -> 83    85[label=logical_AND_expression]    85 -> 84    86[label=logical_OR_expression]    86 -> 85    87[label=conditional_expression]    87 -> 86    88[label=assignment_expression]    88 -> 87    89[label=expression_list]    89 -> 69    90[label=","]    89 -> 90    89 -> 88    91[label=literal]    92[label="5.0"]    91 -> 92    93[label=primary_expression]    93 -> 91    94[label=postfix_expression]    94 -> 93    95[label=unary_expression]    95 -> 94    96[label=cast_expression]    96 -> 95    97[label=pm_expression]    97 -> 96    98[label=multiplicative_expression]    98 -> 97    99[label=additive_expression]    99 -> 98    100[label=shift_expression]    100 -> 99    101[label=relational_expression]    101 -> 100    102[label=equality_expression]    102 -> 101    103[label=AND_expression]    103 -> 102    104[label=exclusive_OR_expression]    104 -> 103    105[label=inclusive_OR_expression]    105 -> 104    106[label=logical_AND_expression]    106 -> 105    107[label=logical_OR_expression]    107 -> 106    108[label=conditional_expression]    108 -> 107    109[label=assignment_expression]    109 -> 108    110[label=expression_list]    110 -> 89    111[label=","]    110 -> 111    110 -> 109    112[label=postfix_expression]    112 -> 49    113[label="("]    112 -> 113    112 -> 110    114[label=")"]    112 -> 114    115[label=unary_expression]    115 -> 112    116[label=cast_expression]    116 -> 115    117[label=pm_expression]    117 -> 116    118[label=multiplicative_expression]    118 -> 117    119[label=additive_expression]    119 -> 118    120[label=shift_expression]    120 -> 119    121[label=relational_expression]    121 -> 120    122[label=equality_expression]    122 -> 121    123[label=AND_expression]    123 -> 122    124[label=exclusive_OR_expression]    124 -> 123    125[label=inclusive_OR_expression]    125 -> 124    126[label=logical_AND_expression]    126 -> 125    127[label=logical_OR_expression]    127 -> 126    128[label=conditional_expression]    128 -> 127    129[label=assignment_expression]    129 -> 128    130[label=expression]    130 -> 129    131[label=expression_statement]    131 -> 130    132[label=";"]    131 -> 132    133[label=statement]    133 -> 131    134[label=statement_list]    134 -> 133    135[label=compound_statement]    136[label="{"]    135 -> 136    135 -> 134    137[label="}"]    135 -> 137    138[label=fct_body]    138 -> 135    139[label=function_definition]    139 -> 4    139 -> 43    139 -> 138    140[label=declaration]    140 -> 139    141[label=declaration]    141 -> 139    142[label=declaration_seq]    142 -> 141    143[label=translation_unit]    143 -> 142    144[label=program]    144 -> 143
}
