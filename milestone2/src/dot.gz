digraph ethane {graph [ordering="out"];    1[label=simple_type_name]    2[label="int"]    1 -> 2    3[label=type_specifier]    3 -> 1    4[label=type_specifier_]    4 -> 3    5[label=name]    6[label="main"]    5 -> 6    7[label=declarator0]    7 -> 5    8[label=arg_list]    9[label=simple_type_name]    10[label="int"]    9 -> 10    11[label=type_specifier]    11 -> 9    12[label=type_specifier_]    12 -> 11    13[label=type_name]    13 -> 12    14[label=name]    15[label="a"]    14 -> 15    16[label=primary_expression0]    16 -> 14    17[label=postfix_expression]    17 -> 16    18[label=literal_number]    19[label="2.0"]    18 -> 19    20[label=primary_expression1]    20 -> 18    21[label=postfix_expression]    21 -> 20    22[label=unary_expression]    22 -> 21    23[label=cast_expression]    23 -> 22    24[label=multiplicative_expression]    24 -> 23    25[label=additive_expression]    25 -> 24    26[label=shift_expression]    26 -> 25    27[label=relational_expression]    27 -> 26    28[label=equality_expression]    28 -> 27    29[label=AND_expression]    29 -> 28    30[label=exclusive_OR_expression]    30 -> 29    31[label=inclusive_OR_expression]    31 -> 30    32[label=logical_AND_expression]    32 -> 31    33[label=logical_OR_expression]    33 -> 32    34[label=conditional_expression]    34 -> 33    35[label=assignment_expression]    35 -> 34    36[label=expression]    36 -> 35    37[label=postfix_expression]    37 -> 17    38[label="["]    37 -> 38    37 -> 36    39[label="]"]    37 -> 39    40[label=name]    41[label="c"]    40 -> 41    42[label=postfix_expression]    42 -> 37    43[label="."]    42 -> 43    42 -> 40    44[label=unary_expression]    44 -> 42    45[label=cast_expression]    45 -> 44    46[label=multiplicative_expression]    46 -> 45    47[label=additive_expression]    47 -> 46    48[label=shift_expression]    48 -> 47    49[label=relational_expression]    49 -> 48    50[label=equality_expression]    50 -> 49    51[label=AND_expression]    51 -> 50    52[label=exclusive_OR_expression]    52 -> 51    53[label=inclusive_OR_expression]    53 -> 52    54[label=logical_AND_expression]    54 -> 53    55[label=logical_OR_expression]    55 -> 54    56[label=conditional_expression]    56 -> 55    57[label=assignment_expression]    57 -> 56    58[label=expression]    58 -> 57    59[label=primary_expression3]    60[label="("]    59 -> 60    59 -> 58    61[label=")"]    59 -> 61    62[label=postfix_expression]    62 -> 59    63[label=unary_expression]    63 -> 62    64[label=cast_expression]    64 -> 63    65[label=cast_expression]    66[label="("]    65 -> 66    65 -> 13    67[label=")"]    65 -> 67    65 -> 64    68[label=multiplicative_expression]    68 -> 65    69[label=name]    70[label="b"]    69 -> 70    71[label=primary_expression0]    71 -> 69    72[label=postfix_expression]    72 -> 71    73[label=name]    74[label="ass"]    73 -> 74    75[label=postfix_expression]    75 -> 72    76[label="->"]    75 -> 76    75 -> 73    77[label=unary_expression]    77 -> 75    78[label=cast_expression]    78 -> 77    79[label=multiplicative_expression]    79 -> 68    80[label="/"]    79 -> 80    79 -> 78    81[label=additive_expression]    81 -> 79    82[label=shift_expression]    82 -> 81    83[label=relational_expression]    83 -> 82    84[label=equality_expression]    84 -> 83    85[label=AND_expression]    85 -> 84    86[label=exclusive_OR_expression]    86 -> 85    87[label=inclusive_OR_expression]    87 -> 86    88[label=logical_AND_expression]    88 -> 87    89[label=logical_OR_expression]    89 -> 88    90[label=conditional_expression]    90 -> 89    91[label=assignment_expression]    91 -> 90    92[label=expression]    92 -> 91    93[label=expression_statement]    93 -> 92    94[label=";"]    93 -> 94    95[label=statement]    95 -> 93    96[label=statement_list]    96 -> 95    97[label=compound_statement]    98[label="{"]    97 -> 98    97 -> 96    99[label="}"]    97 -> 99    100[label=fct_body]    100 -> 97    101[label=function_definition]    101 -> 4    101 -> 7    102[label="None"]    101 -> 102    101 -> 8    103[label=")"]    101 -> 103    101 -> 100    104[label="None"]    101 -> 104    105[label=declaration2]    105 -> 101    106[label=declaration_seq]    106 -> 105    107[label=translation_unit]    107 -> 106    108[label=program]    108 -> 107
}
