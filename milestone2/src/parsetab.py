
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSOPMINUSOPleftMULTOPDIVOPMODOPleftDPLUSOPDMINUSOPleftDOTARROWleftLSHIFTRSHIFTleftLTCOMPLTECOMPleftGTCOMPGTECOMPleftLOWERleftHIGHERANDOP ARROW ARROWSTAR ASM AUTO BANDEQOP BANDOP BNOP BOREQOP BREAK CASE CATCH CHAR CLASS COLON COMMA CONST CONTINUE DECIMAL DEFAULT DELETE DIVEQOP DIVOP DMINUSOP DO DOT DOTSTAR DOUBLE DOUBLEBNOP DPLUSOP ELSE EQCOMP EQUAL FLOAT FOR GOTO GTCOMP GTECOMP HASHTAG IDENTIFIER IF INCLUDE INT LCPAREN LONG LPAREN LSHIFT LSHIFTEQOP LSPAREN LTCOMP LTECOMP LTEMPLATE MINUSEQOP MINUSOP MODEQOP MODOP MULTEQOP MULTOP NEQCOMP NEW NOTSYM NUMBER OPERATOR OROP PLUSEQOP PLUSOP PRIVATE PROTECTED PUBLIC QUESMARK RCPAREN RETURN RPAREN RSHIFT RSHIFTEQOP RSPAREN RTEMPLATE SCHAR SEMICOLON SHORT SIGNED SIZEOF STRING STRING_L STRUCT SWITCH TEMPLATE THIS THROW TRY TYPE TYPEDEF UNSIGNED VOID WHILE XOREQOP XOROPcontrol_line : control_line control_line_stmt\n                    | control_line_stmt\n    include_control : HASHTAG INCLUDE\n    control_line_stmt : include_control LTCOMP STRING_L GTCOMP\n                    | include_control STRING_L\n    program : control_line translation_unit\n               | translation_unit\n    translation_unit : declaration_seq declaration_seq : declaration_seq declaration\n                        | declaration\n    empty :constant_expression : conditional_expressionconditional_expression : logical_OR_expression \n                              | logical_OR_expression QUESMARK expression COLON conditional_expression \n    logical_OR_expression : logical_AND_expression \n                             | logical_OR_expression OROP logical_AND_expression \n    logical_AND_expression : inclusive_OR_expression %prec LOWER\n                              | logical_AND_expression ANDOP inclusive_OR_expression %prec HIGHER\n    inclusive_OR_expression : exclusive_OR_expression %prec LOWER\n                               | inclusive_OR_expression OROP exclusive_OR_expression %prec HIGHER\n    exclusive_OR_expression : AND_expression \n                               | exclusive_OR_expression XOROP AND_expression \n    AND_expression : equality_expression \n                      | AND_expression BANDOP equality_expression \n    equality_expression : relational_expression \n                           | equality_expression EQCOMP relational_expression \n                           | equality_expression NEQCOMP relational_expression \n    relational_expression : shift_expression \n                             | relational_expression LTCOMP  shift_expression \n                             | relational_expression GTCOMP  shift_expression \n                             | relational_expression LTECOMP shift_expression \n                             | relational_expression GTECOMP shift_expression \n    shift_expression : additive_expression \n                        | shift_expression LSHIFT additive_expression \n                        | shift_expression RSHIFT additive_expression \n    additive_expression : multiplicative_expression \n                           | additive_expression PLUSOP multiplicative_expression \n                           | additive_expression MINUSOP multiplicative_expression \n    multiplicative_expression : cast_expression \n                                 | multiplicative_expression MULTOP cast_expression \n                                 | multiplicative_expression DIVOP cast_expression \n                                 | multiplicative_expression MODOP cast_expression \n    cast_expression : unary_expression \n                       | LPAREN type_name  RPAREN  cast_expression \n    expression : assignment_expression \n                  | throw_expression\n                  | expression COMMA assignment_expression \n    throw_expression : THROW expression \n                        | THROW \n    assignment_expression : conditional_expression \n                             | unary_expression  assignment_operator assignment_expression \n    assignment_operator : EQUAL \n                           | MULTEQOP \n                           | DIVEQOP \n                           | MODEQOP \n                           | PLUSEQOP \n                           | MINUSEQOP \n                           | LSHIFTEQOP \n                           | RSHIFTEQOP \n                           | BANDEQOP \n                           | BOREQOP \n    unary_expression : postfix_expression \n                        | DPLUSOP unary_expression \n                        | DMINUSOP unary_expression \n                        | unary1_operator cast_expression \n                        | unary2_operator cast_expression \n                        | SIZEOF  unary_expression \n                        | SIZEOF LPAREN type_name  RPAREN \n                        | allocation_expression \n                        | deallocation_expression \n    deallocation_expression : DELETE cast_expression  allocation_expression : NEW new_type_name new_initializer \n                             | NEW new_type_name \n                             | NEW LPAREN type_name  RPAREN  new_initializer \n                             | NEW LPAREN type_name  RPAREN \n    new_type_name : type_specifier_ new_declarator \n                     | type_specifier_ \n    new_declarator : new_declarator MULTOP\n                      | MULTOP \n                      | new_declarator LSPAREN expression RSPAREN \n                      | LSPAREN expression RSPAREN \n    new_initializer : LPAREN initializer_list  RPAREN \n                       | LPAREN  RPAREN \n    unary1_operator : PLUSOP \n                      | MINUSOP \n                      | NOTSYM \n                      | BNOP \n    unary2_operator : MULTOP \n                      | BANDOP \n    postfix_expression : primary_expression postfix_expression : postfix_expression LSPAREN expression RSPAREN  postfix_expression : postfix_expression  LPAREN expression_list  RPAREN \n                          | postfix_expression LPAREN  RPAREN \n    postfix_expression : postfix_expression template_class_name  LPAREN expression_list  RPAREN   postfix_expression : postfix_expression     DOT name  postfix_expression : postfix_expression     ARROW name  postfix_expression : postfix_expression     DPLUSOP \n                          | postfix_expression     DMINUSOP \n    primary_expression : name   \n     primary_expression : literal primary_expression : THIS  \n    primary_expression : LPAREN expression  RPAREN   \n    literal :  STRING_L literal : NUMBER literal : DECIMAL literal : SCHAR abstract_declarator : unary2_operator %prec LOWER\n                           | unary2_operator abstract_declarator %prec LOWER\n                           | LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | LSPAREN  RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN RSPAREN %prec HIGHER\n    declarator : name declarator : unary2_operator declarator %prec HIGHER  declarator :  declarator LSPAREN constant_expression RSPAREN  declarator : declarator LSPAREN RSPAREN   arg_list : argument_declaration_list \n                  |\n    argument_declaration_list : argument_declaration \n                                 | argument_declaration COMMA argument_declaration_list\n    argument_declaration : type_specifier_ declarator   argument_declaration :  type_specifier_ declarator  EQUAL expression argument_declaration : type_specifier_ abstract_declarator argument_declaration :  type_specifier_ name : IDENTIFIER \n            | DOUBLEBNOP IDENTIFIER \n    operator_name : NEW \n                     | DELETE \n                     | PLUSOP \n                     | MINUSOP \n                     | MULTOP \n                     | DIVOP \n                     | MODOP \n                     | XOROP \n                     | BANDOP \n                     | BNOP \n                     | NOTSYM \n                     | EQUAL \n                     | LTCOMP \n                     | GTCOMP \n                     | PLUSEQOP \n                     | MINUSEQOP \n                     | MULTEQOP \n                     | DIVEQOP \n                     | MODEQOP \n                     | XOREQOP \n                     | BANDEQOP \n                     | LSHIFT \n                     | RSHIFT \n                     | RSHIFTEQOP \n                     | LSHIFTEQOP \n                     | EQCOMP \n                     | NEQCOMP \n                     | LTECOMP \n                     | GTECOMP \n                     | ANDOP \n                     | OROP \n                     | DPLUSOP \n                     | DMINUSOP \n                     | COMMA \n                     | ARROWSTAR \n                     | ARROW \n    template_class_name : LTEMPLATE template_arg_list RTEMPLATEtemplate_arg_list : type_name \n                         | template_arg_list COMMA type_name\n    type_name : type_specifier_ abstract_declarator \n                 | type_specifier_ \n    type_specifier_ : CONST type_specifier \n                       | type_specifier\n    typedef_declarator : TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON\n                          | TYPEDEF type_specifier_  IDENTIFIER SEMICOLON\n    type_specifier : simple_type_name \n                      | complex_type_specifier  \n    simple_type_name : CHAR \n                        | SHORT \n                        | INT \n                        | LONG \n                        | SIGNED \n                        | UNSIGNED \n                        | FLOAT \n                        | DOUBLE \n                        | VOID\n                        | STRING\n                        | AUTO\n\n    complex_type_specifier : class_key IDENTIFIER \n                                | class_key  IDENTIFIER template_class_name\n                                | TYPE IDENTIFIER \n                                | TYPE IDENTIFIER template_class_name\n                                 \n    pure_specifier : EQUAL NUMBERbase_spec : COLON base_listbase_list : base_specifier\n                 | base_list COMMA base_specifier \n    base_specifier : class_key  IDENTIFIER \n                      | class_key  IDENTIFIER template_class_name\n                      | IDENTIFIER \n                      | IDENTIFIER template_class_name\n                      | access_specifier class_key IDENTIFIER\n                      | access_specifier class_key IDENTIFIER template_class_name\n    class_key : CLASS \n                 | STRUCT\n    class_head : class_key IDENTIFIER base_spec \n                  | class_key IDENTIFIER \n    class_define_specifier : class_head push_scope LCPAREN RCPAREN pop_scope\n    class_define_specifier : class_head push_scope LCPAREN member_list RCPAREN pop_scope\n    member_list : member_access_list\n    member_list : access_list\n    member_list : member_list access_list\n    access_specifier : PRIVATE\n                        | PROTECTED\n                        | PUBLIC\n    access_list : access_specifier COLON member_access_list\n                   | access_specifier COLON member_access_list : member_declaration member_access_listmember_access_list : member_declaration member_declaration : type_specifier_ member_declarator_list SEMICOLON\n                          | member_declarator_list SEMICOLON\n                          | SEMICOLON\n    member_declaration : function_definition\n    member_declarator_list : member_declarator \n                              | member_declarator COMMA member_declarator_list\n    member_declarator : declarator pure_specifier \n                         | declarator \n                         \n    function_definition : type_specifier_ declarator func_push_scope arg_list  RPAREN fct_body pop_scope \n    function_decl : type_specifier_ declarator func_push_scope arg_list  RPAREN SEMICOLON pop_scope  func_push_scope : LPAREN fct_body : compound_statementcompound_statement : LCPAREN statement_list RCPAREN \n                          | LCPAREN RCPAREN \n    statement_list : statement \n                      | statement_list statement \n    statement : expression_statement \n                 | push_scope compound_statement pop_scope\n                 | selection_statement \n                 | iteration_statement \n                 | jump_statement \n                 | declaration_statement \n                 | try_block \n    jump_statement : BREAK SEMICOLON \n                      | CONTINUE SEMICOLON \n                      | RETURN expression SEMICOLON \n                      | RETURN SEMICOLON \n                      | GOTO IDENTIFIER SEMICOLON \n    selection_statement : IF LPAREN expression  RPAREN push_scope compound_statement pop_scope\n                           | IF LPAREN expression  RPAREN push_scope compound_statement pop_scope ELSE push_scope compound_statement pop_scope \n                           | SWITCH LPAREN expression  RPAREN push_scope  LCPAREN labeled_statement_list RCPAREN pop_scope\n    try_block : TRY push_scope compound_statement pop_scope CATCH  push_scope compound_statement pop_scopelabeled_statement_list : labeled_statement\n                              | labeled_statement_list labeled_statement \n    labeled_statement : CASE constant_expression COLON statement_list\n                         | DEFAULT COLON statement_list\n    iteration_statement : WHILE push_scope LPAREN expression  RPAREN  statement pop_scope \n                           | DO push_scope statement WHILE LPAREN expression  RPAREN  SEMICOLON pop_scope \n                           | FOR LPAREN push_scope for_init_statement expression SEMICOLON expression  RPAREN  compound_statement pop_scope \n                           | FOR LPAREN push_scope for_init_statement SEMICOLON expression  RPAREN  compound_statement pop_scope \n                           | FOR LPAREN push_scope for_init_statement expression SEMICOLON  RPAREN  compound_statement pop_scope \n                           | FOR LPAREN push_scope for_init_statement SEMICOLON  RPAREN  statement pop_scope \n    for_init_statement : expression_statement \n                          | declaration_statement \n    expression_statement : expression SEMICOLON \n                            | SEMICOLON \n    declaration_statement : declarationdeclaration : type_specifier_ declarator_list SEMICOLON declaration :  asm_declaration  declaration :  function_definition \n                    | function_decl\n    declaration : class_define_specifier SEMICOLON declaration :  template_declaration declaration : typedef_declarator template_declaration : TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declarationtemplate_argument_list : argument_declaration\n                              | template_argument_list COMMA argument_declaration\n    declarator_list : init_declarator \n                       | declarator_list COMMA init_declarator \n    init_declarator : declarator initializer \n                       | declarator \n    initializer :   EQUAL assignment_expressioninitializer :   EQUAL LCPAREN initializer_list RCPARENinitializer :   EQUAL LCPAREN initializer_list COMMA RCPARENinitializer :   LPAREN expression_list  RPARENinitializer_list : assignment_expression \n                        | initializer_list COMMA assignment_expression \n                        | LCPAREN initializer_list RCPAREN \n                        | LCPAREN initializer_list COMMA RCPAREN \n    asm_declaration : ASM LPAREN STRING_L  RPAREN  SEMICOLONexpression_list : assignment_expression \n                       | expression_list COMMA assignment_expression \n    push_scope : pop_scope : '
    
_lr_action_items = {'HASHTAG':([0,2,4,40,43,88,],[8,8,-2,-1,-5,-4,]),'CONST':([0,2,4,5,7,10,11,12,14,15,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[16,16,-2,16,-10,-263,-264,-265,-267,-268,16,-1,-9,-5,-266,16,-262,16,-225,16,16,-4,16,16,16,16,-217,-218,16,16,-171,16,16,16,-284,16,-216,-269,-170,16,-288,-288,-226,16,-215,16,-225,-223,-224,16,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,16,-287,-238,-239,-241,-232,16,-240,-242,16,-288,-288,16,-243,-251,-288,-288,-288,16,-288,-288,-288,-256,-246,-245,16,16,-252,-288,-255,-254,-288,16,-253,-244,]),'ASM':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,88,155,162,236,248,251,262,263,264,265,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[18,18,-2,18,-10,-263,-264,-265,-267,-268,-1,-9,-5,-266,-262,-4,18,-171,-284,-269,-170,-288,-288,-226,18,-223,-224,18,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,18,-287,-238,-239,-241,-232,18,-240,-242,18,-288,-288,18,-243,-251,-288,-288,-288,18,-288,-288,-288,-256,-246,-245,18,18,-252,-288,-255,-254,-288,18,-253,-244,]),'TEMPLATE':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,88,155,162,236,248,251,262,263,264,265,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[20,20,-2,20,-10,-263,-264,-265,-267,-268,-1,-9,-5,-266,-262,-4,20,-171,-284,-269,-170,-288,-288,-226,20,-223,-224,20,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,20,-287,-238,-239,-241,-232,20,-240,-242,20,-288,-288,20,-243,-251,-288,-288,-288,20,-288,-288,-288,-256,-246,-245,20,20,-252,-288,-255,-254,-288,20,-253,-244,]),'TYPEDEF':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,88,155,162,236,248,251,262,263,264,265,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[21,21,-2,21,-10,-263,-264,-265,-267,-268,-1,-9,-5,-266,-262,-4,21,-171,-284,-269,-170,-288,-288,-226,21,-223,-224,21,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,21,-287,-238,-239,-241,-232,21,-240,-242,21,-288,-288,21,-243,-251,-288,-288,-288,21,-288,-288,-288,-256,-246,-245,21,21,-252,-288,-255,-254,-288,21,-253,-244,]),'CHAR':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[25,25,-2,25,-10,-263,-264,-265,-267,-268,25,25,-1,-9,-5,-266,25,-262,25,-225,25,25,-4,25,25,25,25,-217,-218,25,25,-171,25,25,25,-284,25,-216,-269,-170,25,-288,-288,-226,25,-215,25,-225,-223,-224,25,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,25,-287,-238,-239,-241,-232,25,-240,-242,25,-288,-288,25,-243,-251,-288,-288,-288,25,-288,-288,-288,-256,-246,-245,25,25,-252,-288,-255,-254,-288,25,-253,-244,]),'SHORT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[26,26,-2,26,-10,-263,-264,-265,-267,-268,26,26,-1,-9,-5,-266,26,-262,26,-225,26,26,-4,26,26,26,26,-217,-218,26,26,-171,26,26,26,-284,26,-216,-269,-170,26,-288,-288,-226,26,-215,26,-225,-223,-224,26,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,26,-287,-238,-239,-241,-232,26,-240,-242,26,-288,-288,26,-243,-251,-288,-288,-288,26,-288,-288,-288,-256,-246,-245,26,26,-252,-288,-255,-254,-288,26,-253,-244,]),'INT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[27,27,-2,27,-10,-263,-264,-265,-267,-268,27,27,-1,-9,-5,-266,27,-262,27,-225,27,27,-4,27,27,27,27,-217,-218,27,27,-171,27,27,27,-284,27,-216,-269,-170,27,-288,-288,-226,27,-215,27,-225,-223,-224,27,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,27,-287,-238,-239,-241,-232,27,-240,-242,27,-288,-288,27,-243,-251,-288,-288,-288,27,-288,-288,-288,-256,-246,-245,27,27,-252,-288,-255,-254,-288,27,-253,-244,]),'LONG':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[28,28,-2,28,-10,-263,-264,-265,-267,-268,28,28,-1,-9,-5,-266,28,-262,28,-225,28,28,-4,28,28,28,28,-217,-218,28,28,-171,28,28,28,-284,28,-216,-269,-170,28,-288,-288,-226,28,-215,28,-225,-223,-224,28,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,28,-287,-238,-239,-241,-232,28,-240,-242,28,-288,-288,28,-243,-251,-288,-288,-288,28,-288,-288,-288,-256,-246,-245,28,28,-252,-288,-255,-254,-288,28,-253,-244,]),'SIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[29,29,-2,29,-10,-263,-264,-265,-267,-268,29,29,-1,-9,-5,-266,29,-262,29,-225,29,29,-4,29,29,29,29,-217,-218,29,29,-171,29,29,29,-284,29,-216,-269,-170,29,-288,-288,-226,29,-215,29,-225,-223,-224,29,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,29,-287,-238,-239,-241,-232,29,-240,-242,29,-288,-288,29,-243,-251,-288,-288,-288,29,-288,-288,-288,-256,-246,-245,29,29,-252,-288,-255,-254,-288,29,-253,-244,]),'UNSIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[30,30,-2,30,-10,-263,-264,-265,-267,-268,30,30,-1,-9,-5,-266,30,-262,30,-225,30,30,-4,30,30,30,30,-217,-218,30,30,-171,30,30,30,-284,30,-216,-269,-170,30,-288,-288,-226,30,-215,30,-225,-223,-224,30,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,30,-287,-238,-239,-241,-232,30,-240,-242,30,-288,-288,30,-243,-251,-288,-288,-288,30,-288,-288,-288,-256,-246,-245,30,30,-252,-288,-255,-254,-288,30,-253,-244,]),'FLOAT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[31,31,-2,31,-10,-263,-264,-265,-267,-268,31,31,-1,-9,-5,-266,31,-262,31,-225,31,31,-4,31,31,31,31,-217,-218,31,31,-171,31,31,31,-284,31,-216,-269,-170,31,-288,-288,-226,31,-215,31,-225,-223,-224,31,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,31,-287,-238,-239,-241,-232,31,-240,-242,31,-288,-288,31,-243,-251,-288,-288,-288,31,-288,-288,-288,-256,-246,-245,31,31,-252,-288,-255,-254,-288,31,-253,-244,]),'DOUBLE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[32,32,-2,32,-10,-263,-264,-265,-267,-268,32,32,-1,-9,-5,-266,32,-262,32,-225,32,32,-4,32,32,32,32,-217,-218,32,32,-171,32,32,32,-284,32,-216,-269,-170,32,-288,-288,-226,32,-215,32,-225,-223,-224,32,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,32,-287,-238,-239,-241,-232,32,-240,-242,32,-288,-288,32,-243,-251,-288,-288,-288,32,-288,-288,-288,-256,-246,-245,32,32,-252,-288,-255,-254,-288,32,-253,-244,]),'VOID':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[33,33,-2,33,-10,-263,-264,-265,-267,-268,33,33,-1,-9,-5,-266,33,-262,33,-225,33,33,-4,33,33,33,33,-217,-218,33,33,-171,33,33,33,-284,33,-216,-269,-170,33,-288,-288,-226,33,-215,33,-225,-223,-224,33,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,33,-287,-238,-239,-241,-232,33,-240,-242,33,-288,-288,33,-243,-251,-288,-288,-288,33,-288,-288,-288,-256,-246,-245,33,33,-252,-288,-255,-254,-288,33,-253,-244,]),'STRING':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[34,34,-2,34,-10,-263,-264,-265,-267,-268,34,34,-1,-9,-5,-266,34,-262,34,-225,34,34,-4,34,34,34,34,-217,-218,34,34,-171,34,34,34,-284,34,-216,-269,-170,34,-288,-288,-226,34,-215,34,-225,-223,-224,34,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,34,-287,-238,-239,-241,-232,34,-240,-242,34,-288,-288,34,-243,-251,-288,-288,-288,34,-288,-288,-288,-256,-246,-245,34,34,-252,-288,-255,-254,-288,34,-253,-244,]),'AUTO':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[35,35,-2,35,-10,-263,-264,-265,-267,-268,35,35,-1,-9,-5,-266,35,-262,35,-225,35,35,-4,35,35,35,35,-217,-218,35,35,-171,35,35,35,-284,35,-216,-269,-170,35,-288,-288,-226,35,-215,35,-225,-223,-224,35,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,35,-287,-238,-239,-241,-232,35,-240,-242,35,-288,-288,35,-243,-251,-288,-288,-288,35,-288,-288,-288,-256,-246,-245,35,35,-252,-288,-255,-254,-288,35,-253,-244,]),'TYPE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,86,88,111,124,132,144,148,149,155,156,162,176,215,217,236,241,244,248,251,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[36,36,-2,36,-10,-263,-264,-265,-267,-268,36,36,-1,-9,-5,-266,36,-262,36,-225,36,36,-4,36,36,36,36,-217,-218,36,36,-171,36,36,36,-284,36,-216,-269,-170,36,-288,-288,-226,36,-215,36,-225,-223,-224,36,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,36,-287,-238,-239,-241,-232,36,-240,-242,36,-288,-288,36,-243,-251,-288,-288,-288,36,-288,-288,-288,-256,-246,-245,36,36,-252,-288,-255,-254,-288,36,-253,-244,]),'CLASS':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,85,86,88,111,124,132,144,148,149,150,151,152,155,156,162,170,176,215,217,236,241,244,248,251,255,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[37,37,-2,37,-10,-263,-264,-265,-267,-268,37,37,-1,-9,-5,-266,37,-262,37,-225,37,37,37,-4,37,37,37,37,-217,-218,-208,-209,-210,37,37,-171,37,37,37,37,-284,37,-216,-269,-170,37,37,-288,-288,-226,37,-215,37,-225,-223,-224,37,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,37,-287,-238,-239,-241,-232,37,-240,-242,37,-288,-288,37,-243,-251,-288,-288,-288,37,-288,-288,-288,-256,-246,-245,37,37,-252,-288,-255,-254,-288,37,-253,-244,]),'STRUCT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,59,64,66,69,75,85,86,88,111,124,132,144,148,149,150,151,152,155,156,162,170,176,215,217,236,241,244,248,251,255,260,262,263,264,265,310,311,312,321,322,323,324,325,326,328,329,330,331,332,334,338,344,365,366,367,368,372,373,374,375,377,389,394,395,396,409,414,416,420,422,427,432,433,435,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,],[38,38,-2,38,-10,-263,-264,-265,-267,-268,38,38,-1,-9,-5,-266,38,-262,38,-225,38,38,38,-4,38,38,38,38,-217,-218,-208,-209,-210,38,38,-171,38,38,38,38,-284,38,-216,-269,-170,38,38,-288,-288,-226,38,-215,38,-225,-223,-224,38,-228,-229,-231,-233,-234,-235,-236,-237,-260,-287,-261,-227,-230,-288,-259,38,-287,-238,-239,-241,-232,38,-240,-242,38,-288,-288,38,-243,-251,-288,-288,-288,38,-288,-288,-288,-256,-246,-245,38,38,-252,-288,-255,-254,-288,38,-253,-244,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'control_line':([0,],[2,]),'translation_unit':([0,2,],[3,39,]),'control_line_stmt':([0,2,],[4,40,]),'declaration_seq':([0,2,],[5,5,]),'include_control':([0,2,],[6,6,]),'declaration':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[7,7,41,248,344,344,344,344,344,344,344,344,344,344,]),'type_specifier_':([0,2,5,21,59,66,75,86,111,124,132,144,155,156,176,215,217,241,260,265,311,323,372,394,409,420,438,447,448,454,],[9,9,9,60,78,78,146,173,173,218,173,146,9,78,78,173,173,146,173,9,78,9,9,9,9,9,9,9,9,9,]),'asm_declaration':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function_definition':([0,2,5,75,144,155,241,265,323,372,394,409,420,438,447,448,454,],[11,11,11,149,149,11,149,11,11,11,11,11,11,11,11,11,11,]),'function_decl':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'class_define_specifier':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'template_declaration':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'typedef_declarator':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'type_specifier':([0,2,5,16,21,59,66,75,86,111,124,132,144,155,156,176,215,217,241,260,265,311,323,372,394,409,420,438,447,448,454,],[17,17,17,55,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'class_head':([0,2,5,155,265,323,372,394,409,420,438,447,448,454,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'simple_type_name':([0,2,5,16,21,59,66,75,86,111,124,132,144,155,156,176,215,217,241,260,265,311,323,372,394,409,420,438,447,448,454,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'complex_type_specifier':([0,2,5,16,21,59,66,75,86,111,124,132,144,155,156,176,215,217,241,260,265,311,323,372,394,409,420,438,447,448,454,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'class_key':([0,2,5,16,21,59,66,75,85,86,111,124,132,144,155,156,170,176,215,217,241,255,260,265,311,323,372,394,409,420,438,447,448,454,],[24,24,24,56,56,56,56,56,168,56,56,56,56,56,24,56,258,56,56,56,56,168,56,24,56,24,24,24,24,24,24,24,24,24,]),'declarator_list':([9,],[45,]),'declarator':([9,49,65,75,78,144,146,159,241,245,],[46,71,90,154,157,154,243,71,154,154,]),'init_declarator':([9,65,],[47,89,]),'name':([9,49,65,67,69,70,75,78,82,111,113,114,115,116,117,125,132,138,144,146,159,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,205,206,210,215,221,222,233,241,245,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[48,48,48,121,121,121,48,48,121,121,121,121,121,121,121,121,121,121,48,48,48,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,294,295,121,121,121,121,121,48,48,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'unary2_operator':([9,49,60,65,67,69,70,75,78,81,82,111,113,114,115,116,117,125,132,138,144,146,159,161,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,241,245,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[49,49,81,49,116,116,116,49,159,81,116,116,116,116,116,116,116,116,116,116,49,49,159,116,81,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,49,49,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'push_scope':([19,265,323,337,338,345,372,373,399,400,409,413,420,434,438,447,448,454,],[58,327,327,371,372,379,327,394,407,408,327,421,327,445,327,327,327,327,]),'func_push_scope':([46,243,],[66,311,]),'initializer':([46,90,],[68,68,]),'template_argument_list':([59,],[76,]),'argument_declaration':([59,66,156,176,311,],[77,93,249,93,93,]),'abstract_declarator':([60,78,81,159,173,],[79,158,163,163,261,]),'base_spec':([61,],[83,]),'template_class_name':([61,62,73,112,169,256,319,],[84,87,84,204,257,318,364,]),'arg_list':([66,311,],[91,363,]),'argument_declaration_list':([66,176,311,],[92,266,92,]),'constant_expression':([67,82,161,425,],[94,164,252,437,]),'conditional_expression':([67,69,70,82,111,132,138,161,174,178,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[96,135,135,96,135,135,135,96,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,380,135,135,135,135,135,135,135,135,135,135,135,135,135,135,96,135,135,135,135,]),'logical_OR_expression':([67,69,70,82,111,132,138,161,174,178,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'logical_AND_expression':([67,69,70,82,111,132,138,161,174,178,179,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[98,98,98,98,98,98,98,98,98,98,268,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'inclusive_OR_expression':([67,69,70,82,111,132,138,161,174,178,179,180,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[99,99,99,99,99,99,99,99,99,99,99,269,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'exclusive_OR_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[100,100,100,100,100,100,100,100,100,100,100,100,270,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'AND_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[101,101,101,101,101,101,101,101,101,101,101,101,101,271,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'equality_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,183,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,272,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'relational_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,183,184,185,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,273,274,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'shift_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,275,276,277,278,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'additive_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,279,280,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'multiplicative_expression':([67,69,70,82,111,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,281,282,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cast_expression':([67,69,70,82,111,115,116,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[109,109,109,109,109,212,213,219,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,283,284,285,109,109,109,109,109,109,109,109,109,109,347,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'unary_expression':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[110,136,136,110,136,209,211,110,110,214,110,136,136,110,136,136,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,136,136,136,136,136,136,136,136,136,136,110,136,136,136,136,136,136,136,110,136,136,136,136,136,136,136,136,136,136,136,136,136,136,110,136,136,136,136,]),'postfix_expression':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'unary1_operator':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'allocation_expression':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'deallocation_expression':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'primary_expression':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'literal':([67,69,70,82,111,113,114,115,116,117,125,132,138,161,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,202,203,210,215,221,222,233,250,265,286,288,293,298,302,307,323,342,346,357,360,369,370,372,383,392,394,403,409,410,412,418,420,425,438,447,448,454,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'expression_list':([69,174,203,293,],[133,133,291,351,]),'assignment_expression':([69,70,111,132,138,174,178,201,202,203,210,215,221,222,233,250,265,288,293,298,302,307,323,342,357,360,369,370,372,383,392,394,403,409,410,412,418,420,438,447,448,454,],[134,137,199,199,235,134,199,199,199,134,199,199,303,304,235,199,199,348,134,235,199,362,199,199,199,362,199,199,199,362,199,199,199,199,199,199,199,199,199,199,199,199,]),'member_list':([75,],[141,]),'member_access_list':([75,144,241,],[142,240,309,]),'access_list':([75,141,],[143,239,]),'member_declaration':([75,144,241,],[144,144,144,]),'access_specifier':([75,85,141,255,],[145,170,145,170,]),'member_declarator_list':([75,144,146,241,245,],[147,147,242,147,313,]),'member_declarator':([75,144,146,241,245,],[153,153,153,153,153,]),'base_list':([85,],[166,]),'base_specifier':([85,255,],[167,317,]),'template_arg_list':([86,],[171,]),'type_name':([86,111,132,215,217,260,],[172,197,197,296,299,320,]),'expression':([111,132,178,201,202,210,215,250,265,302,323,342,357,369,370,372,392,394,403,409,410,412,418,420,438,447,448,454,],[198,198,267,289,290,198,198,315,333,358,333,376,385,390,391,333,401,333,411,333,417,419,429,333,333,333,333,333,]),'throw_expression':([111,132,178,201,202,210,215,250,265,302,323,342,357,369,370,372,392,394,403,409,410,412,418,420,438,447,448,454,],[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,]),'new_type_name':([124,],[216,]),'assignment_operator':([136,],[222,]),'initializer_list':([138,233,298,],[234,305,353,]),'pop_scope':([140,238,262,263,367,397,414,416,432,433,435,439,441,442,450,453,],[237,308,321,322,389,406,422,427,443,444,446,449,451,452,455,456,]),'pure_specifier':([154,243,],[246,246,]),'fct_body':([175,388,],[262,262,]),'compound_statement':([175,327,379,388,407,421,430,431,440,445,],[264,367,397,264,414,433,441,442,450,453,]),'new_initializer':([216,355,],[297,384,]),'new_declarator':([218,],[300,]),'statement_list':([265,438,447,],[323,448,454,]),'statement':([265,323,372,409,420,438,447,448,454,],[325,366,393,416,432,325,325,366,366,]),'expression_statement':([265,323,372,394,409,420,438,447,448,454,],[326,326,326,404,326,326,326,326,326,326,]),'selection_statement':([265,323,372,409,420,438,447,448,454,],[328,328,328,328,328,328,328,328,328,]),'iteration_statement':([265,323,372,409,420,438,447,448,454,],[329,329,329,329,329,329,329,329,329,]),'jump_statement':([265,323,372,409,420,438,447,448,454,],[330,330,330,330,330,330,330,330,330,]),'declaration_statement':([265,323,372,394,409,420,438,447,448,454,],[331,331,331,405,331,331,331,331,331,331,]),'try_block':([265,323,372,409,420,438,447,448,454,],[332,332,332,332,332,332,332,332,332,]),'for_init_statement':([394,],[403,]),'labeled_statement_list':([415,],[423,]),'labeled_statement':([415,423,],[424,436,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('control_line -> control_line control_line_stmt','control_line',2,'p_control_line','parser.py',126),
  ('control_line -> control_line_stmt','control_line',1,'p_control_line','parser.py',127),
  ('include_control -> HASHTAG INCLUDE','include_control',2,'p_include_control','parser.py',133),
  ('control_line_stmt -> include_control LTCOMP STRING_L GTCOMP','control_line_stmt',4,'p_control_line_stmt','parser.py',139),
  ('control_line_stmt -> include_control STRING_L','control_line_stmt',2,'p_control_line_stmt','parser.py',140),
  ('program -> control_line translation_unit','program',2,'p_program','parser.py',146),
  ('program -> translation_unit','program',1,'p_program','parser.py',147),
  ('translation_unit -> declaration_seq','translation_unit',1,'p_translation_unit','parser.py',153),
  ('declaration_seq -> declaration_seq declaration','declaration_seq',2,'p_declaration_seq','parser.py',158),
  ('declaration_seq -> declaration','declaration_seq',1,'p_declaration_seq','parser.py',159),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',169),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',174),
  ('conditional_expression -> logical_OR_expression','conditional_expression',1,'p_conditional_expression','parser.py',180),
  ('conditional_expression -> logical_OR_expression QUESMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',181),
  ('logical_OR_expression -> logical_AND_expression','logical_OR_expression',1,'p_logical_OR_expression','parser.py',195),
  ('logical_OR_expression -> logical_OR_expression OROP logical_AND_expression','logical_OR_expression',3,'p_logical_OR_expression','parser.py',196),
  ('logical_AND_expression -> inclusive_OR_expression','logical_AND_expression',1,'p_logical_AND_expression','parser.py',209),
  ('logical_AND_expression -> logical_AND_expression ANDOP inclusive_OR_expression','logical_AND_expression',3,'p_logical_AND_expression','parser.py',210),
  ('inclusive_OR_expression -> exclusive_OR_expression','inclusive_OR_expression',1,'p_inclusive_OR_expression','parser.py',223),
  ('inclusive_OR_expression -> inclusive_OR_expression OROP exclusive_OR_expression','inclusive_OR_expression',3,'p_inclusive_OR_expression','parser.py',224),
  ('exclusive_OR_expression -> AND_expression','exclusive_OR_expression',1,'p_exclusive_OR_expression','parser.py',237),
  ('exclusive_OR_expression -> exclusive_OR_expression XOROP AND_expression','exclusive_OR_expression',3,'p_exclusive_OR_expression','parser.py',238),
  ('AND_expression -> equality_expression','AND_expression',1,'p_AND_expression','parser.py',251),
  ('AND_expression -> AND_expression BANDOP equality_expression','AND_expression',3,'p_AND_expression','parser.py',252),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',265),
  ('equality_expression -> equality_expression EQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',266),
  ('equality_expression -> equality_expression NEQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',267),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',280),
  ('relational_expression -> relational_expression LTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',281),
  ('relational_expression -> relational_expression GTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',282),
  ('relational_expression -> relational_expression LTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',283),
  ('relational_expression -> relational_expression GTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',284),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',297),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',298),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',299),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',312),
  ('additive_expression -> additive_expression PLUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',313),
  ('additive_expression -> additive_expression MINUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',314),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',328),
  ('multiplicative_expression -> multiplicative_expression MULTOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',329),
  ('multiplicative_expression -> multiplicative_expression DIVOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',330),
  ('multiplicative_expression -> multiplicative_expression MODOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',331),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',347),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',348),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',357),
  ('expression -> throw_expression','expression',1,'p_expression','parser.py',358),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',359),
  ('throw_expression -> THROW expression','throw_expression',2,'p_throw_expression','parser.py',367),
  ('throw_expression -> THROW','throw_expression',1,'p_throw_expression','parser.py',368),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',375),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',376),
  ('assignment_operator -> EQUAL','assignment_operator',1,'p_assignment_operator','parser.py',385),
  ('assignment_operator -> MULTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',386),
  ('assignment_operator -> DIVEQOP','assignment_operator',1,'p_assignment_operator','parser.py',387),
  ('assignment_operator -> MODEQOP','assignment_operator',1,'p_assignment_operator','parser.py',388),
  ('assignment_operator -> PLUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',389),
  ('assignment_operator -> MINUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',390),
  ('assignment_operator -> LSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',391),
  ('assignment_operator -> RSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',392),
  ('assignment_operator -> BANDEQOP','assignment_operator',1,'p_assignment_operator','parser.py',393),
  ('assignment_operator -> BOREQOP','assignment_operator',1,'p_assignment_operator','parser.py',394),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',400),
  ('unary_expression -> DPLUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',401),
  ('unary_expression -> DMINUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',402),
  ('unary_expression -> unary1_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',403),
  ('unary_expression -> unary2_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',404),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',405),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',406),
  ('unary_expression -> allocation_expression','unary_expression',1,'p_unary_expression','parser.py',407),
  ('unary_expression -> deallocation_expression','unary_expression',1,'p_unary_expression','parser.py',408),
  ('deallocation_expression -> DELETE cast_expression','deallocation_expression',2,'p_deallocation_expression','parser.py',417),
  ('allocation_expression -> NEW new_type_name new_initializer','allocation_expression',3,'p_allocation_expression','parser.py',424),
  ('allocation_expression -> NEW new_type_name','allocation_expression',2,'p_allocation_expression','parser.py',425),
  ('allocation_expression -> NEW LPAREN type_name RPAREN new_initializer','allocation_expression',5,'p_allocation_expression','parser.py',426),
  ('allocation_expression -> NEW LPAREN type_name RPAREN','allocation_expression',4,'p_allocation_expression','parser.py',427),
  ('new_type_name -> type_specifier_ new_declarator','new_type_name',2,'p_new_type_name','parser.py',433),
  ('new_type_name -> type_specifier_','new_type_name',1,'p_new_type_name','parser.py',434),
  ('new_declarator -> new_declarator MULTOP','new_declarator',2,'p_new_declarator','parser.py',440),
  ('new_declarator -> MULTOP','new_declarator',1,'p_new_declarator','parser.py',441),
  ('new_declarator -> new_declarator LSPAREN expression RSPAREN','new_declarator',4,'p_new_declarator','parser.py',442),
  ('new_declarator -> LSPAREN expression RSPAREN','new_declarator',3,'p_new_declarator','parser.py',443),
  ('new_initializer -> LPAREN initializer_list RPAREN','new_initializer',3,'p_new_initializer','parser.py',449),
  ('new_initializer -> LPAREN RPAREN','new_initializer',2,'p_new_initializer','parser.py',450),
  ('unary1_operator -> PLUSOP','unary1_operator',1,'p_unary1_operator','parser.py',456),
  ('unary1_operator -> MINUSOP','unary1_operator',1,'p_unary1_operator','parser.py',457),
  ('unary1_operator -> NOTSYM','unary1_operator',1,'p_unary1_operator','parser.py',458),
  ('unary1_operator -> BNOP','unary1_operator',1,'p_unary1_operator','parser.py',459),
  ('unary2_operator -> MULTOP','unary2_operator',1,'p_unary2_operator','parser.py',466),
  ('unary2_operator -> BANDOP','unary2_operator',1,'p_unary2_operator','parser.py',467),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','parser.py',474),
  ('postfix_expression -> postfix_expression LSPAREN expression RSPAREN','postfix_expression',4,'p_postfix_expression_2','parser.py',482),
  ('postfix_expression -> postfix_expression LPAREN expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','parser.py',496),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','parser.py',497),
  ('postfix_expression -> postfix_expression template_class_name LPAREN expression_list RPAREN','postfix_expression',5,'p_postfix_expression_5','parser.py',525),
  ('postfix_expression -> postfix_expression DOT name','postfix_expression',3,'p_postfix_expression_6','parser.py',534),
  ('postfix_expression -> postfix_expression ARROW name','postfix_expression',3,'p_postfix_expression_7','parser.py',540),
  ('postfix_expression -> postfix_expression DPLUSOP','postfix_expression',2,'p_postfix_expression_8','parser.py',546),
  ('postfix_expression -> postfix_expression DMINUSOP','postfix_expression',2,'p_postfix_expression_8','parser.py',547),
  ('primary_expression -> name','primary_expression',1,'p_primary_expression0','parser.py',558),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression1','parser.py',573),
  ('primary_expression -> THIS','primary_expression',1,'p_primary_expression2','parser.py',580),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression3','parser.py',589),
  ('literal -> STRING_L','literal',1,'p_literal_string','parser.py',597),
  ('literal -> NUMBER','literal',1,'p_literal_number','parser.py',603),
  ('literal -> DECIMAL','literal',1,'p_literal_decimal','parser.py',609),
  ('literal -> SCHAR','literal',1,'p_literal_char','parser.py',615),
  ('abstract_declarator -> unary2_operator','abstract_declarator',1,'p_abstract_declarator','parser.py',625),
  ('abstract_declarator -> unary2_operator abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',626),
  ('abstract_declarator -> LSPAREN constant_expression RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',627),
  ('abstract_declarator -> abstract_declarator LSPAREN constant_expression RSPAREN','abstract_declarator',4,'p_abstract_declarator','parser.py',628),
  ('abstract_declarator -> LSPAREN RSPAREN','abstract_declarator',2,'p_abstract_declarator','parser.py',629),
  ('abstract_declarator -> abstract_declarator LSPAREN RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',630),
  ('declarator -> name','declarator',1,'p_declarator_0','parser.py',664),
  ('declarator -> unary2_operator declarator','declarator',2,'p_declarator_1','parser.py',671),
  ('declarator -> declarator LSPAREN constant_expression RSPAREN','declarator',4,'p_declarator_3','parser.py',683),
  ('declarator -> declarator LSPAREN RSPAREN','declarator',3,'p_declarator_4','parser.py',693),
  ('arg_list -> argument_declaration_list','arg_list',1,'p_arg_list','parser.py',703),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','parser.py',704),
  ('argument_declaration_list -> argument_declaration','argument_declaration_list',1,'p_argument_declaration_list','parser.py',760),
  ('argument_declaration_list -> argument_declaration COMMA argument_declaration_list','argument_declaration_list',3,'p_argument_declaration_list','parser.py',761),
  ('argument_declaration -> type_specifier_ declarator','argument_declaration',2,'p_argument_declaration_1','parser.py',771),
  ('argument_declaration -> type_specifier_ declarator EQUAL expression','argument_declaration',4,'p_argument_declaration_2','parser.py',784),
  ('argument_declaration -> type_specifier_ abstract_declarator','argument_declaration',2,'p_argument_declaration_3','parser.py',798),
  ('argument_declaration -> type_specifier_','argument_declaration',1,'p_argument_declaration_4','parser.py',805),
  ('name -> IDENTIFIER','name',1,'p_name','parser.py',812),
  ('name -> DOUBLEBNOP IDENTIFIER','name',2,'p_name','parser.py',813),
  ('operator_name -> NEW','operator_name',1,'p_operator_name','parser.py',822),
  ('operator_name -> DELETE','operator_name',1,'p_operator_name','parser.py',823),
  ('operator_name -> PLUSOP','operator_name',1,'p_operator_name','parser.py',824),
  ('operator_name -> MINUSOP','operator_name',1,'p_operator_name','parser.py',825),
  ('operator_name -> MULTOP','operator_name',1,'p_operator_name','parser.py',826),
  ('operator_name -> DIVOP','operator_name',1,'p_operator_name','parser.py',827),
  ('operator_name -> MODOP','operator_name',1,'p_operator_name','parser.py',828),
  ('operator_name -> XOROP','operator_name',1,'p_operator_name','parser.py',829),
  ('operator_name -> BANDOP','operator_name',1,'p_operator_name','parser.py',830),
  ('operator_name -> BNOP','operator_name',1,'p_operator_name','parser.py',831),
  ('operator_name -> NOTSYM','operator_name',1,'p_operator_name','parser.py',832),
  ('operator_name -> EQUAL','operator_name',1,'p_operator_name','parser.py',833),
  ('operator_name -> LTCOMP','operator_name',1,'p_operator_name','parser.py',834),
  ('operator_name -> GTCOMP','operator_name',1,'p_operator_name','parser.py',835),
  ('operator_name -> PLUSEQOP','operator_name',1,'p_operator_name','parser.py',836),
  ('operator_name -> MINUSEQOP','operator_name',1,'p_operator_name','parser.py',837),
  ('operator_name -> MULTEQOP','operator_name',1,'p_operator_name','parser.py',838),
  ('operator_name -> DIVEQOP','operator_name',1,'p_operator_name','parser.py',839),
  ('operator_name -> MODEQOP','operator_name',1,'p_operator_name','parser.py',840),
  ('operator_name -> XOREQOP','operator_name',1,'p_operator_name','parser.py',841),
  ('operator_name -> BANDEQOP','operator_name',1,'p_operator_name','parser.py',842),
  ('operator_name -> LSHIFT','operator_name',1,'p_operator_name','parser.py',843),
  ('operator_name -> RSHIFT','operator_name',1,'p_operator_name','parser.py',844),
  ('operator_name -> RSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',845),
  ('operator_name -> LSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',846),
  ('operator_name -> EQCOMP','operator_name',1,'p_operator_name','parser.py',847),
  ('operator_name -> NEQCOMP','operator_name',1,'p_operator_name','parser.py',848),
  ('operator_name -> LTECOMP','operator_name',1,'p_operator_name','parser.py',849),
  ('operator_name -> GTECOMP','operator_name',1,'p_operator_name','parser.py',850),
  ('operator_name -> ANDOP','operator_name',1,'p_operator_name','parser.py',851),
  ('operator_name -> OROP','operator_name',1,'p_operator_name','parser.py',852),
  ('operator_name -> DPLUSOP','operator_name',1,'p_operator_name','parser.py',853),
  ('operator_name -> DMINUSOP','operator_name',1,'p_operator_name','parser.py',854),
  ('operator_name -> COMMA','operator_name',1,'p_operator_name','parser.py',855),
  ('operator_name -> ARROWSTAR','operator_name',1,'p_operator_name','parser.py',856),
  ('operator_name -> ARROW','operator_name',1,'p_operator_name','parser.py',857),
  ('template_class_name -> LTEMPLATE template_arg_list RTEMPLATE','template_class_name',3,'p_template_class_name','parser.py',866),
  ('template_arg_list -> type_name','template_arg_list',1,'p_template_arg_list','parser.py',872),
  ('template_arg_list -> template_arg_list COMMA type_name','template_arg_list',3,'p_template_arg_list','parser.py',873),
  ('type_name -> type_specifier_ abstract_declarator','type_name',2,'p_type_name','parser.py',885),
  ('type_name -> type_specifier_','type_name',1,'p_type_name','parser.py',886),
  ('type_specifier_ -> CONST type_specifier','type_specifier_',2,'p_type_specifier_','parser.py',899),
  ('type_specifier_ -> type_specifier','type_specifier_',1,'p_type_specifier_','parser.py',900),
  ('typedef_declarator -> TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON','typedef_declarator',5,'p_typedef_declarator','parser.py',912),
  ('typedef_declarator -> TYPEDEF type_specifier_ IDENTIFIER SEMICOLON','typedef_declarator',4,'p_typedef_declarator','parser.py',913),
  ('type_specifier -> simple_type_name','type_specifier',1,'p_type_specifier','parser.py',919),
  ('type_specifier -> complex_type_specifier','type_specifier',1,'p_type_specifier','parser.py',920),
  ('simple_type_name -> CHAR','simple_type_name',1,'p_simple_type_name','parser.py',928),
  ('simple_type_name -> SHORT','simple_type_name',1,'p_simple_type_name','parser.py',929),
  ('simple_type_name -> INT','simple_type_name',1,'p_simple_type_name','parser.py',930),
  ('simple_type_name -> LONG','simple_type_name',1,'p_simple_type_name','parser.py',931),
  ('simple_type_name -> SIGNED','simple_type_name',1,'p_simple_type_name','parser.py',932),
  ('simple_type_name -> UNSIGNED','simple_type_name',1,'p_simple_type_name','parser.py',933),
  ('simple_type_name -> FLOAT','simple_type_name',1,'p_simple_type_name','parser.py',934),
  ('simple_type_name -> DOUBLE','simple_type_name',1,'p_simple_type_name','parser.py',935),
  ('simple_type_name -> VOID','simple_type_name',1,'p_simple_type_name','parser.py',936),
  ('simple_type_name -> STRING','simple_type_name',1,'p_simple_type_name','parser.py',937),
  ('simple_type_name -> AUTO','simple_type_name',1,'p_simple_type_name','parser.py',938),
  ('complex_type_specifier -> class_key IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',948),
  ('complex_type_specifier -> class_key IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',949),
  ('complex_type_specifier -> TYPE IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',950),
  ('complex_type_specifier -> TYPE IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',951),
  ('pure_specifier -> EQUAL NUMBER','pure_specifier',2,'p_pure_specifier','parser.py',963),
  ('base_spec -> COLON base_list','base_spec',2,'p_base_spec','parser.py',970),
  ('base_list -> base_specifier','base_list',1,'p_base_list','parser.py',976),
  ('base_list -> base_list COMMA base_specifier','base_list',3,'p_base_list','parser.py',977),
  ('base_specifier -> class_key IDENTIFIER','base_specifier',2,'p_base_specifier','parser.py',984),
  ('base_specifier -> class_key IDENTIFIER template_class_name','base_specifier',3,'p_base_specifier','parser.py',985),
  ('base_specifier -> IDENTIFIER','base_specifier',1,'p_base_specifier','parser.py',986),
  ('base_specifier -> IDENTIFIER template_class_name','base_specifier',2,'p_base_specifier','parser.py',987),
  ('base_specifier -> access_specifier class_key IDENTIFIER','base_specifier',3,'p_base_specifier','parser.py',988),
  ('base_specifier -> access_specifier class_key IDENTIFIER template_class_name','base_specifier',4,'p_base_specifier','parser.py',989),
  ('class_key -> CLASS','class_key',1,'p_class_key','parser.py',998),
  ('class_key -> STRUCT','class_key',1,'p_class_key','parser.py',999),
  ('class_head -> class_key IDENTIFIER base_spec','class_head',3,'p_class_head','parser.py',1006),
  ('class_head -> class_key IDENTIFIER','class_head',2,'p_class_head','parser.py',1007),
  ('class_define_specifier -> class_head push_scope LCPAREN RCPAREN pop_scope','class_define_specifier',5,'p_class_define_specifier1','parser.py',1020),
  ('class_define_specifier -> class_head push_scope LCPAREN member_list RCPAREN pop_scope','class_define_specifier',6,'p_class_define_specifier2','parser.py',1029),
  ('member_list -> member_access_list','member_list',1,'p_member_list0','parser.py',1037),
  ('member_list -> access_list','member_list',1,'p_member_list1','parser.py',1045),
  ('member_list -> member_list access_list','member_list',2,'p_member_list2','parser.py',1052),
  ('access_specifier -> PRIVATE','access_specifier',1,'p_access_specifier','parser.py',1058),
  ('access_specifier -> PROTECTED','access_specifier',1,'p_access_specifier','parser.py',1059),
  ('access_specifier -> PUBLIC','access_specifier',1,'p_access_specifier','parser.py',1060),
  ('access_list -> access_specifier COLON member_access_list','access_list',3,'p_access_list','parser.py',1068),
  ('access_list -> access_specifier COLON','access_list',2,'p_access_list','parser.py',1069),
  ('member_access_list -> member_declaration member_access_list','member_access_list',2,'p_member_access_list1','parser.py',1074),
  ('member_access_list -> member_declaration','member_access_list',1,'p_member_access_list2','parser.py',1080),
  ('member_declaration -> type_specifier_ member_declarator_list SEMICOLON','member_declaration',3,'p_member_declaration0','parser.py',1086),
  ('member_declaration -> member_declarator_list SEMICOLON','member_declaration',2,'p_member_declaration0','parser.py',1087),
  ('member_declaration -> SEMICOLON','member_declaration',1,'p_member_declaration0','parser.py',1088),
  ('member_declaration -> function_definition','member_declaration',1,'p_member_declaration1','parser.py',1101),
  ('member_declarator_list -> member_declarator','member_declarator_list',1,'p_member_declarator_list','parser.py',1110),
  ('member_declarator_list -> member_declarator COMMA member_declarator_list','member_declarator_list',3,'p_member_declarator_list','parser.py',1111),
  ('member_declarator -> declarator pure_specifier','member_declarator',2,'p_member_declarator','parser.py',1117),
  ('member_declarator -> declarator','member_declarator',1,'p_member_declarator','parser.py',1118),
  ('function_definition -> type_specifier_ declarator func_push_scope arg_list RPAREN fct_body pop_scope','function_definition',7,'p_function_definition','parser.py',1125),
  ('function_decl -> type_specifier_ declarator func_push_scope arg_list RPAREN SEMICOLON pop_scope','function_decl',7,'p_function_decl','parser.py',1138),
  ('func_push_scope -> LPAREN','func_push_scope',1,'p_func_push_scope','parser.py',1143),
  ('fct_body -> compound_statement','fct_body',1,'p_fct_body','parser.py',1148),
  ('compound_statement -> LCPAREN statement_list RCPAREN','compound_statement',3,'p_compound_statement','parser.py',1153),
  ('compound_statement -> LCPAREN RCPAREN','compound_statement',2,'p_compound_statement','parser.py',1154),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',1160),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',1161),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',1167),
  ('statement -> push_scope compound_statement pop_scope','statement',3,'p_statement','parser.py',1168),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',1169),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',1170),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',1171),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',1172),
  ('statement -> try_block','statement',1,'p_statement','parser.py',1173),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',1179),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',1180),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',1181),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',1182),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',1183),
  ('selection_statement -> IF LPAREN expression RPAREN push_scope compound_statement pop_scope','selection_statement',7,'p_selection_statement','parser.py',1190),
  ('selection_statement -> IF LPAREN expression RPAREN push_scope compound_statement pop_scope ELSE push_scope compound_statement pop_scope','selection_statement',11,'p_selection_statement','parser.py',1191),
  ('selection_statement -> SWITCH LPAREN expression RPAREN push_scope LCPAREN labeled_statement_list RCPAREN pop_scope','selection_statement',9,'p_selection_statement','parser.py',1192),
  ('try_block -> TRY push_scope compound_statement pop_scope CATCH push_scope compound_statement pop_scope','try_block',8,'p_try_block','parser.py',1199),
  ('labeled_statement_list -> labeled_statement','labeled_statement_list',1,'p_labeled_statement_list','parser.py',1205),
  ('labeled_statement_list -> labeled_statement_list labeled_statement','labeled_statement_list',2,'p_labeled_statement_list','parser.py',1206),
  ('labeled_statement -> CASE constant_expression COLON statement_list','labeled_statement',4,'p_labeled_statement','parser.py',1212),
  ('labeled_statement -> DEFAULT COLON statement_list','labeled_statement',3,'p_labeled_statement','parser.py',1213),
  ('iteration_statement -> WHILE push_scope LPAREN expression RPAREN statement pop_scope','iteration_statement',7,'p_iteration_statement','parser.py',1219),
  ('iteration_statement -> DO push_scope statement WHILE LPAREN expression RPAREN SEMICOLON pop_scope','iteration_statement',9,'p_iteration_statement','parser.py',1220),
  ('iteration_statement -> FOR LPAREN push_scope for_init_statement expression SEMICOLON expression RPAREN compound_statement pop_scope','iteration_statement',10,'p_iteration_statement','parser.py',1221),
  ('iteration_statement -> FOR LPAREN push_scope for_init_statement SEMICOLON expression RPAREN compound_statement pop_scope','iteration_statement',9,'p_iteration_statement','parser.py',1222),
  ('iteration_statement -> FOR LPAREN push_scope for_init_statement expression SEMICOLON RPAREN compound_statement pop_scope','iteration_statement',9,'p_iteration_statement','parser.py',1223),
  ('iteration_statement -> FOR LPAREN push_scope for_init_statement SEMICOLON RPAREN statement pop_scope','iteration_statement',8,'p_iteration_statement','parser.py',1224),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_for_init_statement','parser.py',1230),
  ('for_init_statement -> declaration_statement','for_init_statement',1,'p_for_init_statement','parser.py',1231),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',1237),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',1238),
  ('declaration_statement -> declaration','declaration_statement',1,'p_declaration_statement','parser.py',1244),
  ('declaration -> type_specifier_ declarator_list SEMICOLON','declaration',3,'p_declaration0','parser.py',1249),
  ('declaration -> asm_declaration','declaration',1,'p_declaration1','parser.py',1268),
  ('declaration -> function_definition','declaration',1,'p_declaration2','parser.py',1275),
  ('declaration -> function_decl','declaration',1,'p_declaration2','parser.py',1276),
  ('declaration -> class_define_specifier SEMICOLON','declaration',2,'p_declaration3','parser.py',1282),
  ('declaration -> template_declaration','declaration',1,'p_declaration4','parser.py',1288),
  ('declaration -> typedef_declarator','declaration',1,'p_declaration5','parser.py',1294),
  ('template_declaration -> TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declaration','template_declaration',5,'p_template_declaration','parser.py',1299),
  ('template_argument_list -> argument_declaration','template_argument_list',1,'p_template_argument_list','parser.py',1304),
  ('template_argument_list -> template_argument_list COMMA argument_declaration','template_argument_list',3,'p_template_argument_list','parser.py',1305),
  ('declarator_list -> init_declarator','declarator_list',1,'p_declarator_list','parser.py',1311),
  ('declarator_list -> declarator_list COMMA init_declarator','declarator_list',3,'p_declarator_list','parser.py',1312),
  ('init_declarator -> declarator initializer','init_declarator',2,'p_init_declarator','parser.py',1323),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',1324),
  ('initializer -> EQUAL assignment_expression','initializer',2,'p_initializer','parser.py',1336),
  ('initializer -> EQUAL LCPAREN initializer_list RCPAREN','initializer',4,'p_initializer1','parser.py',1342),
  ('initializer -> EQUAL LCPAREN initializer_list COMMA RCPAREN','initializer',5,'p_initializer2','parser.py',1347),
  ('initializer -> LPAREN expression_list RPAREN','initializer',3,'p_initializer3','parser.py',1352),
  ('initializer_list -> assignment_expression','initializer_list',1,'p_initializer_list','parser.py',1357),
  ('initializer_list -> initializer_list COMMA assignment_expression','initializer_list',3,'p_initializer_list','parser.py',1358),
  ('initializer_list -> LCPAREN initializer_list RCPAREN','initializer_list',3,'p_initializer_list','parser.py',1359),
  ('initializer_list -> LCPAREN initializer_list COMMA RCPAREN','initializer_list',4,'p_initializer_list','parser.py',1360),
  ('asm_declaration -> ASM LPAREN STRING_L RPAREN SEMICOLON','asm_declaration',5,'p_asm_declaration','parser.py',1366),
  ('expression_list -> assignment_expression','expression_list',1,'p_expression_list','parser.py',1371),
  ('expression_list -> expression_list COMMA assignment_expression','expression_list',3,'p_expression_list','parser.py',1372),
  ('push_scope -> <empty>','push_scope',0,'p_push_scope','parser.py',1382),
  ('pop_scope -> <empty>','pop_scope',0,'p_pop_scope','parser.py',1386),
]
