
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSOPMINUSOPleftMULTOPDIVOPMODOPleftDPLUSOPDMINUSOPleftDOTARROWleftLSHIFTRSHIFTleftLTCOMPLTECOMPleftGTCOMPGTECOMPleftLOWERleftHIGHERANDOP ARROW ARROWSTAR ASM AUTO BANDEQOP BANDOP BNOP BOREQOP BREAK CASE CATCH CHAR CLASS COLON COMMA CONST CONTINUE DEFAULT DELETE DIVEQOP DIVOP DMINUSOP DO DOT DOTSTAR DOUBLE DOUBLEBNOP DPLUSOP ELSE EQCOMP EQUAL FLOAT FOR GOTO GTCOMP GTECOMP HASHTAG IDENTIFIER IF INCLUDE INT LCPAREN LONG LPAREN LSHIFT LSHIFTEQOP LSPAREN LTCOMP LTECOMP LTEMPLATE MINUSEQOP MINUSOP MODEQOP MODOP MULTEQOP MULTOP NEQCOMP NEW NOTSYM NUMBER OPERATOR OROP PLUSEQOP PLUSOP PRIVATE PROTECTED PUBLIC QUESMARK RCPAREN RETURN RPAREN RSHIFT RSHIFTEQOP RSPAREN RTEMPLATE SCHAR SEMICOLON SHORT SIGNED SIZEOF STRING STRING_L STRUCT SWITCH TEMPLATE THIS THROW TRY TYPE TYPEDEF UNSIGNED VOID WHILE XOREQOP XOROPcontrol_line : control_line control_line_stmt\n                    | control_line_stmt\n    include_control : HASHTAG INCLUDE\n    control_line_stmt : include_control LTCOMP STRING_L GTCOMP\n                    | include_control STRING_L\n    program : control_line translation_unit\n               | translation_unit\n    translation_unit : declaration_seq declaration_seq : declaration_seq declaration\n                        | declaration\n    empty :constant_expression : conditional_expressionconditional_expression : logical_OR_expression \n                              | logical_OR_expression QUESMARK expression COLON conditional_expression \n    logical_OR_expression : logical_AND_expression \n                             | logical_OR_expression OROP logical_AND_expression \n    logical_AND_expression : inclusive_OR_expression %prec LOWER\n                              | logical_AND_expression ANDOP inclusive_OR_expression %prec HIGHER\n    inclusive_OR_expression : exclusive_OR_expression %prec LOWER\n                               | inclusive_OR_expression OROP exclusive_OR_expression %prec HIGHER\n    exclusive_OR_expression : AND_expression \n                               | exclusive_OR_expression XOROP AND_expression \n    AND_expression : equality_expression \n                      | AND_expression BANDOP equality_expression \n    equality_expression : relational_expression \n                           | equality_expression EQCOMP relational_expression \n                           | equality_expression NEQCOMP relational_expression \n    relational_expression : shift_expression \n                             | relational_expression LTCOMP  shift_expression \n                             | relational_expression GTCOMP  shift_expression \n                             | relational_expression LTECOMP shift_expression \n                             | relational_expression GTECOMP shift_expression \n    shift_expression : additive_expression \n                        | shift_expression LSHIFT additive_expression \n                        | shift_expression RSHIFT additive_expression \n    additive_expression : multiplicative_expression \n                           | additive_expression PLUSOP multiplicative_expression \n                           | additive_expression MINUSOP multiplicative_expression \n    multiplicative_expression : pm_expression \n                                 | multiplicative_expression MULTOP pm_expression \n                                 | multiplicative_expression DIVOP pm_expression \n                                 | multiplicative_expression MODOP pm_expression \n    pm_expression : cast_expression \n                     | pm_expression DOTSTAR cast_expression \n                     | pm_expression ARROWSTAR cast_expression \n    expression : assignment_expression \n                  | throw_expression\n                  | expression COMMA assignment_expression \n    throw_expression : THROW expression \n                        | THROW \n    assignment_expression : conditional_expression \n                             | unary_expression  assignment_operator assignment_expression \n    assignment_operator :   EQUAL \n                           | MULTEQOP \n                           | DIVEQOP \n                           | MODEQOP \n                           | PLUSEQOP \n                           | MINUSEQOP \n                           | LSHIFTEQOP \n                           | RSHIFTEQOP \n                           | BANDEQOP \n                           | BOREQOP \n    unary_expression : postfix_expression \n                        | DPLUSOP unary_expression \n                        | DMINUSOP unary_expression \n                        | unary1_operator cast_expression \n                        | unary2_operator cast_expression \n                        | SIZEOF  unary_expression \n                        | SIZEOF LPAREN type_name  RPAREN \n                        | allocation_expression \n                        | deallocation_expression \n    deallocation_expression : DELETE cast_expression  allocation_expression : NEW new_type_name new_initializer \n                             | NEW new_type_name \n                             | NEW LPAREN type_name  RPAREN  new_initializer \n                             | NEW LPAREN type_name  RPAREN \n    new_type_name : type_specifier_ new_declarator \n                     | type_specifier_ \n    new_declarator : new_declarator MULTOP\n                      | MULTOP \n                      | new_declarator LSPAREN expression RSPAREN \n                      | LSPAREN expression RSPAREN \n    new_initializer : LPAREN initializer_list  RPAREN \n                       | LPAREN  RPAREN \n    unary1_operator : PLUSOP \n                      | MINUSOP \n                      | NOTSYM \n                      | BNOP \n    unary2_operator : MULTOP \n                      | BANDOP \n    postfix_expression : primary_expression \n                          | postfix_expression     LSPAREN expression RSPAREN \n                          | postfix_expression     LPAREN expression_list  RPAREN  \n                          | postfix_expression template_class_name  LPAREN expression_list  RPAREN \n                          | postfix_expression     LPAREN  RPAREN \n                          | postfix_expression     DOT name \n                          | postfix_expression     ARROW name \n                          | postfix_expression     DPLUSOP \n                          | postfix_expression     DMINUSOP \n    primary_expression : name   \n    primary_expression : literal           \n    primary_expression : THIS  \n    primary_expression : LPAREN expression  RPAREN   \n    literal :  STRING_L literal : NUMBER literal : SCHAR cast_expression : unary_expression \n                       | LPAREN type_name  RPAREN  cast_expression \n    abstract_declarator : unary2_operator %prec LOWER\n                           | unary2_operator abstract_declarator %prec LOWER\n                           | LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | LSPAREN  RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN RSPAREN %prec HIGHER\n    declarator : name declarator : unary2_operator declarator %prec HIGHER  declarator :  declarator LSPAREN constant_expression RSPAREN  declarator : declarator LSPAREN RSPAREN   arg_list : argument_declaration_list \n                  |\n    argument_declaration_list : argument_declaration \n                                 | argument_declaration COMMA argument_declaration_list\n    argument_declaration : type_specifier_ declarator   argument_declaration :  type_specifier_ declarator  EQUAL expression argument_declaration : type_specifier_ abstract_declarator argument_declaration :  type_specifier_ name : IDENTIFIER \n            | DOUBLEBNOP IDENTIFIER \n    operator_name : NEW \n                     | DELETE \n                     | PLUSOP \n                     | MINUSOP \n                     | MULTOP \n                     | DIVOP \n                     | MODOP \n                     | XOROP \n                     | BANDOP \n                     | BNOP \n                     | NOTSYM \n                     | EQUAL \n                     | LTCOMP \n                     | GTCOMP \n                     | PLUSEQOP \n                     | MINUSEQOP \n                     | MULTEQOP \n                     | DIVEQOP \n                     | MODEQOP \n                     | XOREQOP \n                     | BANDEQOP \n                     | LSHIFT \n                     | RSHIFT \n                     | RSHIFTEQOP \n                     | LSHIFTEQOP \n                     | EQCOMP \n                     | NEQCOMP \n                     | LTECOMP \n                     | GTECOMP \n                     | ANDOP \n                     | OROP \n                     | DPLUSOP \n                     | DMINUSOP \n                     | COMMA \n                     | ARROWSTAR \n                     | ARROW \n    template_class_name : LTEMPLATE template_arg_list RTEMPLATEtemplate_arg_list : type_name \n                         | template_arg_list COMMA type_name\n    type_name : type_specifier_ abstract_declarator \n                 | type_specifier_ \n    type_specifier_ : CONST type_specifier \n                       | type_specifier\n    typedef_declarator : TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON\n                          | TYPEDEF type_specifier_  IDENTIFIER SEMICOLON\n    type_specifier : simple_type_name \n                      | complex_type_specifier  \n    simple_type_name : CHAR \n                        | SHORT \n                        | INT \n                        | LONG \n                        | SIGNED \n                        | UNSIGNED \n                        | FLOAT \n                        | DOUBLE \n                        | VOID\n                        | STRING\n                        | AUTO\n\n    complex_type_specifier : class_key IDENTIFIER \n                                | class_key  IDENTIFIER template_class_name\n                                | TYPE IDENTIFIER \n                                | TYPE IDENTIFIER template_class_name\n                                 \n    pure_specifier :   EQUAL NUMBERclass_head : class_key IDENTIFIER base_spec \n                  | class_key IDENTIFIER \n    base_spec : COLON base_listbase_list : base_specifier\n                 | base_list COMMA base_specifier \n    base_specifier : class_key  IDENTIFIER \n                      | class_key  IDENTIFIER template_class_name\n                      | IDENTIFIER \n                      | IDENTIFIER template_class_name\n                      | access_specifier class_key IDENTIFIER\n                      | access_specifier class_key IDENTIFIER template_class_name\n    class_key : CLASS \n                 | STRUCT\n    class_define_specifier : class_head LCPAREN member_list RCPAREN \n                       | class_head LCPAREN RCPAREN \n    member_list : member_access_list\n                   | access_list\n                   | member_list access_list\n    access_specifier : PRIVATE\n                        | PROTECTED\n                        | PUBLIC\n    access_list : access_specifier COLON member_access_list\n                   | access_specifier COLON member_access_list : member_declaration member_access_list\n                          | member_declaration member_declaration : type_specifier_ member_declarator_list SEMICOLON\n                          | member_declarator_list SEMICOLON\n                          | type_specifier_ SEMICOLON\n                          | SEMICOLON\n                          | function_definition\n                          |  class_define_specifier SEMICOLON\n    member_declarator_list : member_declarator \n                              | member_declarator_list COMMA member_declarator \n    member_declarator : declarator pure_specifier \n                         | declarator \n                         \n    function_definition : type_specifier_ declarator push_scope LPAREN arg_list  RPAREN fct_body pop_scope \n    function_decl : type_specifier_ declarator LPAREN arg_list  RPAREN  fct_body : compound_statementcompound_statement : LCPAREN statement_list RCPAREN \n                          | LCPAREN RCPAREN \n    statement_list : statement \n                      | statement_list statement \n    statement : labeled_statement \n                 | expression_statement \n                 | compound_statement \n                 | selection_statement \n                 | iteration_statement \n                 | jump_statement \n                 | declaration_statement \n                 | try_block \n    jump_statement : BREAK SEMICOLON \n                      | CONTINUE SEMICOLON \n                      | RETURN expression SEMICOLON \n                      | RETURN SEMICOLON \n                      | GOTO IDENTIFIER SEMICOLON \n    selection_statement : IF LPAREN expression  RPAREN  statement \n                           | IF LPAREN expression  RPAREN  statement ELSE statement \n                           | SWITCH LPAREN expression  RPAREN  statement \n    try_block : TRY compound_statement CATCH compound_statementlabeled_statement : IDENTIFIER COLON statement \n                         | CASE constant_expression COLON statement \n                         | DEFAULT COLON statement \n    iteration_statement : WHILE LPAREN expression  RPAREN  statement \n                           | DO statement WHILE LPAREN expression  RPAREN  SEMICOLON \n                           | FOR LPAREN for_init_statement expression SEMICOLON expression  RPAREN  statement \n                           | FOR LPAREN for_init_statement SEMICOLON expression  RPAREN  statement \n                           | FOR LPAREN for_init_statement expression SEMICOLON  RPAREN  statement \n                           | FOR LPAREN for_init_statement SEMICOLON  RPAREN  statement \n    for_init_statement : expression_statement \n                          | declaration_statement \n    expression_statement : expression SEMICOLON \n                            | SEMICOLON \n    declaration_statement : declarationdeclaration : type_specifier_ declarator_list SEMICOLON declaration :  asm_declaration  declaration :  function_definition \n                    | function_decl\n    declaration : class_define_specifier SEMICOLON declaration :  template_declaration declaration : typedef_declarator template_declaration : TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declarationtemplate_argument_list : argument_declaration\n                              | template_argument_list COMMA argument_declaration\n    declarator_list : init_declarator \n                       | declarator_list COMMA init_declarator \n    init_declarator : declarator initializer \n                       | declarator \n    initializer :   EQUAL assignment_expression \n                   |   EQUAL LCPAREN initializer_list RCPAREN \n                   |   EQUAL LCPAREN initializer_list COMMA RCPAREN \n                   | LPAREN expression_list  RPAREN \n    initializer_list : assignment_expression \n                        | initializer_list COMMA assignment_expression \n                        | LCPAREN initializer_list RCPAREN \n                        | LCPAREN initializer_list COMMA RCPAREN \n    asm_declaration : ASM LPAREN STRING_L  RPAREN  SEMICOLONexpression_list : assignment_expression \n                       | expression_list COMMA assignment_expression \n    push_scope : pop_scope : '
    
_lr_action_items = {'HASHTAG':([0,2,4,40,43,103,],[8,8,-2,-1,-5,-4,]),'CONST':([0,2,4,5,7,10,11,12,14,15,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[16,16,-2,16,-10,-266,-267,-268,-270,-271,16,-1,-9,-5,-269,16,16,-265,16,16,-220,-221,16,-4,16,16,16,16,16,-219,-218,-222,16,16,-173,-228,16,16,16,-287,-217,-272,-172,16,-291,-229,16,-227,16,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,16,-264,-230,-233,16,16,-262,16,-242,-243,-245,-251,16,-253,-244,-246,-252,16,16,16,-250,-247,-249,-254,16,16,16,16,-259,-248,-255,16,-258,-257,-256,]),'ASM':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,194,252,257,260,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[18,18,-2,18,-10,-266,-267,-268,-270,-271,-1,-9,-5,-269,-265,-4,18,-173,-228,-287,-272,-172,-291,-229,18,-227,18,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,18,-264,-230,-233,18,18,-262,18,-242,-243,-245,-251,18,-253,-244,-246,-252,18,18,18,-250,-247,-249,-254,18,18,18,18,-259,-248,-255,18,-258,-257,-256,]),'TEMPLATE':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,194,252,257,260,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[20,20,-2,20,-10,-266,-267,-268,-270,-271,-1,-9,-5,-269,-265,-4,20,-173,-228,-287,-272,-172,-291,-229,20,-227,20,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,20,-264,-230,-233,20,20,-262,20,-242,-243,-245,-251,20,-253,-244,-246,-252,20,20,20,-250,-247,-249,-254,20,20,20,20,-259,-248,-255,20,-258,-257,-256,]),'TYPEDEF':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,194,252,257,260,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[21,21,-2,21,-10,-266,-267,-268,-270,-271,-1,-9,-5,-269,-265,-4,21,-173,-228,-287,-272,-172,-291,-229,21,-227,21,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,21,-264,-230,-233,21,21,-262,21,-242,-243,-245,-251,21,-253,-244,-246,-252,21,21,21,-250,-247,-249,-254,21,21,21,21,-259,-248,-255,21,-258,-257,-256,]),'CHAR':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[25,25,-2,25,-10,-266,-267,-268,-270,-271,25,25,-1,-9,-5,-269,25,25,-265,25,25,-220,-221,25,-4,25,25,25,25,25,-219,-218,-222,25,25,-173,-228,25,25,25,-287,-217,-272,-172,25,-291,-229,25,-227,25,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,25,-264,-230,-233,25,25,-262,25,-242,-243,-245,-251,25,-253,-244,-246,-252,25,25,25,-250,-247,-249,-254,25,25,25,25,-259,-248,-255,25,-258,-257,-256,]),'SHORT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[26,26,-2,26,-10,-266,-267,-268,-270,-271,26,26,-1,-9,-5,-269,26,26,-265,26,26,-220,-221,26,-4,26,26,26,26,26,-219,-218,-222,26,26,-173,-228,26,26,26,-287,-217,-272,-172,26,-291,-229,26,-227,26,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,26,-264,-230,-233,26,26,-262,26,-242,-243,-245,-251,26,-253,-244,-246,-252,26,26,26,-250,-247,-249,-254,26,26,26,26,-259,-248,-255,26,-258,-257,-256,]),'INT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[27,27,-2,27,-10,-266,-267,-268,-270,-271,27,27,-1,-9,-5,-269,27,27,-265,27,27,-220,-221,27,-4,27,27,27,27,27,-219,-218,-222,27,27,-173,-228,27,27,27,-287,-217,-272,-172,27,-291,-229,27,-227,27,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,27,-264,-230,-233,27,27,-262,27,-242,-243,-245,-251,27,-253,-244,-246,-252,27,27,27,-250,-247,-249,-254,27,27,27,27,-259,-248,-255,27,-258,-257,-256,]),'LONG':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[28,28,-2,28,-10,-266,-267,-268,-270,-271,28,28,-1,-9,-5,-269,28,28,-265,28,28,-220,-221,28,-4,28,28,28,28,28,-219,-218,-222,28,28,-173,-228,28,28,28,-287,-217,-272,-172,28,-291,-229,28,-227,28,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,28,-264,-230,-233,28,28,-262,28,-242,-243,-245,-251,28,-253,-244,-246,-252,28,28,28,-250,-247,-249,-254,28,28,28,28,-259,-248,-255,28,-258,-257,-256,]),'SIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[29,29,-2,29,-10,-266,-267,-268,-270,-271,29,29,-1,-9,-5,-269,29,29,-265,29,29,-220,-221,29,-4,29,29,29,29,29,-219,-218,-222,29,29,-173,-228,29,29,29,-287,-217,-272,-172,29,-291,-229,29,-227,29,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,29,-264,-230,-233,29,29,-262,29,-242,-243,-245,-251,29,-253,-244,-246,-252,29,29,29,-250,-247,-249,-254,29,29,29,29,-259,-248,-255,29,-258,-257,-256,]),'UNSIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[30,30,-2,30,-10,-266,-267,-268,-270,-271,30,30,-1,-9,-5,-269,30,30,-265,30,30,-220,-221,30,-4,30,30,30,30,30,-219,-218,-222,30,30,-173,-228,30,30,30,-287,-217,-272,-172,30,-291,-229,30,-227,30,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,30,-264,-230,-233,30,30,-262,30,-242,-243,-245,-251,30,-253,-244,-246,-252,30,30,30,-250,-247,-249,-254,30,30,30,30,-259,-248,-255,30,-258,-257,-256,]),'FLOAT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[31,31,-2,31,-10,-266,-267,-268,-270,-271,31,31,-1,-9,-5,-269,31,31,-265,31,31,-220,-221,31,-4,31,31,31,31,31,-219,-218,-222,31,31,-173,-228,31,31,31,-287,-217,-272,-172,31,-291,-229,31,-227,31,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,31,-264,-230,-233,31,31,-262,31,-242,-243,-245,-251,31,-253,-244,-246,-252,31,31,31,-250,-247,-249,-254,31,31,31,31,-259,-248,-255,31,-258,-257,-256,]),'DOUBLE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[32,32,-2,32,-10,-266,-267,-268,-270,-271,32,32,-1,-9,-5,-269,32,32,-265,32,32,-220,-221,32,-4,32,32,32,32,32,-219,-218,-222,32,32,-173,-228,32,32,32,-287,-217,-272,-172,32,-291,-229,32,-227,32,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,32,-264,-230,-233,32,32,-262,32,-242,-243,-245,-251,32,-253,-244,-246,-252,32,32,32,-250,-247,-249,-254,32,32,32,32,-259,-248,-255,32,-258,-257,-256,]),'VOID':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[33,33,-2,33,-10,-266,-267,-268,-270,-271,33,33,-1,-9,-5,-269,33,33,-265,33,33,-220,-221,33,-4,33,33,33,33,33,-219,-218,-222,33,33,-173,-228,33,33,33,-287,-217,-272,-172,33,-291,-229,33,-227,33,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,33,-264,-230,-233,33,33,-262,33,-242,-243,-245,-251,33,-253,-244,-246,-252,33,33,33,-250,-247,-249,-254,33,33,33,33,-259,-248,-255,33,-258,-257,-256,]),'STRING':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[34,34,-2,34,-10,-266,-267,-268,-270,-271,34,34,-1,-9,-5,-269,34,34,-265,34,34,-220,-221,34,-4,34,34,34,34,34,-219,-218,-222,34,34,-173,-228,34,34,34,-287,-217,-272,-172,34,-291,-229,34,-227,34,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,34,-264,-230,-233,34,34,-262,34,-242,-243,-245,-251,34,-253,-244,-246,-252,34,34,34,-250,-247,-249,-254,34,34,34,34,-259,-248,-255,34,-258,-257,-256,]),'AUTO':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[35,35,-2,35,-10,-266,-267,-268,-270,-271,35,35,-1,-9,-5,-269,35,35,-265,35,35,-220,-221,35,-4,35,35,35,35,35,-219,-218,-222,35,35,-173,-228,35,35,35,-287,-217,-272,-172,35,-291,-229,35,-227,35,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,35,-264,-230,-233,35,35,-262,35,-242,-243,-245,-251,35,-253,-244,-246,-252,35,35,35,-250,-247,-249,-254,35,35,35,35,-259,-248,-255,35,-258,-257,-256,]),'TYPE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,101,103,106,107,132,152,159,161,163,165,168,169,175,194,197,224,227,252,254,257,260,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[36,36,-2,36,-10,-266,-267,-268,-270,-271,36,36,-1,-9,-5,-269,36,36,-265,36,36,-220,-221,36,-4,36,36,36,36,36,-219,-218,-222,36,36,-173,-228,36,36,36,-287,-217,-272,-172,36,-291,-229,36,-227,36,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,36,-264,-230,-233,36,36,-262,36,-242,-243,-245,-251,36,-253,-244,-246,-252,36,36,36,-250,-247,-249,-254,36,36,36,36,-259,-248,-255,36,-258,-257,-256,]),'CLASS':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,86,87,88,100,101,103,106,107,132,152,159,161,163,165,168,169,175,183,194,197,224,227,252,254,257,260,264,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[37,37,-2,37,-10,-266,-267,-268,-270,-271,37,37,-1,-9,-5,-269,37,37,-265,37,37,-220,-221,-210,-211,-212,37,37,-4,37,37,37,37,37,-219,-218,-222,37,37,-173,37,-228,37,37,37,-287,-217,-272,-172,37,37,-291,-229,37,-227,37,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,37,-264,-230,-233,37,37,-262,37,-242,-243,-245,-251,37,-253,-244,-246,-252,37,37,37,-250,-247,-249,-254,37,37,37,37,-259,-248,-255,37,-258,-257,-256,]),'STRUCT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,67,79,83,84,86,87,88,100,101,103,106,107,132,152,159,161,163,165,168,169,175,183,194,197,224,227,252,254,257,260,264,269,322,323,324,343,344,345,346,347,348,349,350,351,352,353,354,359,363,369,379,380,381,383,384,389,390,391,393,397,398,399,407,408,410,411,412,413,417,418,419,420,424,425,428,429,430,431,432,433,434,435,436,],[38,38,-2,38,-10,-266,-267,-268,-270,-271,38,38,-1,-9,-5,-269,38,38,-265,38,38,-220,-221,-210,-211,-212,38,38,-4,38,38,38,38,38,-219,-218,-222,38,38,-173,38,-228,38,38,38,-287,-217,-272,-172,38,38,-291,-229,38,-227,38,-231,-232,-234,-235,-236,-237,-238,-239,-240,-241,-263,38,-264,-230,-233,38,38,-262,38,-242,-243,-245,-251,38,-253,-244,-246,-252,38,38,38,-250,-247,-249,-254,38,38,38,38,-259,-248,-255,38,-258,-257,-256,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'control_line':([0,],[2,]),'translation_unit':([0,2,],[3,39,]),'control_line_stmt':([0,2,],[4,40,]),'declaration_seq':([0,2,],[5,5,]),'include_control':([0,2,],[6,6,]),'declaration':([0,2,5,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[7,7,41,257,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,]),'type_specifier_':([0,2,5,21,58,59,67,79,101,106,107,132,152,159,168,169,197,224,227,269,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[9,9,9,60,81,93,93,81,186,93,186,228,186,81,9,93,93,186,186,186,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asm_declaration':([0,2,5,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function_definition':([0,2,5,58,79,159,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[11,11,11,84,84,84,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_decl':([0,2,5,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'class_define_specifier':([0,2,5,58,79,159,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[13,13,13,85,85,85,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'template_declaration':([0,2,5,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'typedef_declarator':([0,2,5,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'type_specifier':([0,2,5,16,21,58,59,67,79,101,106,107,132,152,159,168,169,197,224,227,269,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[17,17,17,55,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'class_head':([0,2,5,58,79,159,168,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'simple_type_name':([0,2,5,16,21,58,59,67,79,101,106,107,132,152,159,168,169,197,224,227,269,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'complex_type_specifier':([0,2,5,16,21,58,59,67,79,101,106,107,132,152,159,168,169,197,224,227,269,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'class_key':([0,2,5,16,21,58,59,67,79,100,101,106,107,132,152,159,168,169,183,197,224,227,264,269,324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[24,24,24,56,56,24,56,56,24,181,56,56,56,56,56,24,24,56,267,56,56,56,181,56,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'declarator_list':([9,],[45,]),'declarator':([9,49,58,65,79,81,93,159,164,172,],[46,71,90,105,90,162,170,90,90,71,]),'init_declarator':([9,65,],[47,104,]),'name':([9,49,58,65,67,68,70,79,81,93,97,107,117,118,119,121,122,133,152,154,159,164,172,174,187,193,196,198,209,210,211,212,214,215,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[48,48,48,48,127,127,127,48,48,48,127,127,127,127,127,127,127,127,127,127,48,48,48,127,127,127,127,127,127,127,127,127,285,286,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'unary2_operator':([9,49,58,60,65,67,68,70,79,81,93,96,97,107,117,118,119,121,122,133,152,154,159,164,172,174,186,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[49,49,49,96,49,121,121,121,49,49,172,96,121,121,121,121,121,121,121,121,121,121,49,49,172,121,96,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'push_scope':([46,162,],[66,66,]),'initializer':([46,105,],[69,69,]),'member_list':([58,],[75,]),'member_access_list':([58,79,159,],[77,158,253,]),'access_list':([58,75,],[78,157,]),'member_declaration':([58,79,159,],[79,79,79,]),'access_specifier':([58,75,100,264,],[80,80,183,183,]),'member_declarator_list':([58,79,81,159,],[82,82,160,82,]),'member_declarator':([58,79,81,159,164,],[89,89,89,89,255,]),'template_argument_list':([59,],[91,]),'argument_declaration':([59,67,106,169,197,],[92,112,112,258,112,]),'abstract_declarator':([60,93,96,172,186,],[94,171,176,176,270,]),'base_spec':([61,],[98,]),'template_class_name':([61,62,73,116,182,265,320,],[99,102,99,213,266,319,342,]),'arg_list':([67,106,],[108,188,]),'expression_list':([67,187,212,284,],[109,109,282,330,]),'argument_declaration_list':([67,106,197,],[110,110,277,]),'assignment_expression':([67,70,107,152,154,187,193,196,198,209,211,212,219,224,249,259,273,284,290,294,315,324,336,339,344,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[111,153,191,191,251,111,191,276,278,191,191,111,191,191,251,191,325,111,251,191,341,191,191,341,191,191,191,341,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'conditional_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,211,212,219,224,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[113,150,113,150,113,113,113,150,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,371,113,113,113,150,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'unary_expression':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[114,151,114,151,114,218,220,151,151,223,151,114,114,151,114,114,114,114,114,151,114,114,114,114,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,114,114,114,151,114,114,114,114,114,151,114,114,114,151,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'logical_OR_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,211,212,219,224,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'postfix_expression':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'unary1_operator':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'cast_expression':([67,68,70,97,107,119,121,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[120,120,120,120,120,221,222,229,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,311,312,120,120,120,326,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'allocation_expression':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'deallocation_expression':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'logical_AND_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[125,125,125,125,125,125,125,125,125,125,125,125,125,280,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'primary_expression':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'inclusive_OR_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,288,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'literal':([67,68,70,97,107,117,118,119,121,122,133,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,259,273,274,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'exclusive_OR_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,295,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'AND_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,296,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'equality_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,297,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'relational_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,298,299,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'shift_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,300,301,302,303,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'additive_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,304,305,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'multiplicative_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,306,307,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'pm_expression':([67,68,70,97,107,152,154,174,187,193,196,198,209,210,211,212,219,224,225,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,249,259,273,284,290,294,315,324,327,336,339,344,356,363,367,374,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,308,309,310,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'constant_expression':([68,97,174,356,],[148,177,261,382,]),'pure_specifier':([90,162,],[166,166,]),'base_list':([100,],[179,]),'base_specifier':([100,264,],[180,318,]),'template_arg_list':([101,],[184,]),'type_name':([101,107,152,224,227,269,],[185,190,190,287,291,321,]),'expression':([107,152,193,209,211,219,224,259,294,324,336,344,363,367,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[189,189,275,279,281,189,189,316,337,358,376,358,358,392,358,358,400,401,402,358,358,415,358,358,358,421,423,427,358,358,358,358,358,]),'throw_expression':([107,152,193,209,211,219,224,259,294,324,336,344,363,367,381,383,385,386,387,389,398,404,411,412,413,414,416,422,424,425,428,429,433,],[192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,]),'assignment_operator':([114,],[198,]),'new_type_name':([132,],[226,]),'initializer_list':([154,249,290,],[250,313,332,]),'new_initializer':([226,334,],[289,375,]),'new_declarator':([228,],[292,]),'fct_body':([271,],[322,]),'compound_statement':([271,324,344,363,370,381,383,398,409,411,412,413,424,425,428,429,433,],[323,349,349,349,395,349,349,349,417,349,349,349,349,349,349,349,349,]),'pop_scope':([322,],[343,]),'statement_list':([324,],[344,]),'statement':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[346,380,388,397,399,410,418,419,420,430,431,434,435,436,]),'labeled_statement':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[347,347,347,347,347,347,347,347,347,347,347,347,347,347,]),'expression_statement':([324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[348,348,348,348,348,405,348,348,348,348,348,348,348,348,348,]),'selection_statement':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[350,350,350,350,350,350,350,350,350,350,350,350,350,350,]),'iteration_statement':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[351,351,351,351,351,351,351,351,351,351,351,351,351,351,]),'jump_statement':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[352,352,352,352,352,352,352,352,352,352,352,352,352,352,]),'declaration_statement':([324,344,363,381,383,389,398,411,412,413,424,425,428,429,433,],[353,353,353,353,353,406,353,353,353,353,353,353,353,353,353,]),'try_block':([324,344,363,381,383,398,411,412,413,424,425,428,429,433,],[354,354,354,354,354,354,354,354,354,354,354,354,354,354,]),'for_init_statement':([389,],[404,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('control_line -> control_line control_line_stmt','control_line',2,'p_control_line','parser.py',101),
  ('control_line -> control_line_stmt','control_line',1,'p_control_line','parser.py',102),
  ('include_control -> HASHTAG INCLUDE','include_control',2,'p_include_control','parser.py',108),
  ('control_line_stmt -> include_control LTCOMP STRING_L GTCOMP','control_line_stmt',4,'p_control_line_stmt','parser.py',114),
  ('control_line_stmt -> include_control STRING_L','control_line_stmt',2,'p_control_line_stmt','parser.py',115),
  ('program -> control_line translation_unit','program',2,'p_program','parser.py',121),
  ('program -> translation_unit','program',1,'p_program','parser.py',122),
  ('translation_unit -> declaration_seq','translation_unit',1,'p_translation_unit','parser.py',128),
  ('declaration_seq -> declaration_seq declaration','declaration_seq',2,'p_declaration_seq','parser.py',133),
  ('declaration_seq -> declaration','declaration_seq',1,'p_declaration_seq','parser.py',134),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',143),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',147),
  ('conditional_expression -> logical_OR_expression','conditional_expression',1,'p_conditional_expression','parser.py',153),
  ('conditional_expression -> logical_OR_expression QUESMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',154),
  ('logical_OR_expression -> logical_AND_expression','logical_OR_expression',1,'p_logical_OR_expression','parser.py',160),
  ('logical_OR_expression -> logical_OR_expression OROP logical_AND_expression','logical_OR_expression',3,'p_logical_OR_expression','parser.py',161),
  ('logical_AND_expression -> inclusive_OR_expression','logical_AND_expression',1,'p_logical_AND_expression','parser.py',167),
  ('logical_AND_expression -> logical_AND_expression ANDOP inclusive_OR_expression','logical_AND_expression',3,'p_logical_AND_expression','parser.py',168),
  ('inclusive_OR_expression -> exclusive_OR_expression','inclusive_OR_expression',1,'p_inclusive_OR_expression','parser.py',174),
  ('inclusive_OR_expression -> inclusive_OR_expression OROP exclusive_OR_expression','inclusive_OR_expression',3,'p_inclusive_OR_expression','parser.py',175),
  ('exclusive_OR_expression -> AND_expression','exclusive_OR_expression',1,'p_exclusive_OR_expression','parser.py',181),
  ('exclusive_OR_expression -> exclusive_OR_expression XOROP AND_expression','exclusive_OR_expression',3,'p_exclusive_OR_expression','parser.py',182),
  ('AND_expression -> equality_expression','AND_expression',1,'p_AND_expression','parser.py',188),
  ('AND_expression -> AND_expression BANDOP equality_expression','AND_expression',3,'p_AND_expression','parser.py',189),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',195),
  ('equality_expression -> equality_expression EQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',196),
  ('equality_expression -> equality_expression NEQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',197),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',203),
  ('relational_expression -> relational_expression LTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',204),
  ('relational_expression -> relational_expression GTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',205),
  ('relational_expression -> relational_expression LTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',206),
  ('relational_expression -> relational_expression GTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',207),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',213),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',214),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',215),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',221),
  ('additive_expression -> additive_expression PLUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',222),
  ('additive_expression -> additive_expression MINUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',223),
  ('multiplicative_expression -> pm_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',229),
  ('multiplicative_expression -> multiplicative_expression MULTOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',230),
  ('multiplicative_expression -> multiplicative_expression DIVOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',231),
  ('multiplicative_expression -> multiplicative_expression MODOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',232),
  ('pm_expression -> cast_expression','pm_expression',1,'p_pm_expression','parser.py',238),
  ('pm_expression -> pm_expression DOTSTAR cast_expression','pm_expression',3,'p_pm_expression','parser.py',239),
  ('pm_expression -> pm_expression ARROWSTAR cast_expression','pm_expression',3,'p_pm_expression','parser.py',240),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',246),
  ('expression -> throw_expression','expression',1,'p_expression','parser.py',247),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',248),
  ('throw_expression -> THROW expression','throw_expression',2,'p_throw_expression','parser.py',254),
  ('throw_expression -> THROW','throw_expression',1,'p_throw_expression','parser.py',255),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',261),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',262),
  ('assignment_operator -> EQUAL','assignment_operator',1,'p_assignment_operator','parser.py',268),
  ('assignment_operator -> MULTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',269),
  ('assignment_operator -> DIVEQOP','assignment_operator',1,'p_assignment_operator','parser.py',270),
  ('assignment_operator -> MODEQOP','assignment_operator',1,'p_assignment_operator','parser.py',271),
  ('assignment_operator -> PLUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',272),
  ('assignment_operator -> MINUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',273),
  ('assignment_operator -> LSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',274),
  ('assignment_operator -> RSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',275),
  ('assignment_operator -> BANDEQOP','assignment_operator',1,'p_assignment_operator','parser.py',276),
  ('assignment_operator -> BOREQOP','assignment_operator',1,'p_assignment_operator','parser.py',277),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',283),
  ('unary_expression -> DPLUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',284),
  ('unary_expression -> DMINUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',285),
  ('unary_expression -> unary1_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',286),
  ('unary_expression -> unary2_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',287),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',288),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',289),
  ('unary_expression -> allocation_expression','unary_expression',1,'p_unary_expression','parser.py',290),
  ('unary_expression -> deallocation_expression','unary_expression',1,'p_unary_expression','parser.py',291),
  ('deallocation_expression -> DELETE cast_expression','deallocation_expression',2,'p_deallocation_expression','parser.py',297),
  ('allocation_expression -> NEW new_type_name new_initializer','allocation_expression',3,'p_allocation_expression','parser.py',304),
  ('allocation_expression -> NEW new_type_name','allocation_expression',2,'p_allocation_expression','parser.py',305),
  ('allocation_expression -> NEW LPAREN type_name RPAREN new_initializer','allocation_expression',5,'p_allocation_expression','parser.py',306),
  ('allocation_expression -> NEW LPAREN type_name RPAREN','allocation_expression',4,'p_allocation_expression','parser.py',307),
  ('new_type_name -> type_specifier_ new_declarator','new_type_name',2,'p_new_type_name','parser.py',313),
  ('new_type_name -> type_specifier_','new_type_name',1,'p_new_type_name','parser.py',314),
  ('new_declarator -> new_declarator MULTOP','new_declarator',2,'p_new_declarator','parser.py',320),
  ('new_declarator -> MULTOP','new_declarator',1,'p_new_declarator','parser.py',321),
  ('new_declarator -> new_declarator LSPAREN expression RSPAREN','new_declarator',4,'p_new_declarator','parser.py',322),
  ('new_declarator -> LSPAREN expression RSPAREN','new_declarator',3,'p_new_declarator','parser.py',323),
  ('new_initializer -> LPAREN initializer_list RPAREN','new_initializer',3,'p_new_initializer','parser.py',329),
  ('new_initializer -> LPAREN RPAREN','new_initializer',2,'p_new_initializer','parser.py',330),
  ('unary1_operator -> PLUSOP','unary1_operator',1,'p_unary1_operator','parser.py',336),
  ('unary1_operator -> MINUSOP','unary1_operator',1,'p_unary1_operator','parser.py',337),
  ('unary1_operator -> NOTSYM','unary1_operator',1,'p_unary1_operator','parser.py',338),
  ('unary1_operator -> BNOP','unary1_operator',1,'p_unary1_operator','parser.py',339),
  ('unary2_operator -> MULTOP','unary2_operator',1,'p_unary2_operator','parser.py',346),
  ('unary2_operator -> BANDOP','unary2_operator',1,'p_unary2_operator','parser.py',347),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',354),
  ('postfix_expression -> postfix_expression LSPAREN expression RSPAREN','postfix_expression',4,'p_postfix_expression','parser.py',355),
  ('postfix_expression -> postfix_expression LPAREN expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',356),
  ('postfix_expression -> postfix_expression template_class_name LPAREN expression_list RPAREN','postfix_expression',5,'p_postfix_expression','parser.py',357),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',358),
  ('postfix_expression -> postfix_expression DOT name','postfix_expression',3,'p_postfix_expression','parser.py',359),
  ('postfix_expression -> postfix_expression ARROW name','postfix_expression',3,'p_postfix_expression','parser.py',360),
  ('postfix_expression -> postfix_expression DPLUSOP','postfix_expression',2,'p_postfix_expression','parser.py',361),
  ('postfix_expression -> postfix_expression DMINUSOP','postfix_expression',2,'p_postfix_expression','parser.py',362),
  ('primary_expression -> name','primary_expression',1,'p_primary_expression0','parser.py',373),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression1','parser.py',380),
  ('primary_expression -> THIS','primary_expression',1,'p_primary_expression2','parser.py',388),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression3','parser.py',397),
  ('literal -> STRING_L','literal',1,'p_literal_string','parser.py',407),
  ('literal -> NUMBER','literal',1,'p_literal_number','parser.py',413),
  ('literal -> SCHAR','literal',1,'p_literal_char','parser.py',419),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',425),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',426),
  ('abstract_declarator -> unary2_operator','abstract_declarator',1,'p_abstract_declarator','parser.py',435),
  ('abstract_declarator -> unary2_operator abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',436),
  ('abstract_declarator -> LSPAREN constant_expression RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',437),
  ('abstract_declarator -> abstract_declarator LSPAREN constant_expression RSPAREN','abstract_declarator',4,'p_abstract_declarator','parser.py',438),
  ('abstract_declarator -> LSPAREN RSPAREN','abstract_declarator',2,'p_abstract_declarator','parser.py',439),
  ('abstract_declarator -> abstract_declarator LSPAREN RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',440),
  ('declarator -> name','declarator',1,'p_declarator0','parser.py',476),
  ('declarator -> unary2_operator declarator','declarator',2,'p_declarator1','parser.py',483),
  ('declarator -> declarator LSPAREN constant_expression RSPAREN','declarator',4,'p_declarator3','parser.py',498),
  ('declarator -> declarator LSPAREN RSPAREN','declarator',3,'p_declarator4','parser.py',509),
  ('arg_list -> argument_declaration_list','arg_list',1,'p_arg_list','parser.py',519),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','parser.py',520),
  ('argument_declaration_list -> argument_declaration','argument_declaration_list',1,'p_argument_declaration_list','parser.py',528),
  ('argument_declaration_list -> argument_declaration COMMA argument_declaration_list','argument_declaration_list',3,'p_argument_declaration_list','parser.py',529),
  ('argument_declaration -> type_specifier_ declarator','argument_declaration',2,'p_argument_declaration_1','parser.py',539),
  ('argument_declaration -> type_specifier_ declarator EQUAL expression','argument_declaration',4,'p_argument_declaration_2','parser.py',547),
  ('argument_declaration -> type_specifier_ abstract_declarator','argument_declaration',2,'p_argument_declaration_3','parser.py',556),
  ('argument_declaration -> type_specifier_','argument_declaration',1,'p_argument_declaration_4','parser.py',563),
  ('name -> IDENTIFIER','name',1,'p_name','parser.py',570),
  ('name -> DOUBLEBNOP IDENTIFIER','name',2,'p_name','parser.py',571),
  ('operator_name -> NEW','operator_name',1,'p_operator_name','parser.py',580),
  ('operator_name -> DELETE','operator_name',1,'p_operator_name','parser.py',581),
  ('operator_name -> PLUSOP','operator_name',1,'p_operator_name','parser.py',582),
  ('operator_name -> MINUSOP','operator_name',1,'p_operator_name','parser.py',583),
  ('operator_name -> MULTOP','operator_name',1,'p_operator_name','parser.py',584),
  ('operator_name -> DIVOP','operator_name',1,'p_operator_name','parser.py',585),
  ('operator_name -> MODOP','operator_name',1,'p_operator_name','parser.py',586),
  ('operator_name -> XOROP','operator_name',1,'p_operator_name','parser.py',587),
  ('operator_name -> BANDOP','operator_name',1,'p_operator_name','parser.py',588),
  ('operator_name -> BNOP','operator_name',1,'p_operator_name','parser.py',589),
  ('operator_name -> NOTSYM','operator_name',1,'p_operator_name','parser.py',590),
  ('operator_name -> EQUAL','operator_name',1,'p_operator_name','parser.py',591),
  ('operator_name -> LTCOMP','operator_name',1,'p_operator_name','parser.py',592),
  ('operator_name -> GTCOMP','operator_name',1,'p_operator_name','parser.py',593),
  ('operator_name -> PLUSEQOP','operator_name',1,'p_operator_name','parser.py',594),
  ('operator_name -> MINUSEQOP','operator_name',1,'p_operator_name','parser.py',595),
  ('operator_name -> MULTEQOP','operator_name',1,'p_operator_name','parser.py',596),
  ('operator_name -> DIVEQOP','operator_name',1,'p_operator_name','parser.py',597),
  ('operator_name -> MODEQOP','operator_name',1,'p_operator_name','parser.py',598),
  ('operator_name -> XOREQOP','operator_name',1,'p_operator_name','parser.py',599),
  ('operator_name -> BANDEQOP','operator_name',1,'p_operator_name','parser.py',600),
  ('operator_name -> LSHIFT','operator_name',1,'p_operator_name','parser.py',601),
  ('operator_name -> RSHIFT','operator_name',1,'p_operator_name','parser.py',602),
  ('operator_name -> RSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',603),
  ('operator_name -> LSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',604),
  ('operator_name -> EQCOMP','operator_name',1,'p_operator_name','parser.py',605),
  ('operator_name -> NEQCOMP','operator_name',1,'p_operator_name','parser.py',606),
  ('operator_name -> LTECOMP','operator_name',1,'p_operator_name','parser.py',607),
  ('operator_name -> GTECOMP','operator_name',1,'p_operator_name','parser.py',608),
  ('operator_name -> ANDOP','operator_name',1,'p_operator_name','parser.py',609),
  ('operator_name -> OROP','operator_name',1,'p_operator_name','parser.py',610),
  ('operator_name -> DPLUSOP','operator_name',1,'p_operator_name','parser.py',611),
  ('operator_name -> DMINUSOP','operator_name',1,'p_operator_name','parser.py',612),
  ('operator_name -> COMMA','operator_name',1,'p_operator_name','parser.py',613),
  ('operator_name -> ARROWSTAR','operator_name',1,'p_operator_name','parser.py',614),
  ('operator_name -> ARROW','operator_name',1,'p_operator_name','parser.py',615),
  ('template_class_name -> LTEMPLATE template_arg_list RTEMPLATE','template_class_name',3,'p_template_class_name','parser.py',624),
  ('template_arg_list -> type_name','template_arg_list',1,'p_template_arg_list','parser.py',630),
  ('template_arg_list -> template_arg_list COMMA type_name','template_arg_list',3,'p_template_arg_list','parser.py',631),
  ('type_name -> type_specifier_ abstract_declarator','type_name',2,'p_type_name','parser.py',643),
  ('type_name -> type_specifier_','type_name',1,'p_type_name','parser.py',644),
  ('type_specifier_ -> CONST type_specifier','type_specifier_',2,'p_type_specifier_','parser.py',655),
  ('type_specifier_ -> type_specifier','type_specifier_',1,'p_type_specifier_','parser.py',656),
  ('typedef_declarator -> TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON','typedef_declarator',5,'p_typedef_declarator','parser.py',668),
  ('typedef_declarator -> TYPEDEF type_specifier_ IDENTIFIER SEMICOLON','typedef_declarator',4,'p_typedef_declarator','parser.py',669),
  ('type_specifier -> simple_type_name','type_specifier',1,'p_type_specifier','parser.py',675),
  ('type_specifier -> complex_type_specifier','type_specifier',1,'p_type_specifier','parser.py',676),
  ('simple_type_name -> CHAR','simple_type_name',1,'p_simple_type_name','parser.py',684),
  ('simple_type_name -> SHORT','simple_type_name',1,'p_simple_type_name','parser.py',685),
  ('simple_type_name -> INT','simple_type_name',1,'p_simple_type_name','parser.py',686),
  ('simple_type_name -> LONG','simple_type_name',1,'p_simple_type_name','parser.py',687),
  ('simple_type_name -> SIGNED','simple_type_name',1,'p_simple_type_name','parser.py',688),
  ('simple_type_name -> UNSIGNED','simple_type_name',1,'p_simple_type_name','parser.py',689),
  ('simple_type_name -> FLOAT','simple_type_name',1,'p_simple_type_name','parser.py',690),
  ('simple_type_name -> DOUBLE','simple_type_name',1,'p_simple_type_name','parser.py',691),
  ('simple_type_name -> VOID','simple_type_name',1,'p_simple_type_name','parser.py',692),
  ('simple_type_name -> STRING','simple_type_name',1,'p_simple_type_name','parser.py',693),
  ('simple_type_name -> AUTO','simple_type_name',1,'p_simple_type_name','parser.py',694),
  ('complex_type_specifier -> class_key IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',704),
  ('complex_type_specifier -> class_key IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',705),
  ('complex_type_specifier -> TYPE IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',706),
  ('complex_type_specifier -> TYPE IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',707),
  ('pure_specifier -> EQUAL NUMBER','pure_specifier',2,'p_pure_specifier','parser.py',719),
  ('class_head -> class_key IDENTIFIER base_spec','class_head',3,'p_class_head','parser.py',724),
  ('class_head -> class_key IDENTIFIER','class_head',2,'p_class_head','parser.py',725),
  ('base_spec -> COLON base_list','base_spec',2,'p_base_spec','parser.py',733),
  ('base_list -> base_specifier','base_list',1,'p_base_list','parser.py',738),
  ('base_list -> base_list COMMA base_specifier','base_list',3,'p_base_list','parser.py',739),
  ('base_specifier -> class_key IDENTIFIER','base_specifier',2,'p_base_specifier','parser.py',746),
  ('base_specifier -> class_key IDENTIFIER template_class_name','base_specifier',3,'p_base_specifier','parser.py',747),
  ('base_specifier -> IDENTIFIER','base_specifier',1,'p_base_specifier','parser.py',748),
  ('base_specifier -> IDENTIFIER template_class_name','base_specifier',2,'p_base_specifier','parser.py',749),
  ('base_specifier -> access_specifier class_key IDENTIFIER','base_specifier',3,'p_base_specifier','parser.py',750),
  ('base_specifier -> access_specifier class_key IDENTIFIER template_class_name','base_specifier',4,'p_base_specifier','parser.py',751),
  ('class_key -> CLASS','class_key',1,'p_class_key','parser.py',760),
  ('class_key -> STRUCT','class_key',1,'p_class_key','parser.py',761),
  ('class_define_specifier -> class_head LCPAREN member_list RCPAREN','class_define_specifier',4,'p_class_define_specifier','parser.py',768),
  ('class_define_specifier -> class_head LCPAREN RCPAREN','class_define_specifier',3,'p_class_define_specifier','parser.py',769),
  ('member_list -> member_access_list','member_list',1,'p_member_list','parser.py',776),
  ('member_list -> access_list','member_list',1,'p_member_list','parser.py',777),
  ('member_list -> member_list access_list','member_list',2,'p_member_list','parser.py',778),
  ('access_specifier -> PRIVATE','access_specifier',1,'p_access_specifier','parser.py',784),
  ('access_specifier -> PROTECTED','access_specifier',1,'p_access_specifier','parser.py',785),
  ('access_specifier -> PUBLIC','access_specifier',1,'p_access_specifier','parser.py',786),
  ('access_list -> access_specifier COLON member_access_list','access_list',3,'p_access_list','parser.py',792),
  ('access_list -> access_specifier COLON','access_list',2,'p_access_list','parser.py',793),
  ('member_access_list -> member_declaration member_access_list','member_access_list',2,'p_member_access_list','parser.py',798),
  ('member_access_list -> member_declaration','member_access_list',1,'p_member_access_list','parser.py',799),
  ('member_declaration -> type_specifier_ member_declarator_list SEMICOLON','member_declaration',3,'p_member_declaration','parser.py',804),
  ('member_declaration -> member_declarator_list SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',805),
  ('member_declaration -> type_specifier_ SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',806),
  ('member_declaration -> SEMICOLON','member_declaration',1,'p_member_declaration','parser.py',807),
  ('member_declaration -> function_definition','member_declaration',1,'p_member_declaration','parser.py',808),
  ('member_declaration -> class_define_specifier SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',809),
  ('member_declarator_list -> member_declarator','member_declarator_list',1,'p_member_declarator_list','parser.py',816),
  ('member_declarator_list -> member_declarator_list COMMA member_declarator','member_declarator_list',3,'p_member_declarator_list','parser.py',817),
  ('member_declarator -> declarator pure_specifier','member_declarator',2,'p_member_declarator','parser.py',823),
  ('member_declarator -> declarator','member_declarator',1,'p_member_declarator','parser.py',824),
  ('function_definition -> type_specifier_ declarator push_scope LPAREN arg_list RPAREN fct_body pop_scope','function_definition',8,'p_function_definition','parser.py',831),
  ('function_decl -> type_specifier_ declarator LPAREN arg_list RPAREN','function_decl',5,'p_function_decl','parser.py',859),
  ('fct_body -> compound_statement','fct_body',1,'p_fct_body','parser.py',868),
  ('compound_statement -> LCPAREN statement_list RCPAREN','compound_statement',3,'p_compound_statement','parser.py',873),
  ('compound_statement -> LCPAREN RCPAREN','compound_statement',2,'p_compound_statement','parser.py',874),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',880),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',881),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',887),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',888),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',889),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',890),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',891),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',892),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',893),
  ('statement -> try_block','statement',1,'p_statement','parser.py',894),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',900),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',901),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',902),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',903),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',904),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',910),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',911),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',912),
  ('try_block -> TRY compound_statement CATCH compound_statement','try_block',4,'p_try_block','parser.py',918),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',923),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',924),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',925),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','parser.py',931),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',932),
  ('iteration_statement -> FOR LPAREN for_init_statement expression SEMICOLON expression RPAREN statement','iteration_statement',8,'p_iteration_statement','parser.py',933),
  ('iteration_statement -> FOR LPAREN for_init_statement SEMICOLON expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',934),
  ('iteration_statement -> FOR LPAREN for_init_statement expression SEMICOLON RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',935),
  ('iteration_statement -> FOR LPAREN for_init_statement SEMICOLON RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',936),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_for_init_statement','parser.py',942),
  ('for_init_statement -> declaration_statement','for_init_statement',1,'p_for_init_statement','parser.py',943),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',949),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',950),
  ('declaration_statement -> declaration','declaration_statement',1,'p_declaration_statement','parser.py',956),
  ('declaration -> type_specifier_ declarator_list SEMICOLON','declaration',3,'p_declaration0','parser.py',961),
  ('declaration -> asm_declaration','declaration',1,'p_declaration1','parser.py',968),
  ('declaration -> function_definition','declaration',1,'p_declaration2','parser.py',975),
  ('declaration -> function_decl','declaration',1,'p_declaration2','parser.py',976),
  ('declaration -> class_define_specifier SEMICOLON','declaration',2,'p_declaration3','parser.py',983),
  ('declaration -> template_declaration','declaration',1,'p_declaration4','parser.py',989),
  ('declaration -> typedef_declarator','declaration',1,'p_declaration5','parser.py',995),
  ('template_declaration -> TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declaration','template_declaration',5,'p_template_declaration','parser.py',1000),
  ('template_argument_list -> argument_declaration','template_argument_list',1,'p_template_argument_list','parser.py',1005),
  ('template_argument_list -> template_argument_list COMMA argument_declaration','template_argument_list',3,'p_template_argument_list','parser.py',1006),
  ('declarator_list -> init_declarator','declarator_list',1,'p_declarator_list','parser.py',1012),
  ('declarator_list -> declarator_list COMMA init_declarator','declarator_list',3,'p_declarator_list','parser.py',1013),
  ('init_declarator -> declarator initializer','init_declarator',2,'p_init_declarator','parser.py',1019),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',1020),
  ('initializer -> EQUAL assignment_expression','initializer',2,'p_initializer','parser.py',1026),
  ('initializer -> EQUAL LCPAREN initializer_list RCPAREN','initializer',4,'p_initializer','parser.py',1027),
  ('initializer -> EQUAL LCPAREN initializer_list COMMA RCPAREN','initializer',5,'p_initializer','parser.py',1028),
  ('initializer -> LPAREN expression_list RPAREN','initializer',3,'p_initializer','parser.py',1029),
  ('initializer_list -> assignment_expression','initializer_list',1,'p_initializer_list','parser.py',1035),
  ('initializer_list -> initializer_list COMMA assignment_expression','initializer_list',3,'p_initializer_list','parser.py',1036),
  ('initializer_list -> LCPAREN initializer_list RCPAREN','initializer_list',3,'p_initializer_list','parser.py',1037),
  ('initializer_list -> LCPAREN initializer_list COMMA RCPAREN','initializer_list',4,'p_initializer_list','parser.py',1038),
  ('asm_declaration -> ASM LPAREN STRING_L RPAREN SEMICOLON','asm_declaration',5,'p_asm_declaration','parser.py',1044),
  ('expression_list -> assignment_expression','expression_list',1,'p_expression_list','parser.py',1049),
  ('expression_list -> expression_list COMMA assignment_expression','expression_list',3,'p_expression_list','parser.py',1050),
  ('push_scope -> <empty>','push_scope',0,'p_push_scope','parser.py',1056),
  ('pop_scope -> <empty>','pop_scope',0,'p_pop_scope','parser.py',1060),
]
