
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSOPMINUSOPleftMULTOPDIVOPMODOPleftDPLUSOPDMINUSOPleftDOTARROWleftLSHIFTRSHIFTleftLTCOMPLTECOMPleftGTCOMPGTECOMPleftLOWERleftHIGHERANDOP ARROW ARROWSTAR ASM AUTO BANDEQOP BANDOP BNOP BOREQOP BREAK CASE CATCH CHAR CLASS COLON COMMA CONST CONTINUE DEFAULT DELETE DIVEQOP DIVOP DMINUSOP DO DOT DOTSTAR DOUBLE DOUBLEBNOP DPLUSOP ELSE EQCOMP EQUAL FLOAT FOR GOTO GTCOMP GTECOMP HASHTAG IDENTIFIER IF INCLUDE INT LCPAREN LONG LPAREN LSHIFT LSHIFTEQOP LSPAREN LTCOMP LTECOMP LTEMPLATE MINUSEQOP MINUSOP MODEQOP MODOP MULTEQOP MULTOP NEQCOMP NEW NOTSYM NUMBER OPERATOR OROP PLUSEQOP PLUSOP PRIVATE PROTECTED PUBLIC QUESMARK RCPAREN RETURN RPAREN RSHIFT RSHIFTEQOP RSPAREN RTEMPLATE SCHAR SEMICOLON SHORT SIGNED SIZEOF STRING STRING_L STRUCT SWITCH TEMPLATE THIS THROW TRY TYPE TYPEDEF UNSIGNED VOID WHILE XOREQOP XOROPcontrol_line : control_line control_line_stmt\n                    | control_line_stmt\n    include_control : HASHTAG INCLUDE\n    control_line_stmt : include_control LTCOMP STRING_L GTCOMP\n                    | include_control STRING_L\n    program : control_line translation_unit\n               | translation_unit\n    translation_unit : declaration_seq declaration_seq : declaration_seq declaration\n                        | declaration\n    empty :constant_expression : conditional_expressionconditional_expression : logical_OR_expression \n                              | logical_OR_expression QUESMARK expression COLON conditional_expression \n    logical_OR_expression : logical_AND_expression \n                             | logical_OR_expression OROP logical_AND_expression \n    logical_AND_expression : inclusive_OR_expression %prec LOWER\n                              | logical_AND_expression ANDOP inclusive_OR_expression %prec HIGHER\n    inclusive_OR_expression : exclusive_OR_expression %prec LOWER\n                               | inclusive_OR_expression OROP exclusive_OR_expression %prec HIGHER\n    exclusive_OR_expression : AND_expression \n                               | exclusive_OR_expression XOROP AND_expression \n    AND_expression : equality_expression \n                      | AND_expression BANDOP equality_expression \n    equality_expression : relational_expression \n                           | equality_expression EQCOMP relational_expression \n                           | equality_expression NEQCOMP relational_expression \n    relational_expression : shift_expression \n                             | relational_expression LTCOMP  shift_expression \n                             | relational_expression GTCOMP  shift_expression \n                             | relational_expression LTECOMP shift_expression \n                             | relational_expression GTECOMP shift_expression \n    shift_expression : additive_expression \n                        | shift_expression LSHIFT additive_expression \n                        | shift_expression RSHIFT additive_expression \n    additive_expression : multiplicative_expression \n                           | additive_expression PLUSOP multiplicative_expression \n                           | additive_expression MINUSOP multiplicative_expression \n    multiplicative_expression : pm_expression \n                                 | multiplicative_expression MULTOP pm_expression \n                                 | multiplicative_expression DIVOP pm_expression \n                                 | multiplicative_expression MODOP pm_expression \n    pm_expression : cast_expression \n                     | pm_expression DOTSTAR cast_expression \n                     | pm_expression ARROWSTAR cast_expression \n    expression : assignment_expression \n                  | throw_expression\n                  | expression COMMA assignment_expression \n    throw_expression : THROW expression \n                        | THROW \n    assignment_expression : conditional_expression \n                             | unary_expression  assignment_operator assignment_expression \n    assignment_operator :   EQUAL \n                           | MULTEQOP \n                           | DIVEQOP \n                           | MODEQOP \n                           | PLUSEQOP \n                           | MINUSEQOP \n                           | LSHIFTEQOP \n                           | RSHIFTEQOP \n                           | BANDEQOP \n                           | BOREQOP \n    unary_expression : postfix_expression \n                        | DPLUSOP unary_expression \n                        | DMINUSOP unary_expression \n                        | unary1_operator cast_expression \n                        | unary2_operator cast_expression \n                        | SIZEOF  unary_expression \n                        | SIZEOF LPAREN type_name  RPAREN \n                        | allocation_expression \n                        | deallocation_expression \n    deallocation_expression : DELETE cast_expression  allocation_expression : NEW new_type_name new_initializer \n                             | NEW new_type_name \n                             | NEW LPAREN type_name  RPAREN  new_initializer \n                             | NEW LPAREN type_name  RPAREN \n    new_type_name : type_specifier_ new_declarator \n                     | type_specifier_ \n    new_declarator : new_declarator MULTOP\n                      | MULTOP \n                      | new_declarator LSPAREN expression RSPAREN \n                      | LSPAREN expression RSPAREN \n    new_initializer : LPAREN initializer_list  RPAREN \n                       | LPAREN  RPAREN \n    unary1_operator : PLUSOP \n                      | MINUSOP \n                      | NOTSYM \n                      | BNOP \n    unary2_operator : MULTOP \n                      | BANDOP \n    postfix_expression : primary_expression \n                          | postfix_expression     LSPAREN expression RSPAREN \n                          | postfix_expression     LPAREN expression_list  RPAREN  \n                          | postfix_expression template_class_name  LPAREN expression_list  RPAREN \n                          | postfix_expression     LPAREN  RPAREN \n                          | postfix_expression     DOT name \n                          | postfix_expression     ARROW name \n                          | postfix_expression     DPLUSOP \n                          | postfix_expression     DMINUSOP \n    primary_expression : name   \n    primary_expression : literal           \n    primary_expression : THIS  \n    primary_expression : LPAREN expression  RPAREN   \n    literal :  STRING_L literal : NUMBER literal : SCHAR cast_expression : unary_expression \n                       | LPAREN type_name  RPAREN  cast_expression \n    abstract_declarator : unary2_operator %prec LOWER\n                           | unary2_operator abstract_declarator %prec LOWER\n                           | LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN constant_expression RSPAREN %prec HIGHER\n                           | LSPAREN  RSPAREN %prec HIGHER\n                           | abstract_declarator LSPAREN RSPAREN %prec HIGHER\n    declarator : name declarator : unary2_operator declarator %prec HIGHER  declarator :  declarator LSPAREN constant_expression RSPAREN  declarator : declarator LSPAREN RSPAREN   arg_list : argument_declaration_list \n                  | empty\n    argument_declaration_list : argument_declaration \n                                 | argument_declaration COMMA argument_declaration_list\n    argument_declaration : type_specifier_ declarator   argument_declaration :  type_specifier_ declarator  EQUAL expression argument_declaration : type_specifier_ abstract_declarator argument_declaration :  type_specifier_ name : IDENTIFIER \n            | DOUBLEBNOP IDENTIFIER \n    operator_name : NEW \n                     | DELETE \n                     | PLUSOP \n                     | MINUSOP \n                     | MULTOP \n                     | DIVOP \n                     | MODOP \n                     | XOROP \n                     | BANDOP \n                     | BNOP \n                     | NOTSYM \n                     | EQUAL \n                     | LTCOMP \n                     | GTCOMP \n                     | PLUSEQOP \n                     | MINUSEQOP \n                     | MULTEQOP \n                     | DIVEQOP \n                     | MODEQOP \n                     | XOREQOP \n                     | BANDEQOP \n                     | LSHIFT \n                     | RSHIFT \n                     | RSHIFTEQOP \n                     | LSHIFTEQOP \n                     | EQCOMP \n                     | NEQCOMP \n                     | LTECOMP \n                     | GTECOMP \n                     | ANDOP \n                     | OROP \n                     | DPLUSOP \n                     | DMINUSOP \n                     | COMMA \n                     | ARROWSTAR \n                     | ARROW \n    template_class_name : LTEMPLATE template_arg_list RTEMPLATEtemplate_arg_list : type_name \n                         | template_arg_list COMMA type_name\n    type_name : type_specifier_ abstract_declarator \n                 | type_specifier_ \n    type_specifier_ : CONST type_specifier \n                       | type_specifier\n    typedef_declarator : TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON\n                          | TYPEDEF type_specifier_  IDENTIFIER SEMICOLON\n    type_specifier : simple_type_name \n                      | complex_type_specifier  \n    simple_type_name : CHAR \n                        | SHORT \n                        | INT \n                        | LONG \n                        | SIGNED \n                        | UNSIGNED \n                        | FLOAT \n                        | DOUBLE \n                        | VOID\n                        | STRING\n                        | AUTO\n\n    complex_type_specifier : class_key IDENTIFIER \n                                | class_key  IDENTIFIER template_class_name\n                                | TYPE IDENTIFIER \n                                | TYPE IDENTIFIER template_class_name\n                                 \n    pure_specifier :   EQUAL NUMBERclass_head : class_key IDENTIFIER base_spec \n                  | class_key IDENTIFIER \n    base_spec : COLON base_listbase_list : base_specifier\n                 | base_list COMMA base_specifier \n    base_specifier : class_key  IDENTIFIER \n                      | class_key  IDENTIFIER template_class_name\n                      | IDENTIFIER \n                      | IDENTIFIER template_class_name\n                      | access_specifier class_key IDENTIFIER\n                      | access_specifier class_key IDENTIFIER template_class_name\n    class_key : CLASS \n                 | STRUCT\n    class_define_specifier : class_head LCPAREN member_list RCPAREN \n                       | class_head LCPAREN RCPAREN \n    member_list : member_access_list\n                   | access_list\n                   | member_list access_list\n    access_specifier : PRIVATE\n                        | PROTECTED\n                        | PUBLIC\n    access_list : access_specifier COLON member_access_list\n                   | access_specifier COLON member_access_list : member_declaration member_access_list\n                          | member_declaration member_declaration : type_specifier_ member_declarator_list SEMICOLON\n                          | member_declarator_list SEMICOLON\n                          | type_specifier_ SEMICOLON\n                          | SEMICOLON\n                          | function_definition\n                          |  class_define_specifier SEMICOLON\n    member_declarator_list : member_declarator \n                              | member_declarator_list COMMA member_declarator \n    member_declarator : declarator pure_specifier \n                         | declarator \n                         \n    function_definition : type_specifier_ declarator func_push_scope arg_list  RPAREN fct_body pop_scope \n    function_decl : type_specifier_ declarator func_push_scope arg_list  RPAREN SEMICOLON pop_scope  func_push_scope : LPAREN fct_body : compound_statementcompound_statement : LCPAREN statement_list RCPAREN \n                          | LCPAREN RCPAREN \n    statement_list : statement \n                      | statement_list statement \n    statement : expression_statement \n                 | push_scope compound_statement pop_scope\n                 | selection_statement \n                 | iteration_statement \n                 | jump_statement \n                 | declaration_statement \n                 | try_block \n    jump_statement : BREAK SEMICOLON \n                      | CONTINUE SEMICOLON \n                      | RETURN expression SEMICOLON \n                      | RETURN SEMICOLON \n                      | GOTO IDENTIFIER SEMICOLON \n    selection_statement : IF LPAREN expression  RPAREN push_scope compound_statement pop_scope\n                           | IF LPAREN expression  RPAREN push_scope compound_statement pop_scope ELSE push_scope compound_statement pop_scope \n                           | SWITCH LPAREN expression  RPAREN push_scope  LCPAREN labeled_statement_list RCPAREN pop_scope\n    try_block : TRY push_scope compound_statement pop_scope CATCH  push_scope compound_statement pop_scopelabeled_statement_list : labeled_statement\n                              | labeled_statement_list labeled_statement \n    labeled_statement : CASE constant_expression COLON statement_list\n                         | DEFAULT COLON statement_list\n    iteration_statement : WHILE LPAREN expression  RPAREN  statement \n                           | DO statement WHILE LPAREN expression  RPAREN  SEMICOLON \n                           | FOR LPAREN for_init_statement expression SEMICOLON expression  RPAREN  statement \n                           | FOR LPAREN for_init_statement SEMICOLON expression  RPAREN  statement \n                           | FOR LPAREN for_init_statement expression SEMICOLON  RPAREN  statement \n                           | FOR LPAREN for_init_statement SEMICOLON  RPAREN  statement \n    for_init_statement : expression_statement \n                          | declaration_statement \n    expression_statement : expression SEMICOLON \n                            | SEMICOLON \n    declaration_statement : declarationdeclaration : type_specifier_ declarator_list SEMICOLON declaration :  asm_declaration  declaration :  function_definition \n                    | function_decl\n    declaration : class_define_specifier SEMICOLON declaration :  template_declaration declaration : typedef_declarator template_declaration : TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declarationtemplate_argument_list : argument_declaration\n                              | template_argument_list COMMA argument_declaration\n    declarator_list : init_declarator \n                       | declarator_list COMMA init_declarator \n    init_declarator : declarator initializer \n                       | declarator \n    initializer :   EQUAL assignment_expression \n                   |   EQUAL LCPAREN initializer_list RCPAREN \n                   |   EQUAL LCPAREN initializer_list COMMA RCPAREN \n                   | LPAREN expression_list  RPAREN \n    initializer_list : assignment_expression \n                        | initializer_list COMMA assignment_expression \n                        | LCPAREN initializer_list RCPAREN \n                        | LCPAREN initializer_list COMMA RCPAREN \n    asm_declaration : ASM LPAREN STRING_L  RPAREN  SEMICOLONexpression_list : assignment_expression \n                       | expression_list COMMA assignment_expression \n    push_scope : pop_scope : '
    
_lr_action_items = {'HASHTAG':([0,2,4,40,43,103,],[8,8,-2,-1,-5,-4,]),'CONST':([0,2,4,5,7,10,11,12,14,15,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[16,16,-2,16,-10,-267,-268,-269,-271,-272,16,-1,-9,-5,-270,16,16,-266,16,-229,16,-220,-221,16,-4,16,16,16,16,-219,-218,-222,16,16,-173,16,16,16,-288,-217,16,-229,-273,-172,16,-292,-292,-230,16,-227,-228,16,-232,-233,-235,-237,-238,-239,-240,-241,-264,16,-265,-231,-234,-292,-263,16,-242,-243,-245,-236,-244,-246,16,-255,16,-292,16,16,-260,-247,-256,16,-259,-258,-292,-292,16,-257,-250,-249,16,16,-292,16,-248,]),'ASM':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,251,258,261,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[18,18,-2,18,-10,-267,-268,-269,-271,-272,-1,-9,-5,-270,-266,-4,18,-173,-288,-273,-172,-292,-292,-230,18,-227,-228,18,-232,-233,-235,-237,-238,-239,-240,-241,-264,18,-265,-231,-234,-292,-263,18,-242,-243,-245,-236,-244,-246,18,-255,18,-292,18,18,-260,-247,-256,18,-259,-258,-292,-292,18,-257,-250,-249,18,18,-292,18,-248,]),'TEMPLATE':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,251,258,261,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[20,20,-2,20,-10,-267,-268,-269,-271,-272,-1,-9,-5,-270,-266,-4,20,-173,-288,-273,-172,-292,-292,-230,20,-227,-228,20,-232,-233,-235,-237,-238,-239,-240,-241,-264,20,-265,-231,-234,-292,-263,20,-242,-243,-245,-236,-244,-246,20,-255,20,-292,20,20,-260,-247,-256,20,-259,-258,-292,-292,20,-257,-250,-249,20,20,-292,20,-248,]),'TYPEDEF':([0,2,4,5,7,10,11,12,14,15,40,41,43,54,64,103,168,175,251,258,261,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[21,21,-2,21,-10,-267,-268,-269,-271,-272,-1,-9,-5,-270,-266,-4,21,-173,-288,-273,-172,-292,-292,-230,21,-227,-228,21,-232,-233,-235,-237,-238,-239,-240,-241,-264,21,-265,-231,-234,-292,-263,21,-242,-243,-245,-236,-244,-246,21,-255,21,-292,21,21,-260,-247,-256,21,-259,-258,-292,-292,21,-257,-250,-249,21,21,-292,21,-248,]),'CHAR':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[25,25,-2,25,-10,-267,-268,-269,-271,-272,25,25,-1,-9,-5,-270,25,25,-266,25,-229,25,-220,-221,25,-4,25,25,25,25,-219,-218,-222,25,25,-173,25,25,25,-288,-217,25,-229,-273,-172,25,-292,-292,-230,25,-227,-228,25,-232,-233,-235,-237,-238,-239,-240,-241,-264,25,-265,-231,-234,-292,-263,25,-242,-243,-245,-236,-244,-246,25,-255,25,-292,25,25,-260,-247,-256,25,-259,-258,-292,-292,25,-257,-250,-249,25,25,-292,25,-248,]),'SHORT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[26,26,-2,26,-10,-267,-268,-269,-271,-272,26,26,-1,-9,-5,-270,26,26,-266,26,-229,26,-220,-221,26,-4,26,26,26,26,-219,-218,-222,26,26,-173,26,26,26,-288,-217,26,-229,-273,-172,26,-292,-292,-230,26,-227,-228,26,-232,-233,-235,-237,-238,-239,-240,-241,-264,26,-265,-231,-234,-292,-263,26,-242,-243,-245,-236,-244,-246,26,-255,26,-292,26,26,-260,-247,-256,26,-259,-258,-292,-292,26,-257,-250,-249,26,26,-292,26,-248,]),'INT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[27,27,-2,27,-10,-267,-268,-269,-271,-272,27,27,-1,-9,-5,-270,27,27,-266,27,-229,27,-220,-221,27,-4,27,27,27,27,-219,-218,-222,27,27,-173,27,27,27,-288,-217,27,-229,-273,-172,27,-292,-292,-230,27,-227,-228,27,-232,-233,-235,-237,-238,-239,-240,-241,-264,27,-265,-231,-234,-292,-263,27,-242,-243,-245,-236,-244,-246,27,-255,27,-292,27,27,-260,-247,-256,27,-259,-258,-292,-292,27,-257,-250,-249,27,27,-292,27,-248,]),'LONG':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[28,28,-2,28,-10,-267,-268,-269,-271,-272,28,28,-1,-9,-5,-270,28,28,-266,28,-229,28,-220,-221,28,-4,28,28,28,28,-219,-218,-222,28,28,-173,28,28,28,-288,-217,28,-229,-273,-172,28,-292,-292,-230,28,-227,-228,28,-232,-233,-235,-237,-238,-239,-240,-241,-264,28,-265,-231,-234,-292,-263,28,-242,-243,-245,-236,-244,-246,28,-255,28,-292,28,28,-260,-247,-256,28,-259,-258,-292,-292,28,-257,-250,-249,28,28,-292,28,-248,]),'SIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[29,29,-2,29,-10,-267,-268,-269,-271,-272,29,29,-1,-9,-5,-270,29,29,-266,29,-229,29,-220,-221,29,-4,29,29,29,29,-219,-218,-222,29,29,-173,29,29,29,-288,-217,29,-229,-273,-172,29,-292,-292,-230,29,-227,-228,29,-232,-233,-235,-237,-238,-239,-240,-241,-264,29,-265,-231,-234,-292,-263,29,-242,-243,-245,-236,-244,-246,29,-255,29,-292,29,29,-260,-247,-256,29,-259,-258,-292,-292,29,-257,-250,-249,29,29,-292,29,-248,]),'UNSIGNED':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[30,30,-2,30,-10,-267,-268,-269,-271,-272,30,30,-1,-9,-5,-270,30,30,-266,30,-229,30,-220,-221,30,-4,30,30,30,30,-219,-218,-222,30,30,-173,30,30,30,-288,-217,30,-229,-273,-172,30,-292,-292,-230,30,-227,-228,30,-232,-233,-235,-237,-238,-239,-240,-241,-264,30,-265,-231,-234,-292,-263,30,-242,-243,-245,-236,-244,-246,30,-255,30,-292,30,30,-260,-247,-256,30,-259,-258,-292,-292,30,-257,-250,-249,30,30,-292,30,-248,]),'FLOAT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[31,31,-2,31,-10,-267,-268,-269,-271,-272,31,31,-1,-9,-5,-270,31,31,-266,31,-229,31,-220,-221,31,-4,31,31,31,31,-219,-218,-222,31,31,-173,31,31,31,-288,-217,31,-229,-273,-172,31,-292,-292,-230,31,-227,-228,31,-232,-233,-235,-237,-238,-239,-240,-241,-264,31,-265,-231,-234,-292,-263,31,-242,-243,-245,-236,-244,-246,31,-255,31,-292,31,31,-260,-247,-256,31,-259,-258,-292,-292,31,-257,-250,-249,31,31,-292,31,-248,]),'DOUBLE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[32,32,-2,32,-10,-267,-268,-269,-271,-272,32,32,-1,-9,-5,-270,32,32,-266,32,-229,32,-220,-221,32,-4,32,32,32,32,-219,-218,-222,32,32,-173,32,32,32,-288,-217,32,-229,-273,-172,32,-292,-292,-230,32,-227,-228,32,-232,-233,-235,-237,-238,-239,-240,-241,-264,32,-265,-231,-234,-292,-263,32,-242,-243,-245,-236,-244,-246,32,-255,32,-292,32,32,-260,-247,-256,32,-259,-258,-292,-292,32,-257,-250,-249,32,32,-292,32,-248,]),'VOID':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[33,33,-2,33,-10,-267,-268,-269,-271,-272,33,33,-1,-9,-5,-270,33,33,-266,33,-229,33,-220,-221,33,-4,33,33,33,33,-219,-218,-222,33,33,-173,33,33,33,-288,-217,33,-229,-273,-172,33,-292,-292,-230,33,-227,-228,33,-232,-233,-235,-237,-238,-239,-240,-241,-264,33,-265,-231,-234,-292,-263,33,-242,-243,-245,-236,-244,-246,33,-255,33,-292,33,33,-260,-247,-256,33,-259,-258,-292,-292,33,-257,-250,-249,33,33,-292,33,-248,]),'STRING':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[34,34,-2,34,-10,-267,-268,-269,-271,-272,34,34,-1,-9,-5,-270,34,34,-266,34,-229,34,-220,-221,34,-4,34,34,34,34,-219,-218,-222,34,34,-173,34,34,34,-288,-217,34,-229,-273,-172,34,-292,-292,-230,34,-227,-228,34,-232,-233,-235,-237,-238,-239,-240,-241,-264,34,-265,-231,-234,-292,-263,34,-242,-243,-245,-236,-244,-246,34,-255,34,-292,34,34,-260,-247,-256,34,-259,-258,-292,-292,34,-257,-250,-249,34,34,-292,34,-248,]),'AUTO':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[35,35,-2,35,-10,-267,-268,-269,-271,-272,35,35,-1,-9,-5,-270,35,35,-266,35,-229,35,-220,-221,35,-4,35,35,35,35,-219,-218,-222,35,35,-173,35,35,35,-288,-217,35,-229,-273,-172,35,-292,-292,-230,35,-227,-228,35,-232,-233,-235,-237,-238,-239,-240,-241,-264,35,-265,-231,-234,-292,-263,35,-242,-243,-245,-236,-244,-246,35,-255,35,-292,35,35,-260,-247,-256,35,-259,-258,-292,-292,35,-257,-250,-249,35,35,-292,35,-248,]),'TYPE':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,101,103,128,141,148,159,161,163,165,168,169,175,189,230,232,251,253,254,255,258,261,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[36,36,-2,36,-10,-267,-268,-269,-271,-272,36,36,-1,-9,-5,-270,36,36,-266,36,-229,36,-220,-221,36,-4,36,36,36,36,-219,-218,-222,36,36,-173,36,36,36,-288,-217,36,-229,-273,-172,36,-292,-292,-230,36,-227,-228,36,-232,-233,-235,-237,-238,-239,-240,-241,-264,36,-265,-231,-234,-292,-263,36,-242,-243,-245,-236,-244,-246,36,-255,36,-292,36,36,-260,-247,-256,36,-259,-258,-292,-292,36,-257,-250,-249,36,36,-292,36,-248,]),'CLASS':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,86,87,88,100,101,103,128,141,148,159,161,163,165,168,169,175,183,189,230,232,251,253,254,255,258,261,265,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[37,37,-2,37,-10,-267,-268,-269,-271,-272,37,37,-1,-9,-5,-270,37,37,-266,37,-229,37,-220,-221,-210,-211,-212,37,37,-4,37,37,37,37,-219,-218,-222,37,37,-173,37,37,37,37,-288,-217,37,-229,-273,-172,37,37,-292,-292,-230,37,-227,-228,37,-232,-233,-235,-237,-238,-239,-240,-241,-264,37,-265,-231,-234,-292,-263,37,-242,-243,-245,-236,-244,-246,37,-255,37,-292,37,37,-260,-247,-256,37,-259,-258,-292,-292,37,-257,-250,-249,37,37,-292,37,-248,]),'STRUCT':([0,2,4,5,7,10,11,12,14,15,16,21,40,41,43,54,58,59,64,66,69,79,83,84,86,87,88,100,101,103,128,141,148,159,161,163,165,168,169,175,183,189,230,232,251,253,254,255,258,261,265,270,272,273,274,275,327,328,329,330,331,332,334,335,336,337,338,340,344,350,371,372,373,374,379,380,381,383,394,402,403,408,415,419,421,425,426,427,429,434,435,436,437,438,440,443,444,445,447,448,449,450,451,452,],[38,38,-2,38,-10,-267,-268,-269,-271,-272,38,38,-1,-9,-5,-270,38,38,-266,38,-229,38,-220,-221,-210,-211,-212,38,38,-4,38,38,38,38,-219,-218,-222,38,38,-173,38,38,38,38,-288,-217,38,-229,-273,-172,38,38,-292,-292,-230,38,-227,-228,38,-232,-233,-235,-237,-238,-239,-240,-241,-264,38,-265,-231,-234,-292,-263,38,-242,-243,-245,-236,-244,-246,38,-255,38,-292,38,38,-260,-247,-256,38,-259,-258,-292,-292,38,-257,-250,-249,38,38,-292,38,-248,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'control_line':([0,],[2,]),'translation_unit':([0,2,],[3,39,]),'control_line_stmt':([0,2,],[4,40,]),'declaration_seq':([0,2,],[5,5,]),'include_control':([0,2,],[6,6,]),'declaration':([0,2,5,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[7,7,41,258,350,350,350,350,350,350,350,350,350,350,350,350,350,]),'type_specifier_':([0,2,5,21,58,59,66,79,101,128,141,148,159,168,169,189,230,232,254,270,275,329,344,379,408,419,425,426,435,443,448,449,451,],[9,9,9,60,81,93,93,81,186,186,233,186,81,9,93,93,186,186,93,186,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asm_declaration':([0,2,5,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function_definition':([0,2,5,58,79,159,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[11,11,11,84,84,84,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_decl':([0,2,5,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'class_define_specifier':([0,2,5,58,79,159,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[13,13,13,85,85,85,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'template_declaration':([0,2,5,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'typedef_declarator':([0,2,5,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'type_specifier':([0,2,5,16,21,58,59,66,79,101,128,141,148,159,168,169,189,230,232,254,270,275,329,344,379,408,419,425,426,435,443,448,449,451,],[17,17,17,55,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'class_head':([0,2,5,58,79,159,168,275,329,344,379,408,419,425,426,435,443,448,449,451,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'simple_type_name':([0,2,5,16,21,58,59,66,79,101,128,141,148,159,168,169,189,230,232,254,270,275,329,344,379,408,419,425,426,435,443,448,449,451,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'complex_type_specifier':([0,2,5,16,21,58,59,66,79,101,128,141,148,159,168,169,189,230,232,254,270,275,329,344,379,408,419,425,426,435,443,448,449,451,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'class_key':([0,2,5,16,21,58,59,66,79,100,101,128,141,148,159,168,169,183,189,230,232,254,265,270,275,329,344,379,408,419,425,426,435,443,448,449,451,],[24,24,24,56,56,24,56,56,24,181,56,56,56,56,24,24,56,268,56,56,56,56,181,56,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'declarator_list':([9,],[45,]),'declarator':([9,49,58,65,79,81,93,159,164,172,],[46,71,90,105,90,162,170,90,90,71,]),'init_declarator':([9,65,],[47,104,]),'name':([9,49,58,65,67,69,70,79,81,93,97,128,130,131,132,133,134,142,148,154,159,164,172,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,220,221,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[48,48,48,48,138,138,138,48,48,48,138,138,138,138,138,138,138,138,138,138,48,48,48,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,306,307,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'unary2_operator':([9,49,58,60,65,67,69,70,79,81,93,96,97,128,130,131,132,133,134,142,148,154,159,164,172,174,186,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[49,49,49,96,49,133,133,133,49,49,172,96,133,133,133,133,133,133,133,133,133,133,49,49,172,133,96,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'func_push_scope':([46,162,],[66,254,]),'initializer':([46,105,],[68,68,]),'member_list':([58,],[75,]),'member_access_list':([58,79,159,],[77,158,252,]),'access_list':([58,75,],[78,157,]),'member_declaration':([58,79,159,],[79,79,79,]),'access_specifier':([58,75,100,265,],[80,80,183,183,]),'member_declarator_list':([58,79,81,159,],[82,82,160,82,]),'member_declarator':([58,79,81,159,164,],[89,89,89,89,256,]),'template_argument_list':([59,],[91,]),'argument_declaration':([59,66,169,189,254,],[92,109,259,109,109,]),'abstract_declarator':([60,93,96,172,186,],[94,171,176,176,271,]),'base_spec':([61,],[98,]),'template_class_name':([61,62,73,129,182,266,325,],[99,102,99,219,267,324,370,]),'arg_list':([66,254,],[106,320,]),'argument_declaration_list':([66,189,254,],[107,276,107,]),'empty':([66,254,],[108,108,]),'constant_expression':([67,97,174,432,],[110,177,262,442,]),'conditional_expression':([67,69,70,97,128,148,154,174,187,191,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[112,151,151,112,151,151,151,112,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,386,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,112,151,151,151,151,151,]),'logical_OR_expression':([67,69,70,97,128,148,154,174,187,191,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'logical_AND_expression':([67,69,70,97,128,148,154,174,187,191,192,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[114,114,114,114,114,114,114,114,114,114,278,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'inclusive_OR_expression':([67,69,70,97,128,148,154,174,187,191,192,193,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[115,115,115,115,115,115,115,115,115,115,115,279,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'exclusive_OR_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[116,116,116,116,116,116,116,116,116,116,116,116,280,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'AND_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[117,117,117,117,117,117,117,117,117,117,117,117,117,281,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'equality_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,282,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'relational_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,197,198,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,283,284,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'shift_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,285,286,287,288,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'additive_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,289,290,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'multiplicative_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,291,292,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'pm_expression':([67,69,70,97,128,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,293,294,295,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'cast_expression':([67,69,70,97,128,132,133,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[126,126,126,126,126,227,228,234,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,296,297,126,126,126,126,126,126,126,126,126,126,353,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'unary_expression':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[127,152,152,127,152,224,226,127,127,229,127,152,152,127,152,152,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,152,152,152,152,152,152,152,152,152,152,127,152,152,152,152,152,152,152,152,127,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,127,152,152,152,152,152,]),'postfix_expression':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'unary1_operator':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'allocation_expression':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'deallocation_expression':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'primary_expression':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'literal':([67,69,70,97,128,130,131,132,133,134,142,148,154,174,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,217,218,225,230,236,237,248,260,275,298,300,305,310,314,319,329,344,348,352,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,432,435,443,448,449,451,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'expression_list':([69,187,218,305,],[149,149,303,357,]),'assignment_expression':([69,70,128,148,154,187,191,216,217,218,225,230,236,237,248,260,275,300,305,310,314,319,329,344,348,363,366,375,376,377,379,389,399,408,409,411,417,419,425,426,435,443,448,449,451,],[150,153,214,214,250,150,214,214,214,150,214,214,315,316,250,214,214,354,150,250,214,368,214,214,214,214,368,214,214,214,214,368,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'pure_specifier':([90,162,],[166,166,]),'base_list':([100,],[179,]),'base_specifier':([100,265,],[180,323,]),'template_arg_list':([101,],[184,]),'type_name':([101,128,148,230,232,270,],[185,212,212,308,311,326,]),'expression':([128,148,191,216,217,225,230,260,275,314,329,344,348,363,375,376,377,379,399,408,409,411,417,419,425,426,435,443,448,449,451,],[213,213,277,301,302,213,213,321,339,364,339,339,382,391,395,396,397,339,410,339,416,418,424,339,339,339,339,339,339,339,339,]),'throw_expression':([128,148,191,216,217,225,230,260,275,314,329,344,348,363,375,376,377,379,399,408,409,411,417,419,425,426,435,443,448,449,451,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'new_type_name':([141,],[231,]),'assignment_operator':([152,],[237,]),'initializer_list':([154,248,310,],[249,317,359,]),'fct_body':([188,369,],[272,272,]),'compound_statement':([188,333,369,385,413,428,446,],[274,373,274,404,421,438,450,]),'new_initializer':([231,361,],[309,390,]),'new_declarator':([233,],[312,]),'pop_scope':([272,273,373,404,421,438,440,450,],[327,328,394,412,429,445,447,452,]),'statement_list':([275,443,448,],[329,449,451,]),'statement':([275,329,344,408,419,425,426,435,443,448,449,451,],[331,372,378,415,427,436,437,444,331,331,372,372,]),'expression_statement':([275,329,344,379,408,419,425,426,435,443,448,449,451,],[332,332,332,400,332,332,332,332,332,332,332,332,332,]),'push_scope':([275,329,344,351,406,407,408,419,420,425,426,435,439,443,448,449,451,],[333,333,333,385,413,414,333,333,428,333,333,333,446,333,333,333,333,]),'selection_statement':([275,329,344,408,419,425,426,435,443,448,449,451,],[334,334,334,334,334,334,334,334,334,334,334,334,]),'iteration_statement':([275,329,344,408,419,425,426,435,443,448,449,451,],[335,335,335,335,335,335,335,335,335,335,335,335,]),'jump_statement':([275,329,344,408,419,425,426,435,443,448,449,451,],[336,336,336,336,336,336,336,336,336,336,336,336,]),'declaration_statement':([275,329,344,379,408,419,425,426,435,443,448,449,451,],[337,337,337,401,337,337,337,337,337,337,337,337,337,]),'try_block':([275,329,344,408,419,425,426,435,443,448,449,451,],[338,338,338,338,338,338,338,338,338,338,338,338,]),'for_init_statement':([379,],[399,]),'labeled_statement_list':([422,],[430,]),'labeled_statement':([422,430,],[431,441,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('control_line -> control_line control_line_stmt','control_line',2,'p_control_line','parser.py',127),
  ('control_line -> control_line_stmt','control_line',1,'p_control_line','parser.py',128),
  ('include_control -> HASHTAG INCLUDE','include_control',2,'p_include_control','parser.py',134),
  ('control_line_stmt -> include_control LTCOMP STRING_L GTCOMP','control_line_stmt',4,'p_control_line_stmt','parser.py',140),
  ('control_line_stmt -> include_control STRING_L','control_line_stmt',2,'p_control_line_stmt','parser.py',141),
  ('program -> control_line translation_unit','program',2,'p_program','parser.py',147),
  ('program -> translation_unit','program',1,'p_program','parser.py',148),
  ('translation_unit -> declaration_seq','translation_unit',1,'p_translation_unit','parser.py',154),
  ('declaration_seq -> declaration_seq declaration','declaration_seq',2,'p_declaration_seq','parser.py',159),
  ('declaration_seq -> declaration','declaration_seq',1,'p_declaration_seq','parser.py',160),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',170),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',175),
  ('conditional_expression -> logical_OR_expression','conditional_expression',1,'p_conditional_expression','parser.py',181),
  ('conditional_expression -> logical_OR_expression QUESMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',182),
  ('logical_OR_expression -> logical_AND_expression','logical_OR_expression',1,'p_logical_OR_expression','parser.py',188),
  ('logical_OR_expression -> logical_OR_expression OROP logical_AND_expression','logical_OR_expression',3,'p_logical_OR_expression','parser.py',189),
  ('logical_AND_expression -> inclusive_OR_expression','logical_AND_expression',1,'p_logical_AND_expression','parser.py',195),
  ('logical_AND_expression -> logical_AND_expression ANDOP inclusive_OR_expression','logical_AND_expression',3,'p_logical_AND_expression','parser.py',196),
  ('inclusive_OR_expression -> exclusive_OR_expression','inclusive_OR_expression',1,'p_inclusive_OR_expression','parser.py',202),
  ('inclusive_OR_expression -> inclusive_OR_expression OROP exclusive_OR_expression','inclusive_OR_expression',3,'p_inclusive_OR_expression','parser.py',203),
  ('exclusive_OR_expression -> AND_expression','exclusive_OR_expression',1,'p_exclusive_OR_expression','parser.py',209),
  ('exclusive_OR_expression -> exclusive_OR_expression XOROP AND_expression','exclusive_OR_expression',3,'p_exclusive_OR_expression','parser.py',210),
  ('AND_expression -> equality_expression','AND_expression',1,'p_AND_expression','parser.py',216),
  ('AND_expression -> AND_expression BANDOP equality_expression','AND_expression',3,'p_AND_expression','parser.py',217),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',223),
  ('equality_expression -> equality_expression EQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',224),
  ('equality_expression -> equality_expression NEQCOMP relational_expression','equality_expression',3,'p_equality_expression','parser.py',225),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',231),
  ('relational_expression -> relational_expression LTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',232),
  ('relational_expression -> relational_expression GTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',233),
  ('relational_expression -> relational_expression LTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',234),
  ('relational_expression -> relational_expression GTECOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',235),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',241),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',242),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',243),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',249),
  ('additive_expression -> additive_expression PLUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',250),
  ('additive_expression -> additive_expression MINUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',251),
  ('multiplicative_expression -> pm_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',257),
  ('multiplicative_expression -> multiplicative_expression MULTOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',258),
  ('multiplicative_expression -> multiplicative_expression DIVOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',259),
  ('multiplicative_expression -> multiplicative_expression MODOP pm_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',260),
  ('pm_expression -> cast_expression','pm_expression',1,'p_pm_expression','parser.py',266),
  ('pm_expression -> pm_expression DOTSTAR cast_expression','pm_expression',3,'p_pm_expression','parser.py',267),
  ('pm_expression -> pm_expression ARROWSTAR cast_expression','pm_expression',3,'p_pm_expression','parser.py',268),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',274),
  ('expression -> throw_expression','expression',1,'p_expression','parser.py',275),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',276),
  ('throw_expression -> THROW expression','throw_expression',2,'p_throw_expression','parser.py',282),
  ('throw_expression -> THROW','throw_expression',1,'p_throw_expression','parser.py',283),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',289),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',290),
  ('assignment_operator -> EQUAL','assignment_operator',1,'p_assignment_operator','parser.py',296),
  ('assignment_operator -> MULTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',297),
  ('assignment_operator -> DIVEQOP','assignment_operator',1,'p_assignment_operator','parser.py',298),
  ('assignment_operator -> MODEQOP','assignment_operator',1,'p_assignment_operator','parser.py',299),
  ('assignment_operator -> PLUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',300),
  ('assignment_operator -> MINUSEQOP','assignment_operator',1,'p_assignment_operator','parser.py',301),
  ('assignment_operator -> LSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',302),
  ('assignment_operator -> RSHIFTEQOP','assignment_operator',1,'p_assignment_operator','parser.py',303),
  ('assignment_operator -> BANDEQOP','assignment_operator',1,'p_assignment_operator','parser.py',304),
  ('assignment_operator -> BOREQOP','assignment_operator',1,'p_assignment_operator','parser.py',305),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',311),
  ('unary_expression -> DPLUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',312),
  ('unary_expression -> DMINUSOP unary_expression','unary_expression',2,'p_unary_expression','parser.py',313),
  ('unary_expression -> unary1_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',314),
  ('unary_expression -> unary2_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',315),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',316),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',317),
  ('unary_expression -> allocation_expression','unary_expression',1,'p_unary_expression','parser.py',318),
  ('unary_expression -> deallocation_expression','unary_expression',1,'p_unary_expression','parser.py',319),
  ('deallocation_expression -> DELETE cast_expression','deallocation_expression',2,'p_deallocation_expression','parser.py',325),
  ('allocation_expression -> NEW new_type_name new_initializer','allocation_expression',3,'p_allocation_expression','parser.py',332),
  ('allocation_expression -> NEW new_type_name','allocation_expression',2,'p_allocation_expression','parser.py',333),
  ('allocation_expression -> NEW LPAREN type_name RPAREN new_initializer','allocation_expression',5,'p_allocation_expression','parser.py',334),
  ('allocation_expression -> NEW LPAREN type_name RPAREN','allocation_expression',4,'p_allocation_expression','parser.py',335),
  ('new_type_name -> type_specifier_ new_declarator','new_type_name',2,'p_new_type_name','parser.py',341),
  ('new_type_name -> type_specifier_','new_type_name',1,'p_new_type_name','parser.py',342),
  ('new_declarator -> new_declarator MULTOP','new_declarator',2,'p_new_declarator','parser.py',348),
  ('new_declarator -> MULTOP','new_declarator',1,'p_new_declarator','parser.py',349),
  ('new_declarator -> new_declarator LSPAREN expression RSPAREN','new_declarator',4,'p_new_declarator','parser.py',350),
  ('new_declarator -> LSPAREN expression RSPAREN','new_declarator',3,'p_new_declarator','parser.py',351),
  ('new_initializer -> LPAREN initializer_list RPAREN','new_initializer',3,'p_new_initializer','parser.py',357),
  ('new_initializer -> LPAREN RPAREN','new_initializer',2,'p_new_initializer','parser.py',358),
  ('unary1_operator -> PLUSOP','unary1_operator',1,'p_unary1_operator','parser.py',364),
  ('unary1_operator -> MINUSOP','unary1_operator',1,'p_unary1_operator','parser.py',365),
  ('unary1_operator -> NOTSYM','unary1_operator',1,'p_unary1_operator','parser.py',366),
  ('unary1_operator -> BNOP','unary1_operator',1,'p_unary1_operator','parser.py',367),
  ('unary2_operator -> MULTOP','unary2_operator',1,'p_unary2_operator','parser.py',374),
  ('unary2_operator -> BANDOP','unary2_operator',1,'p_unary2_operator','parser.py',375),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',382),
  ('postfix_expression -> postfix_expression LSPAREN expression RSPAREN','postfix_expression',4,'p_postfix_expression','parser.py',383),
  ('postfix_expression -> postfix_expression LPAREN expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',384),
  ('postfix_expression -> postfix_expression template_class_name LPAREN expression_list RPAREN','postfix_expression',5,'p_postfix_expression','parser.py',385),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',386),
  ('postfix_expression -> postfix_expression DOT name','postfix_expression',3,'p_postfix_expression','parser.py',387),
  ('postfix_expression -> postfix_expression ARROW name','postfix_expression',3,'p_postfix_expression','parser.py',388),
  ('postfix_expression -> postfix_expression DPLUSOP','postfix_expression',2,'p_postfix_expression','parser.py',389),
  ('postfix_expression -> postfix_expression DMINUSOP','postfix_expression',2,'p_postfix_expression','parser.py',390),
  ('primary_expression -> name','primary_expression',1,'p_primary_expression0','parser.py',401),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression1','parser.py',408),
  ('primary_expression -> THIS','primary_expression',1,'p_primary_expression2','parser.py',416),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression3','parser.py',425),
  ('literal -> STRING_L','literal',1,'p_literal_string','parser.py',435),
  ('literal -> NUMBER','literal',1,'p_literal_number','parser.py',441),
  ('literal -> SCHAR','literal',1,'p_literal_char','parser.py',447),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',453),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',454),
  ('abstract_declarator -> unary2_operator','abstract_declarator',1,'p_abstract_declarator','parser.py',463),
  ('abstract_declarator -> unary2_operator abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',464),
  ('abstract_declarator -> LSPAREN constant_expression RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',465),
  ('abstract_declarator -> abstract_declarator LSPAREN constant_expression RSPAREN','abstract_declarator',4,'p_abstract_declarator','parser.py',466),
  ('abstract_declarator -> LSPAREN RSPAREN','abstract_declarator',2,'p_abstract_declarator','parser.py',467),
  ('abstract_declarator -> abstract_declarator LSPAREN RSPAREN','abstract_declarator',3,'p_abstract_declarator','parser.py',468),
  ('declarator -> name','declarator',1,'p_declarator0','parser.py',503),
  ('declarator -> unary2_operator declarator','declarator',2,'p_declarator1','parser.py',510),
  ('declarator -> declarator LSPAREN constant_expression RSPAREN','declarator',4,'p_declarator3','parser.py',525),
  ('declarator -> declarator LSPAREN RSPAREN','declarator',3,'p_declarator4','parser.py',536),
  ('arg_list -> argument_declaration_list','arg_list',1,'p_arg_list','parser.py',546),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',547),
  ('argument_declaration_list -> argument_declaration','argument_declaration_list',1,'p_argument_declaration_list','parser.py',608),
  ('argument_declaration_list -> argument_declaration COMMA argument_declaration_list','argument_declaration_list',3,'p_argument_declaration_list','parser.py',609),
  ('argument_declaration -> type_specifier_ declarator','argument_declaration',2,'p_argument_declaration_1','parser.py',619),
  ('argument_declaration -> type_specifier_ declarator EQUAL expression','argument_declaration',4,'p_argument_declaration_2','parser.py',631),
  ('argument_declaration -> type_specifier_ abstract_declarator','argument_declaration',2,'p_argument_declaration_3','parser.py',641),
  ('argument_declaration -> type_specifier_','argument_declaration',1,'p_argument_declaration_4','parser.py',648),
  ('name -> IDENTIFIER','name',1,'p_name','parser.py',655),
  ('name -> DOUBLEBNOP IDENTIFIER','name',2,'p_name','parser.py',656),
  ('operator_name -> NEW','operator_name',1,'p_operator_name','parser.py',665),
  ('operator_name -> DELETE','operator_name',1,'p_operator_name','parser.py',666),
  ('operator_name -> PLUSOP','operator_name',1,'p_operator_name','parser.py',667),
  ('operator_name -> MINUSOP','operator_name',1,'p_operator_name','parser.py',668),
  ('operator_name -> MULTOP','operator_name',1,'p_operator_name','parser.py',669),
  ('operator_name -> DIVOP','operator_name',1,'p_operator_name','parser.py',670),
  ('operator_name -> MODOP','operator_name',1,'p_operator_name','parser.py',671),
  ('operator_name -> XOROP','operator_name',1,'p_operator_name','parser.py',672),
  ('operator_name -> BANDOP','operator_name',1,'p_operator_name','parser.py',673),
  ('operator_name -> BNOP','operator_name',1,'p_operator_name','parser.py',674),
  ('operator_name -> NOTSYM','operator_name',1,'p_operator_name','parser.py',675),
  ('operator_name -> EQUAL','operator_name',1,'p_operator_name','parser.py',676),
  ('operator_name -> LTCOMP','operator_name',1,'p_operator_name','parser.py',677),
  ('operator_name -> GTCOMP','operator_name',1,'p_operator_name','parser.py',678),
  ('operator_name -> PLUSEQOP','operator_name',1,'p_operator_name','parser.py',679),
  ('operator_name -> MINUSEQOP','operator_name',1,'p_operator_name','parser.py',680),
  ('operator_name -> MULTEQOP','operator_name',1,'p_operator_name','parser.py',681),
  ('operator_name -> DIVEQOP','operator_name',1,'p_operator_name','parser.py',682),
  ('operator_name -> MODEQOP','operator_name',1,'p_operator_name','parser.py',683),
  ('operator_name -> XOREQOP','operator_name',1,'p_operator_name','parser.py',684),
  ('operator_name -> BANDEQOP','operator_name',1,'p_operator_name','parser.py',685),
  ('operator_name -> LSHIFT','operator_name',1,'p_operator_name','parser.py',686),
  ('operator_name -> RSHIFT','operator_name',1,'p_operator_name','parser.py',687),
  ('operator_name -> RSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',688),
  ('operator_name -> LSHIFTEQOP','operator_name',1,'p_operator_name','parser.py',689),
  ('operator_name -> EQCOMP','operator_name',1,'p_operator_name','parser.py',690),
  ('operator_name -> NEQCOMP','operator_name',1,'p_operator_name','parser.py',691),
  ('operator_name -> LTECOMP','operator_name',1,'p_operator_name','parser.py',692),
  ('operator_name -> GTECOMP','operator_name',1,'p_operator_name','parser.py',693),
  ('operator_name -> ANDOP','operator_name',1,'p_operator_name','parser.py',694),
  ('operator_name -> OROP','operator_name',1,'p_operator_name','parser.py',695),
  ('operator_name -> DPLUSOP','operator_name',1,'p_operator_name','parser.py',696),
  ('operator_name -> DMINUSOP','operator_name',1,'p_operator_name','parser.py',697),
  ('operator_name -> COMMA','operator_name',1,'p_operator_name','parser.py',698),
  ('operator_name -> ARROWSTAR','operator_name',1,'p_operator_name','parser.py',699),
  ('operator_name -> ARROW','operator_name',1,'p_operator_name','parser.py',700),
  ('template_class_name -> LTEMPLATE template_arg_list RTEMPLATE','template_class_name',3,'p_template_class_name','parser.py',709),
  ('template_arg_list -> type_name','template_arg_list',1,'p_template_arg_list','parser.py',715),
  ('template_arg_list -> template_arg_list COMMA type_name','template_arg_list',3,'p_template_arg_list','parser.py',716),
  ('type_name -> type_specifier_ abstract_declarator','type_name',2,'p_type_name','parser.py',728),
  ('type_name -> type_specifier_','type_name',1,'p_type_name','parser.py',729),
  ('type_specifier_ -> CONST type_specifier','type_specifier_',2,'p_type_specifier_','parser.py',740),
  ('type_specifier_ -> type_specifier','type_specifier_',1,'p_type_specifier_','parser.py',741),
  ('typedef_declarator -> TYPEDEF type_specifier_ abstract_declarator IDENTIFIER SEMICOLON','typedef_declarator',5,'p_typedef_declarator','parser.py',753),
  ('typedef_declarator -> TYPEDEF type_specifier_ IDENTIFIER SEMICOLON','typedef_declarator',4,'p_typedef_declarator','parser.py',754),
  ('type_specifier -> simple_type_name','type_specifier',1,'p_type_specifier','parser.py',760),
  ('type_specifier -> complex_type_specifier','type_specifier',1,'p_type_specifier','parser.py',761),
  ('simple_type_name -> CHAR','simple_type_name',1,'p_simple_type_name','parser.py',769),
  ('simple_type_name -> SHORT','simple_type_name',1,'p_simple_type_name','parser.py',770),
  ('simple_type_name -> INT','simple_type_name',1,'p_simple_type_name','parser.py',771),
  ('simple_type_name -> LONG','simple_type_name',1,'p_simple_type_name','parser.py',772),
  ('simple_type_name -> SIGNED','simple_type_name',1,'p_simple_type_name','parser.py',773),
  ('simple_type_name -> UNSIGNED','simple_type_name',1,'p_simple_type_name','parser.py',774),
  ('simple_type_name -> FLOAT','simple_type_name',1,'p_simple_type_name','parser.py',775),
  ('simple_type_name -> DOUBLE','simple_type_name',1,'p_simple_type_name','parser.py',776),
  ('simple_type_name -> VOID','simple_type_name',1,'p_simple_type_name','parser.py',777),
  ('simple_type_name -> STRING','simple_type_name',1,'p_simple_type_name','parser.py',778),
  ('simple_type_name -> AUTO','simple_type_name',1,'p_simple_type_name','parser.py',779),
  ('complex_type_specifier -> class_key IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',789),
  ('complex_type_specifier -> class_key IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',790),
  ('complex_type_specifier -> TYPE IDENTIFIER','complex_type_specifier',2,'p_complex_type_specifier','parser.py',791),
  ('complex_type_specifier -> TYPE IDENTIFIER template_class_name','complex_type_specifier',3,'p_complex_type_specifier','parser.py',792),
  ('pure_specifier -> EQUAL NUMBER','pure_specifier',2,'p_pure_specifier','parser.py',804),
  ('class_head -> class_key IDENTIFIER base_spec','class_head',3,'p_class_head','parser.py',809),
  ('class_head -> class_key IDENTIFIER','class_head',2,'p_class_head','parser.py',810),
  ('base_spec -> COLON base_list','base_spec',2,'p_base_spec','parser.py',818),
  ('base_list -> base_specifier','base_list',1,'p_base_list','parser.py',823),
  ('base_list -> base_list COMMA base_specifier','base_list',3,'p_base_list','parser.py',824),
  ('base_specifier -> class_key IDENTIFIER','base_specifier',2,'p_base_specifier','parser.py',831),
  ('base_specifier -> class_key IDENTIFIER template_class_name','base_specifier',3,'p_base_specifier','parser.py',832),
  ('base_specifier -> IDENTIFIER','base_specifier',1,'p_base_specifier','parser.py',833),
  ('base_specifier -> IDENTIFIER template_class_name','base_specifier',2,'p_base_specifier','parser.py',834),
  ('base_specifier -> access_specifier class_key IDENTIFIER','base_specifier',3,'p_base_specifier','parser.py',835),
  ('base_specifier -> access_specifier class_key IDENTIFIER template_class_name','base_specifier',4,'p_base_specifier','parser.py',836),
  ('class_key -> CLASS','class_key',1,'p_class_key','parser.py',845),
  ('class_key -> STRUCT','class_key',1,'p_class_key','parser.py',846),
  ('class_define_specifier -> class_head LCPAREN member_list RCPAREN','class_define_specifier',4,'p_class_define_specifier','parser.py',853),
  ('class_define_specifier -> class_head LCPAREN RCPAREN','class_define_specifier',3,'p_class_define_specifier','parser.py',854),
  ('member_list -> member_access_list','member_list',1,'p_member_list','parser.py',861),
  ('member_list -> access_list','member_list',1,'p_member_list','parser.py',862),
  ('member_list -> member_list access_list','member_list',2,'p_member_list','parser.py',863),
  ('access_specifier -> PRIVATE','access_specifier',1,'p_access_specifier','parser.py',869),
  ('access_specifier -> PROTECTED','access_specifier',1,'p_access_specifier','parser.py',870),
  ('access_specifier -> PUBLIC','access_specifier',1,'p_access_specifier','parser.py',871),
  ('access_list -> access_specifier COLON member_access_list','access_list',3,'p_access_list','parser.py',877),
  ('access_list -> access_specifier COLON','access_list',2,'p_access_list','parser.py',878),
  ('member_access_list -> member_declaration member_access_list','member_access_list',2,'p_member_access_list','parser.py',883),
  ('member_access_list -> member_declaration','member_access_list',1,'p_member_access_list','parser.py',884),
  ('member_declaration -> type_specifier_ member_declarator_list SEMICOLON','member_declaration',3,'p_member_declaration','parser.py',889),
  ('member_declaration -> member_declarator_list SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',890),
  ('member_declaration -> type_specifier_ SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',891),
  ('member_declaration -> SEMICOLON','member_declaration',1,'p_member_declaration','parser.py',892),
  ('member_declaration -> function_definition','member_declaration',1,'p_member_declaration','parser.py',893),
  ('member_declaration -> class_define_specifier SEMICOLON','member_declaration',2,'p_member_declaration','parser.py',894),
  ('member_declarator_list -> member_declarator','member_declarator_list',1,'p_member_declarator_list','parser.py',901),
  ('member_declarator_list -> member_declarator_list COMMA member_declarator','member_declarator_list',3,'p_member_declarator_list','parser.py',902),
  ('member_declarator -> declarator pure_specifier','member_declarator',2,'p_member_declarator','parser.py',908),
  ('member_declarator -> declarator','member_declarator',1,'p_member_declarator','parser.py',909),
  ('function_definition -> type_specifier_ declarator func_push_scope arg_list RPAREN fct_body pop_scope','function_definition',7,'p_function_definition','parser.py',916),
  ('function_decl -> type_specifier_ declarator func_push_scope arg_list RPAREN SEMICOLON pop_scope','function_decl',7,'p_function_decl','parser.py',929),
  ('func_push_scope -> LPAREN','func_push_scope',1,'p_func_push_scope','parser.py',934),
  ('fct_body -> compound_statement','fct_body',1,'p_fct_body','parser.py',939),
  ('compound_statement -> LCPAREN statement_list RCPAREN','compound_statement',3,'p_compound_statement','parser.py',944),
  ('compound_statement -> LCPAREN RCPAREN','compound_statement',2,'p_compound_statement','parser.py',945),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',951),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',952),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',958),
  ('statement -> push_scope compound_statement pop_scope','statement',3,'p_statement','parser.py',959),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',960),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',961),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',962),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',963),
  ('statement -> try_block','statement',1,'p_statement','parser.py',964),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',970),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',971),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',972),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',973),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',974),
  ('selection_statement -> IF LPAREN expression RPAREN push_scope compound_statement pop_scope','selection_statement',7,'p_selection_statement','parser.py',981),
  ('selection_statement -> IF LPAREN expression RPAREN push_scope compound_statement pop_scope ELSE push_scope compound_statement pop_scope','selection_statement',11,'p_selection_statement','parser.py',982),
  ('selection_statement -> SWITCH LPAREN expression RPAREN push_scope LCPAREN labeled_statement_list RCPAREN pop_scope','selection_statement',9,'p_selection_statement','parser.py',983),
  ('try_block -> TRY push_scope compound_statement pop_scope CATCH push_scope compound_statement pop_scope','try_block',8,'p_try_block','parser.py',990),
  ('labeled_statement_list -> labeled_statement','labeled_statement_list',1,'p_labeled_statement_list','parser.py',996),
  ('labeled_statement_list -> labeled_statement_list labeled_statement','labeled_statement_list',2,'p_labeled_statement_list','parser.py',997),
  ('labeled_statement -> CASE constant_expression COLON statement_list','labeled_statement',4,'p_labeled_statement','parser.py',1003),
  ('labeled_statement -> DEFAULT COLON statement_list','labeled_statement',3,'p_labeled_statement','parser.py',1004),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','parser.py',1010),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',1011),
  ('iteration_statement -> FOR LPAREN for_init_statement expression SEMICOLON expression RPAREN statement','iteration_statement',8,'p_iteration_statement','parser.py',1012),
  ('iteration_statement -> FOR LPAREN for_init_statement SEMICOLON expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',1013),
  ('iteration_statement -> FOR LPAREN for_init_statement expression SEMICOLON RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',1014),
  ('iteration_statement -> FOR LPAREN for_init_statement SEMICOLON RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',1015),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_for_init_statement','parser.py',1021),
  ('for_init_statement -> declaration_statement','for_init_statement',1,'p_for_init_statement','parser.py',1022),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',1028),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',1029),
  ('declaration_statement -> declaration','declaration_statement',1,'p_declaration_statement','parser.py',1035),
  ('declaration -> type_specifier_ declarator_list SEMICOLON','declaration',3,'p_declaration0','parser.py',1040),
  ('declaration -> asm_declaration','declaration',1,'p_declaration1','parser.py',1047),
  ('declaration -> function_definition','declaration',1,'p_declaration2','parser.py',1054),
  ('declaration -> function_decl','declaration',1,'p_declaration2','parser.py',1055),
  ('declaration -> class_define_specifier SEMICOLON','declaration',2,'p_declaration3','parser.py',1062),
  ('declaration -> template_declaration','declaration',1,'p_declaration4','parser.py',1068),
  ('declaration -> typedef_declarator','declaration',1,'p_declaration5','parser.py',1074),
  ('template_declaration -> TEMPLATE LTEMPLATE template_argument_list RTEMPLATE declaration','template_declaration',5,'p_template_declaration','parser.py',1079),
  ('template_argument_list -> argument_declaration','template_argument_list',1,'p_template_argument_list','parser.py',1084),
  ('template_argument_list -> template_argument_list COMMA argument_declaration','template_argument_list',3,'p_template_argument_list','parser.py',1085),
  ('declarator_list -> init_declarator','declarator_list',1,'p_declarator_list','parser.py',1091),
  ('declarator_list -> declarator_list COMMA init_declarator','declarator_list',3,'p_declarator_list','parser.py',1092),
  ('init_declarator -> declarator initializer','init_declarator',2,'p_init_declarator','parser.py',1098),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',1099),
  ('initializer -> EQUAL assignment_expression','initializer',2,'p_initializer','parser.py',1105),
  ('initializer -> EQUAL LCPAREN initializer_list RCPAREN','initializer',4,'p_initializer','parser.py',1106),
  ('initializer -> EQUAL LCPAREN initializer_list COMMA RCPAREN','initializer',5,'p_initializer','parser.py',1107),
  ('initializer -> LPAREN expression_list RPAREN','initializer',3,'p_initializer','parser.py',1108),
  ('initializer_list -> assignment_expression','initializer_list',1,'p_initializer_list','parser.py',1114),
  ('initializer_list -> initializer_list COMMA assignment_expression','initializer_list',3,'p_initializer_list','parser.py',1115),
  ('initializer_list -> LCPAREN initializer_list RCPAREN','initializer_list',3,'p_initializer_list','parser.py',1116),
  ('initializer_list -> LCPAREN initializer_list COMMA RCPAREN','initializer_list',4,'p_initializer_list','parser.py',1117),
  ('asm_declaration -> ASM LPAREN STRING_L RPAREN SEMICOLON','asm_declaration',5,'p_asm_declaration','parser.py',1123),
  ('expression_list -> assignment_expression','expression_list',1,'p_expression_list','parser.py',1128),
  ('expression_list -> expression_list COMMA assignment_expression','expression_list',3,'p_expression_list','parser.py',1129),
  ('push_scope -> <empty>','push_scope',0,'p_push_scope','parser.py',1135),
  ('pop_scope -> <empty>','pop_scope',0,'p_pop_scope','parser.py',1139),
]
