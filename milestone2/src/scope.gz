digraph ethane{ rankdir=LR {graph [ordering="out"];node [fontsize=20 width=0.25 shape=box ]; 
1[label="{}"]

0[label="{   'Num': {'func_sig': [('Num|', 'void|')], 'type': 'function_upper'},
    'Num|': {   'body_scope': 1,
                'declaration': True,
                'input': ('', []),
                'name': 'Num',
                'return_sig': 'void|',
                'string': ''},
    'main': {   'func_sig': [('main|int|char|pp', 'int|')],
                'type': 'function_upper'},
    'main|int|char|pp': {   'body_scope': 3,
                            'declaration': True,
                            'input': (   'int|char|pp',
                                         [   {   'init': None,
                                                 'name': 'x',
                                                 'string': 'int|',
                                                 'type': {   'declarator': {   'meta': [   ],
                                                                               'name': 'x',
                                                                               'type': ''},
                                                             'specifier': {   'class': 'simple',
                                                                              'const': 0,
                                                                              'template': 0,
                                                                              'template_list': None,
                                                                              'type': 'int'}}},
                                             {   'init': None,
                                                 'name': 'y',
                                                 'string': 'char|pp',
                                                 'type': {   'declarator': {   'meta': [   '*',
                                                                                           '*'],
                                                                               'name': 'y',
                                                                               'type': 'pp'},
                                                             'specifier': {   'class': 'simple',
                                                                              'const': 0,
                                                                              'template': 0,
                                                                              'template_list': None,
                                                                              'type': 'char'}}}]),
                            'name': 'main',
                            'return_sig': 'int|',
                            'string': 'int|char|pp'},
    '~~Num': {'func_sig': [('~~Num|', 'void|')], 'type': 'function_upper'},
    '~~Num|': {   'body_scope': 2,
                  'declaration': True,
                  'input': ('', []),
                  'name': '~~Num',
                  'return_sig': 'void|',
                  'string': ''}}"]

0 -> 1

2[label="{}"]

0 -> 2

3[label="{   'N': {'init': None, 'name': 'N', 'string': 'Num|', 'type': 'Num|'},
    'x': {   'init': None,
             'name': 'x',
             'string': 'int|',
             'type': {   'declarator': {'meta': [], 'name': 'x', 'type': ''},
                         'specifier': {   'class': 'simple',
                                          'const': 0,
                                          'template': 0,
                                          'template_list': None,
                                          'type': 'int'}}},
    'y': {   'init': None,
             'name': 'y',
             'string': 'char|pp',
             'type': {   'declarator': {   'meta': ['*', '*'],
                                           'name': 'y',
                                           'type': 'pp'},
                         'specifier': {   'class': 'simple',
                                          'const': 0,
                                          'template': 0,
                                          'template_list': None,
                                          'type': 'char'}}}}"]

0 -> 3

}
}
