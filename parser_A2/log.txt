PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(INT,'int',2,1)
Action : Shift and goto state 45

State  : 45
Stack  : INT . LexToken(IDENTIFIER,'main',2,5)
Action : Reduce rule [simple_type_name -> INT] with ['int'] and goto state 26
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 26
Stack  : simple_type_name . LexToken(IDENTIFIER,'main',2,5)
Action : Reduce rule [type_specifier -> simple_type_name] with [None] and goto state 19
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 19
Stack  : type_specifier . LexToken(IDENTIFIER,'main',2,5)
Action : Reduce rule [decl_specifier -> type_specifier] with [None] and goto state 11
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 11
Stack  : decl_specifier . LexToken(IDENTIFIER,'main',2,5)
Action : Reduce rule [decl_specifiers -> decl_specifier] with [None] and goto state 5
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 5
Stack  : decl_specifiers . LexToken(IDENTIFIER,'main',2,5)
Action : Shift and goto state 54

State  : 54
Stack  : decl_specifiers IDENTIFIER . LexToken(LPAREN,'(',2,9)
Action : Reduce rule [name -> IDENTIFIER] with ['main'] and goto state 34
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 34
Stack  : decl_specifiers name . LexToken(LPAREN,'(',2,9)
Action : Reduce rule [dname -> name] with [None] and goto state 22
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 22
Stack  : decl_specifiers dname . LexToken(LPAREN,'(',2,9)
Action : Reduce rule [declarator -> dname] with [None] and goto state 68
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 68
Stack  : decl_specifiers declarator . LexToken(LPAREN,'(',2,9)
Action : Shift and goto state 80

State  : 80
Stack  : decl_specifiers declarator LPAREN . LexToken(RPAREN,')',2,10)
Action : Reduce rule [argument_declaration_list -> <empty>] with [] and goto state 167
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 167
Stack  : decl_specifiers declarator LPAREN argument_declaration_list . LexToken(RPAREN,')',2,10)
Action : Shift and goto state 314

State  : 314
Stack  : decl_specifiers declarator LPAREN argument_declaration_list RPAREN . LexToken(LCPAREN,'{',3,12)
Action : Reduce rule [declarator -> declarator LPAREN argument_declaration_list RPAREN] with [None,'(',None,')'] and goto state 68
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 68
Stack  : decl_specifiers declarator . LexToken(LCPAREN,'{',3,12)
Action : Shift and goto state 85

State  : 85
Stack  : decl_specifiers declarator LCPAREN . LexToken(IDENTIFIER,'Calculator',4,15)
Action : Shift and goto state 236

State  : 236
Stack  : decl_specifiers declarator LCPAREN IDENTIFIER . LexToken(HASHTAG,'#',4,25)
ERROR: Error  : decl_specifiers declarator LCPAREN IDENTIFIER . LexToken(HASHTAG,'#',4,25)

State  : 236
Stack  : decl_specifiers declarator LCPAREN IDENTIFIER . error
ERROR: Error  : decl_specifiers declarator LCPAREN IDENTIFIER . error

State  : 85
Stack  : decl_specifiers declarator LCPAREN . error
ERROR: Error  : decl_specifiers declarator LCPAREN . error

State  : 68
Stack  : decl_specifiers declarator . error
ERROR: Error  : decl_specifiers declarator . error

State  : 5
Stack  : decl_specifiers . error
ERROR: Error  : decl_specifiers . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(INT,'int',4,26)
Action : Shift and goto state 45

State  : 45
Stack  : INT . LexToken(HASHTAG,'#',4,29)
ERROR: Error  : INT . LexToken(HASHTAG,'#',4,29)

State  : 45
Stack  : INT . error
ERROR: Error  : INT . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(IDENTIFIER,'intCalc',4,31)
Action : Shift and goto state 54

State  : 54
Stack  : IDENTIFIER . LexToken(LPAREN,'(',4,38)
Action : Reduce rule [name -> IDENTIFIER] with ['intCalc'] and goto state 34
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 34
Stack  : name . LexToken(LPAREN,'(',4,38)
Action : Reduce rule [dname -> name] with [None] and goto state 22
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 22
Stack  : dname . LexToken(LPAREN,'(',4,38)
Action : Reduce rule [declarator -> dname] with [None] and goto state 15
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 15
Stack  : declarator . LexToken(LPAREN,'(',4,38)
Action : Shift and goto state 80

State  : 80
Stack  : declarator LPAREN . LexToken(NUMBER,2.0,4,39)
Action : Shift and goto state 203

State  : 203
Stack  : declarator LPAREN NUMBER . LexToken(COMMA,',',4,40)
Action : Reduce rule [literal -> NUMBER] with [2.0] and goto state 198
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 198
Stack  : declarator LPAREN literal . LexToken(COMMA,',',4,40)
Action : Reduce rule [primary_expression -> literal] with [None] and goto state 185
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 185
Stack  : declarator LPAREN primary_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [postfix_expression -> primary_expression] with [None] and goto state 176
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 176
Stack  : declarator LPAREN postfix_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [unary_expression -> postfix_expression] with [None] and goto state 173
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 173
Stack  : declarator LPAREN unary_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [cast_expression -> unary_expression] with [None] and goto state 180
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 180
Stack  : declarator LPAREN cast_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [pm_expression -> cast_expression] with [None] and goto state 212
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 212
Stack  : declarator LPAREN pm_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [multiplicative_expression -> pm_expression] with [None] and goto state 211
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 211
Stack  : declarator LPAREN multiplicative_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [additive_expression -> multiplicative_expression] with [None] and goto state 210
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 210
Stack  : declarator LPAREN additive_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [shift_expression -> additive_expression] with [None] and goto state 209
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 209
Stack  : declarator LPAREN shift_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [relational_expression -> shift_expression] with [None] and goto state 208
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 208
Stack  : declarator LPAREN relational_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [equality_expression -> relational_expression] with [None] and goto state 207
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 207
Stack  : declarator LPAREN equality_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [AND_expression -> equality_expression] with [None] and goto state 206
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 206
Stack  : declarator LPAREN AND_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [exclusive_OR_expression -> AND_expression] with [None] and goto state 202
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 202
Stack  : declarator LPAREN exclusive_OR_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [inclusive_OR_expression -> exclusive_OR_expression] with [None] and goto state 197
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 197
Stack  : declarator LPAREN inclusive_OR_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [logical_AND_expression -> inclusive_OR_expression] with [None] and goto state 184
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 184
Stack  : declarator LPAREN logical_AND_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [logical_OR_expression -> logical_AND_expression] with [None] and goto state 175
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 175
Stack  : declarator LPAREN logical_OR_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [conditional_expression -> logical_OR_expression] with [None] and goto state 172
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 172
Stack  : declarator LPAREN conditional_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [assignment_expression -> conditional_expression] with [None] and goto state 170
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 170
Stack  : declarator LPAREN assignment_expression . LexToken(COMMA,',',4,40)
Action : Reduce rule [expression_list -> assignment_expression] with [None] and goto state 168
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 168
Stack  : declarator LPAREN expression_list . LexToken(COMMA,',',4,40)
Action : Shift and goto state 316

State  : 316
Stack  : declarator LPAREN expression_list COMMA . LexToken(NUMBER,1.0,4,42)
Action : Shift and goto state 203

State  : 203
Stack  : declarator LPAREN expression_list COMMA NUMBER . LexToken(RPAREN,')',4,43)
Action : Reduce rule [literal -> NUMBER] with [1.0] and goto state 198
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 198
Stack  : declarator LPAREN expression_list COMMA literal . LexToken(RPAREN,')',4,43)
Action : Reduce rule [primary_expression -> literal] with [None] and goto state 185
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 185
Stack  : declarator LPAREN expression_list COMMA primary_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [postfix_expression -> primary_expression] with [None] and goto state 176
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 176
Stack  : declarator LPAREN expression_list COMMA postfix_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [unary_expression -> postfix_expression] with [None] and goto state 173
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 173
Stack  : declarator LPAREN expression_list COMMA unary_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [cast_expression -> unary_expression] with [None] and goto state 180
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 180
Stack  : declarator LPAREN expression_list COMMA cast_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [pm_expression -> cast_expression] with [None] and goto state 212
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 212
Stack  : declarator LPAREN expression_list COMMA pm_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [multiplicative_expression -> pm_expression] with [None] and goto state 211
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 211
Stack  : declarator LPAREN expression_list COMMA multiplicative_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [additive_expression -> multiplicative_expression] with [None] and goto state 210
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 210
Stack  : declarator LPAREN expression_list COMMA additive_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [shift_expression -> additive_expression] with [None] and goto state 209
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 209
Stack  : declarator LPAREN expression_list COMMA shift_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [relational_expression -> shift_expression] with [None] and goto state 208
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 208
Stack  : declarator LPAREN expression_list COMMA relational_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [equality_expression -> relational_expression] with [None] and goto state 207
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 207
Stack  : declarator LPAREN expression_list COMMA equality_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [AND_expression -> equality_expression] with [None] and goto state 206
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 206
Stack  : declarator LPAREN expression_list COMMA AND_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [exclusive_OR_expression -> AND_expression] with [None] and goto state 202
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 202
Stack  : declarator LPAREN expression_list COMMA exclusive_OR_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [inclusive_OR_expression -> exclusive_OR_expression] with [None] and goto state 197
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 197
Stack  : declarator LPAREN expression_list COMMA inclusive_OR_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [logical_AND_expression -> inclusive_OR_expression] with [None] and goto state 184
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 184
Stack  : declarator LPAREN expression_list COMMA logical_AND_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [logical_OR_expression -> logical_AND_expression] with [None] and goto state 175
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 175
Stack  : declarator LPAREN expression_list COMMA logical_OR_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [conditional_expression -> logical_OR_expression] with [None] and goto state 172
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 172
Stack  : declarator LPAREN expression_list COMMA conditional_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [assignment_expression -> conditional_expression] with [None] and goto state 456
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 456
Stack  : declarator LPAREN expression_list COMMA assignment_expression . LexToken(RPAREN,')',4,43)
Action : Reduce rule [expression_list -> expression_list COMMA assignment_expression] with [None,',',None] and goto state 168
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 168
Stack  : declarator LPAREN expression_list . LexToken(RPAREN,')',4,43)
Action : Shift and goto state 315

State  : 315
Stack  : declarator LPAREN expression_list RPAREN . LexToken(SEMICOLON,';',4,44)
Action : Reduce rule [initializer -> LPAREN expression_list RPAREN] with ['(',None,')'] and goto state 79
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 79
Stack  : declarator initializer . LexToken(SEMICOLON,';',4,44)
Action : Reduce rule [init_declarator -> declarator initializer] with [None,None] and goto state 12
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 12
Stack  : init_declarator . LexToken(SEMICOLON,';',4,44)
Action : Reduce rule [declarator_list -> init_declarator] with [None] and goto state 6
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 6
Stack  : declarator_list . LexToken(SEMICOLON,';',4,44)
Action : Shift and goto state 71

State  : 71
Stack  : declarator_list SEMICOLON . LexToken(RETURN,'return',8,99)
Action : Reduce rule [declaration -> declarator_list SEMICOLON] with [None,';'] and goto state 4
Result : <NoneType @ 0x557f739d3a90> (None)

State  : 4
Stack  : declaration . LexToken(RETURN,'return',8,99)
ERROR: Error  : declaration . LexToken(RETURN,'return',8,99)

State  : 4
Stack  : declaration . error
ERROR: Error  : declaration . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(NUMBER,0.0,8,106)
ERROR: Error  : . LexToken(NUMBER,0.0,8,106)

State  : 0
Stack  : . LexToken(SEMICOLON,';',8,107)
ERROR: Error  : . LexToken(SEMICOLON,';',8,107)

State  : 0
Stack  : . LexToken(RCPAREN,'}',9,109)
ERROR: Error  : . LexToken(RCPAREN,'}',9,109)

State  : 0
Stack  : . $end
ERROR: Error  : . $end
Syntax error in input!
LexToken(HASHTAG,'#',4,25)
Syntax error in input!
LexToken(RETURN,'return',8,99)
None
