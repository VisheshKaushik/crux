Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CATCH
    DELETE
    DQUOTE
    HASHTAG
    NEW
    SQUOTE
    TEMPLATE

Grammar

Rule 0     S' -> program
Rule 1     program -> translation_unit
Rule 2     primary_expression -> IDENTIFIER
Rule 3     primary_expression -> NUMBER
Rule 4     primary_expression -> STRING_LITERAL
Rule 5     primary_expression -> SCHAR
Rule 6     primary_expression -> LRPAREN expression RRPAREN
Rule 7     postfix_expression -> primary_expression
Rule 8     postfix_expression -> postfix_expression LSPAREN expression RSPAREN
Rule 9     postfix_expression -> postfix_expression LRPAREN RRPAREN
Rule 10    postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN
Rule 11    postfix_expression -> postfix_expression DOT IDENTIFIER
Rule 12    postfix_expression -> postfix_expression PTR_OP IDENTIFIER
Rule 13    postfix_expression -> postfix_expression INC_OP
Rule 14    postfix_expression -> postfix_expression DEC_OP
Rule 15    argument_expression_list -> assignment_expression
Rule 16    argument_expression_list -> argument_expression_list COMMA assignment_expression
Rule 17    unary_expression -> postfix_expression
Rule 18    unary_expression -> INC_OP unary_expression
Rule 19    unary_expression -> DEC_OP unary_expression
Rule 20    unary_expression -> unary_operator cast_expression
Rule 21    unary_expression -> SIZEOF unary_expression
Rule 22    unary_expression -> SIZEOF LRPAREN type_name RRPAREN
Rule 23    unary_operator -> BANDOP
Rule 24    unary_operator -> MULTOP
Rule 25    unary_operator -> PLUSOP
Rule 26    unary_operator -> MINUSOP
Rule 27    unary_operator -> BNOP
Rule 28    unary_operator -> NOTSYM
Rule 29    cast_expression -> unary_expression
Rule 30    cast_expression -> LRPAREN type_name RRPAREN cast_expression
Rule 31    multiplicative_expression -> cast_expression
Rule 32    multiplicative_expression -> multiplicative_expression MULTOP cast_expression
Rule 33    multiplicative_expression -> multiplicative_expression DIVOP cast_expression
Rule 34    multiplicative_expression -> multiplicative_expression MODOP cast_expression
Rule 35    additive_expression -> multiplicative_expression
Rule 36    additive_expression -> additive_expression PLUSOP multiplicative_expression
Rule 37    additive_expression -> additive_expression MINUSOP multiplicative_expression
Rule 38    shift_expression -> additive_expression
Rule 39    shift_expression -> shift_expression LEFT_OP additive_expression
Rule 40    shift_expression -> shift_expression RIGHT_OP additive_expression
Rule 41    relational_expression -> shift_expression
Rule 42    relational_expression -> relational_expression LTCOMP shift_expression
Rule 43    relational_expression -> relational_expression GTCOMP shift_expression
Rule 44    relational_expression -> relational_expression LE_OP shift_expression
Rule 45    relational_expression -> relational_expression GE_OP shift_expression
Rule 46    equality_expression -> relational_expression
Rule 47    equality_expression -> equality_expression EQ_OP relational_expression
Rule 48    equality_expression -> equality_expression NE_OP relational_expression
Rule 49    and_expression -> equality_expression
Rule 50    and_expression -> and_expression BANDOP equality_expression
Rule 51    exclusive_or_expression -> and_expression
Rule 52    exclusive_or_expression -> exclusive_or_expression XOROP and_expression
Rule 53    inclusive_or_expression -> exclusive_or_expression
Rule 54    inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression
Rule 55    logical_and_expression -> inclusive_or_expression
Rule 56    logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
Rule 57    logical_or_expression -> logical_and_expression
Rule 58    logical_or_expression -> logical_or_expression OR_OP logical_and_expression
Rule 59    conditional_expression -> logical_or_expression
Rule 60    conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression
Rule 61    assignment_expression -> conditional_expression
Rule 62    assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 63    assignment_operator -> EQUAL
Rule 64    assignment_operator -> MUL_ASSIGN
Rule 65    assignment_operator -> DIV_ASSIGN
Rule 66    assignment_operator -> MOD_ASSIGN
Rule 67    assignment_operator -> ADD_ASSIGN
Rule 68    assignment_operator -> SUB_ASSIGN
Rule 69    assignment_operator -> LEFT_ASSIGN
Rule 70    assignment_operator -> RIGHT_ASSIGN
Rule 71    assignment_operator -> AND_ASSIGN
Rule 72    assignment_operator -> XOR_ASSIGN
Rule 73    assignment_operator -> OR_ASSIGN
Rule 74    expression -> assignment_expression
Rule 75    expression -> expression COMMA assignment_expression
Rule 76    constant_expression -> conditional_expression
Rule 77    declaration -> declaration_specifiers SEMICOLON
Rule 78    declaration -> declaration_specifiers init_declarator_list SEMICOLON
Rule 79    declaration_specifiers -> storage_class_specifier
Rule 80    declaration_specifiers -> storage_class_specifier declaration_specifiers
Rule 81    declaration_specifiers -> type_specifier
Rule 82    declaration_specifiers -> type_specifier declaration_specifiers
Rule 83    declaration_specifiers -> type_qualifier
Rule 84    declaration_specifiers -> type_qualifier declaration_specifiers
Rule 85    init_declarator_list -> init_declarator
Rule 86    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 87    init_declarator -> declarator
Rule 88    init_declarator -> declarator EQUAL initializer
Rule 89    storage_class_specifier -> TYPEDEF
Rule 90    storage_class_specifier -> EXTERN
Rule 91    storage_class_specifier -> STATIC
Rule 92    storage_class_specifier -> AUTO
Rule 93    storage_class_specifier -> REGISTER
Rule 94    type_specifier -> VOID
Rule 95    type_specifier -> CHAR
Rule 96    type_specifier -> SHORT
Rule 97    type_specifier -> INT
Rule 98    type_specifier -> LONG
Rule 99    type_specifier -> FLOAT
Rule 100   type_specifier -> DOUBLE
Rule 101   type_specifier -> SIGNED
Rule 102   type_specifier -> UNSIGNED
Rule 103   type_specifier -> struct_or_union_specifier
Rule 104   type_specifier -> enum_specifier
Rule 105   struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
Rule 106   struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN
Rule 107   struct_or_union_specifier -> struct_or_union IDENTIFIER
Rule 108   struct_or_union -> STRUCT
Rule 109   struct_or_union -> UNION
Rule 110   struct_or_union -> CLASS
Rule 111   struct_declaration_list -> struct_declaration
Rule 112   struct_declaration_list -> struct_declaration_list struct_declaration
Rule 113   struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
Rule 114   specifier_qualifier_list -> type_specifier specifier_qualifier_list
Rule 115   specifier_qualifier_list -> type_specifier
Rule 116   specifier_qualifier_list -> type_qualifier specifier_qualifier_list
Rule 117   specifier_qualifier_list -> type_qualifier
Rule 118   struct_declarator_list -> struct_declarator
Rule 119   struct_declarator_list -> struct_declarator_list COMMA struct_declarator
Rule 120   struct_declarator -> declarator
Rule 121   struct_declarator -> COLON constant_expression
Rule 122   struct_declarator -> declarator COLON constant_expression
Rule 123   enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN
Rule 124   enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
Rule 125   enum_specifier -> ENUM IDENTIFIER
Rule 126   enumerator_list -> enumerator
Rule 127   enumerator_list -> enumerator_list COMMA enumerator
Rule 128   enumerator -> IDENTIFIER
Rule 129   enumerator -> IDENTIFIER EQUAL constant_expression
Rule 130   type_qualifier -> CONST
Rule 131   type_qualifier -> VOLATILE
Rule 132   declarator -> pointer direct_declarator
Rule 133   declarator -> direct_declarator
Rule 134   direct_declarator -> IDENTIFIER
Rule 135   direct_declarator -> LRPAREN declarator RRPAREN
Rule 136   direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN
Rule 137   direct_declarator -> direct_declarator LSPAREN RSPAREN
Rule 138   direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN
Rule 139   direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN
Rule 140   direct_declarator -> direct_declarator LRPAREN RRPAREN
Rule 141   pointer -> MULTOP
Rule 142   pointer -> MULTOP type_qualifier_list
Rule 143   pointer -> MULTOP pointer
Rule 144   pointer -> MULTOP type_qualifier_list pointer
Rule 145   type_qualifier_list -> type_qualifier
Rule 146   type_qualifier_list -> type_qualifier_list type_qualifier
Rule 147   parameter_type_list -> parameter_list
Rule 148   parameter_type_list -> parameter_list COMMA ELLIPSIS
Rule 149   parameter_list -> parameter_declaration
Rule 150   parameter_list -> parameter_list COMMA parameter_declaration
Rule 151   parameter_declaration -> declaration_specifiers declarator
Rule 152   parameter_declaration -> declaration_specifiers abstract_declarator
Rule 153   parameter_declaration -> declaration_specifiers
Rule 154   identifier_list -> IDENTIFIER
Rule 155   identifier_list -> identifier_list COMMA IDENTIFIER
Rule 156   type_name -> specifier_qualifier_list
Rule 157   type_name -> specifier_qualifier_list abstract_declarator
Rule 158   abstract_declarator -> pointer
Rule 159   abstract_declarator -> direct_abstract_declarator
Rule 160   abstract_declarator -> pointer direct_abstract_declarator
Rule 161   direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN
Rule 162   direct_abstract_declarator -> LSPAREN RSPAREN
Rule 163   direct_abstract_declarator -> LSPAREN constant_expression RSPAREN
Rule 164   direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN
Rule 165   direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN
Rule 166   direct_abstract_declarator -> LRPAREN RRPAREN
Rule 167   direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN
Rule 168   direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN
Rule 169   direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN
Rule 170   initializer -> assignment_expression
Rule 171   initializer -> LCPAREN initializer_list RCPAREN
Rule 172   initializer -> LCPAREN initializer_list COMMA RCPAREN
Rule 173   initializer_list -> initializer
Rule 174   initializer_list -> initializer_list COMMA initializer
Rule 175   statement -> labeled_statement
Rule 176   statement -> compound_statement
Rule 177   statement -> expression_statement
Rule 178   statement -> selection_statement
Rule 179   statement -> iteration_statement
Rule 180   statement -> jump_statement
Rule 181   labeled_statement -> IDENTIFIER COLON statement
Rule 182   labeled_statement -> CASE constant_expression COLON statement
Rule 183   labeled_statement -> DEFAULT COLON statement
Rule 184   compound_statement -> LCPAREN RCPAREN
Rule 185   compound_statement -> LCPAREN statement_list RCPAREN
Rule 186   compound_statement -> LCPAREN declaration_list RCPAREN
Rule 187   compound_statement -> LCPAREN declaration_list statement_list RCPAREN
Rule 188   declaration_list -> declaration
Rule 189   declaration_list -> declaration_list declaration
Rule 190   statement_list -> statement
Rule 191   statement_list -> statement_list statement
Rule 192   expression_statement -> SEMICOLON
Rule 193   expression_statement -> expression SEMICOLON
Rule 194   selection_statement -> IF LRPAREN expression RRPAREN statement
Rule 195   selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement
Rule 196   selection_statement -> SWITCH LRPAREN expression RRPAREN statement
Rule 197   iteration_statement -> WHILE LRPAREN expression RRPAREN statement
Rule 198   iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
Rule 199   iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement
Rule 200   iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
Rule 201   jump_statement -> GOTO IDENTIFIER SEMICOLON
Rule 202   jump_statement -> CONTINUE SEMICOLON
Rule 203   jump_statement -> BREAK SEMICOLON
Rule 204   jump_statement -> RETURN SEMICOLON
Rule 205   jump_statement -> RETURN expression SEMICOLON
Rule 206   translation_unit -> external_declaration
Rule 207   translation_unit -> translation_unit external_declaration
Rule 208   external_declaration -> function_definition
Rule 209   external_declaration -> declaration
Rule 210   function_definition -> declaration_specifiers declarator declaration_list compound_statement
Rule 211   function_definition -> declaration_specifiers declarator compound_statement
Rule 212   function_definition -> declarator declaration_list compound_statement
Rule 213   function_definition -> declarator compound_statement
Rule 214   class_specifier -> class IDENTIFIER LCPAREN final_class_list RCPAREN
Rule 215   class_specifier -> class LCPAREN final_class_list RCPAREN
Rule 216   class_specifier -> class IDENTIFIER
Rule 217   class -> CLASS
Rule 218   final_class_list -> class_list
Rule 219   final_class_list -> PUBLIC COLON class_list PRIVATE COLON class_list
Rule 220   final_class_list -> PRIVATE COLON class_list PUBLIC COLON class_list
Rule 221   final_class_list -> PUBLIC COLON class_list
Rule 222   final_class_list -> PRIVATE COLON class_list
Rule 223   class_list -> class_declaration
Rule 224   class_list -> class_list class_declaration
Rule 225   class_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
Rule 226   class_declaration -> function_definition

Terminals, with rules where they appear

ADD_ASSIGN           : 67
AND_ASSIGN           : 71
AND_OP               : 56
AUTO                 : 92
BANDOP               : 23 50
BNOP                 : 27
BOROP                : 54
BREAK                : 203
CASE                 : 182
CATCH                : 
CHAR                 : 95
CLASS                : 110 217
COLON                : 60 121 122 181 182 183 219 219 220 220 221 222
COMMA                : 16 75 86 119 127 148 150 155 172 174
CONST                : 130
CONTINUE             : 202
DEC_OP               : 14 19
DEFAULT              : 183
DELETE               : 
DIVOP                : 33
DIV_ASSIGN           : 65
DO                   : 198
DOT                  : 11
DOUBLE               : 100
DQUOTE               : 
ELLIPSIS             : 148
ELSE                 : 195
ENUM                 : 123 124 125
EQUAL                : 63 88 129
EQ_OP                : 47
EXTERN               : 90
FLOAT                : 99
FOR                  : 199 200
GE_OP                : 45
GOTO                 : 201
GTCOMP               : 43
HASHTAG              : 
IDENTIFIER           : 2 11 12 105 107 124 125 128 129 134 154 155 181 201 214 216
IF                   : 194 195
INC_OP               : 13 18
INT                  : 97
LCPAREN              : 105 106 123 124 171 172 184 185 186 187 214 215
LEFT_ASSIGN          : 69
LEFT_OP              : 39
LE_OP                : 44
LONG                 : 98
LRPAREN              : 6 9 10 22 30 135 138 139 140 161 166 167 168 169 194 195 196 197 198 199 200
LSPAREN              : 8 136 137 162 163 164 165
LTCOMP               : 42
MINUSOP              : 26 37
MODOP                : 34
MOD_ASSIGN           : 66
MULTOP               : 24 32 141 142 143 144
MUL_ASSIGN           : 64
NEW                  : 
NE_OP                : 48
NOTSYM               : 28
NUMBER               : 3
OR_ASSIGN            : 73
OR_OP                : 58
PLUSOP               : 25 36
PRIVATE              : 219 220 222
PTR_OP               : 12
PUBLIC               : 219 220 221
QUESMARK             : 60
RCPAREN              : 105 106 123 124 171 172 184 185 186 187 214 215
REGISTER             : 93
RETURN               : 204 205
RIGHT_ASSIGN         : 70
RIGHT_OP             : 40
RRPAREN              : 6 9 10 22 30 135 138 139 140 161 166 167 168 169 194 195 196 197 198 199 200
RSPAREN              : 8 136 137 162 163 164 165
SCHAR                : 5
SEMICOLON            : 77 78 113 192 193 198 201 202 203 204 205 225
SHORT                : 96
SIGNED               : 101
SIZEOF               : 21 22
SQUOTE               : 
STATIC               : 91
STRING_LITERAL       : 4
STRUCT               : 108
SUB_ASSIGN           : 68
SWITCH               : 196
TEMPLATE             : 
TYPEDEF              : 89
UNION                : 109
UNSIGNED             : 102
VOID                 : 94
VOLATILE             : 131
WHILE                : 197 198
XOROP                : 52
XOR_ASSIGN           : 72
error                : 

Nonterminals, with rules where they appear

abstract_declarator  : 152 157 161
additive_expression  : 36 37 38 39 40
and_expression       : 50 51 52
argument_expression_list : 10 16
assignment_expression : 15 16 62 74 75 170
assignment_operator  : 62
cast_expression      : 20 30 31 32 33 34
class                : 214 215 216
class_declaration    : 223 224
class_list           : 218 219 219 220 220 221 222 224
class_specifier      : 
compound_statement   : 176 210 211 212 213
conditional_expression : 60 61 76
constant_expression  : 121 122 129 136 163 165 182
declaration          : 188 189 209
declaration_list     : 186 187 189 210 212
declaration_specifiers : 77 78 80 82 84 151 152 153 210 211
declarator           : 87 88 120 122 135 151 210 211 212 213
direct_abstract_declarator : 159 160 164 165 168 169
direct_declarator    : 132 133 136 137 138 139 140
enum_specifier       : 104
enumerator           : 126 127
enumerator_list      : 123 124 127
equality_expression  : 47 48 49 50
exclusive_or_expression : 52 53 54
expression           : 6 8 60 75 193 194 195 196 197 198 200 205
expression_statement : 177 199 199 200 200
external_declaration : 206 207
final_class_list     : 214 215
function_definition  : 208 226
identifier_list      : 139 155
inclusive_or_expression : 54 55 56
init_declarator      : 85 86
init_declarator_list : 78 86
initializer          : 88 173 174
initializer_list     : 171 172 174
iteration_statement  : 179
jump_statement       : 180
labeled_statement    : 175
logical_and_expression : 56 57 58
logical_or_expression : 58 59 60
multiplicative_expression : 32 33 34 35 36 37
parameter_declaration : 149 150
parameter_list       : 147 148 150
parameter_type_list  : 138 167 169
pointer              : 132 143 144 158 160
postfix_expression   : 8 9 10 11 12 13 14 17
primary_expression   : 7
program              : 0
relational_expression : 42 43 44 45 46 47 48
selection_statement  : 178
shift_expression     : 39 40 41 42 43 44 45
specifier_qualifier_list : 113 114 116 156 157 225
statement            : 181 182 183 190 191 194 195 195 196 197 198 199 200
statement_list       : 185 187 191
storage_class_specifier : 79 80
struct_declaration   : 111 112
struct_declaration_list : 105 106 112
struct_declarator    : 118 119
struct_declarator_list : 113 119 225
struct_or_union      : 105 106 107
struct_or_union_specifier : 103
translation_unit     : 1 207
type_name            : 22 30
type_qualifier       : 83 84 116 117 145 146
type_qualifier_list  : 142 144 146
type_specifier       : 81 82 114 115
unary_expression     : 18 19 21 29 62
unary_operator       : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . translation_unit
    (206) translation_unit -> . external_declaration
    (207) translation_unit -> . translation_unit external_declaration
    (208) external_declaration -> . function_definition
    (209) external_declaration -> . declaration
    (210) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (211) function_definition -> . declaration_specifiers declarator compound_statement
    (212) function_definition -> . declarator declaration_list compound_statement
    (213) function_definition -> . declarator compound_statement
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    program                        shift and go to state 1
    translation_unit               shift and go to state 2
    external_declaration           shift and go to state 3
    function_definition            shift and go to state 4
    declaration                    shift and go to state 5
    declaration_specifiers         shift and go to state 6
    declarator                     shift and go to state 7
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 1

    (0) S' -> program .



state 2

    (1) program -> translation_unit .
    (207) translation_unit -> translation_unit . external_declaration
    (208) external_declaration -> . function_definition
    (209) external_declaration -> . declaration
    (210) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (211) function_definition -> . declaration_specifiers declarator compound_statement
    (212) function_definition -> . declarator declaration_list compound_statement
    (213) function_definition -> . declarator compound_statement
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    $end            reduce using rule 1 (program -> translation_unit .)
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    external_declaration           shift and go to state 39
    function_definition            shift and go to state 4
    declaration                    shift and go to state 5
    declaration_specifiers         shift and go to state 6
    declarator                     shift and go to state 7
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 3

    (206) translation_unit -> external_declaration .

    TYPEDEF         reduce using rule 206 (translation_unit -> external_declaration .)
    EXTERN          reduce using rule 206 (translation_unit -> external_declaration .)
    STATIC          reduce using rule 206 (translation_unit -> external_declaration .)
    AUTO            reduce using rule 206 (translation_unit -> external_declaration .)
    REGISTER        reduce using rule 206 (translation_unit -> external_declaration .)
    VOID            reduce using rule 206 (translation_unit -> external_declaration .)
    CHAR            reduce using rule 206 (translation_unit -> external_declaration .)
    SHORT           reduce using rule 206 (translation_unit -> external_declaration .)
    INT             reduce using rule 206 (translation_unit -> external_declaration .)
    LONG            reduce using rule 206 (translation_unit -> external_declaration .)
    FLOAT           reduce using rule 206 (translation_unit -> external_declaration .)
    DOUBLE          reduce using rule 206 (translation_unit -> external_declaration .)
    SIGNED          reduce using rule 206 (translation_unit -> external_declaration .)
    UNSIGNED        reduce using rule 206 (translation_unit -> external_declaration .)
    CONST           reduce using rule 206 (translation_unit -> external_declaration .)
    VOLATILE        reduce using rule 206 (translation_unit -> external_declaration .)
    MULTOP          reduce using rule 206 (translation_unit -> external_declaration .)
    IDENTIFIER      reduce using rule 206 (translation_unit -> external_declaration .)
    LRPAREN         reduce using rule 206 (translation_unit -> external_declaration .)
    ENUM            reduce using rule 206 (translation_unit -> external_declaration .)
    STRUCT          reduce using rule 206 (translation_unit -> external_declaration .)
    UNION           reduce using rule 206 (translation_unit -> external_declaration .)
    CLASS           reduce using rule 206 (translation_unit -> external_declaration .)
    $end            reduce using rule 206 (translation_unit -> external_declaration .)


state 4

    (208) external_declaration -> function_definition .

    TYPEDEF         reduce using rule 208 (external_declaration -> function_definition .)
    EXTERN          reduce using rule 208 (external_declaration -> function_definition .)
    STATIC          reduce using rule 208 (external_declaration -> function_definition .)
    AUTO            reduce using rule 208 (external_declaration -> function_definition .)
    REGISTER        reduce using rule 208 (external_declaration -> function_definition .)
    VOID            reduce using rule 208 (external_declaration -> function_definition .)
    CHAR            reduce using rule 208 (external_declaration -> function_definition .)
    SHORT           reduce using rule 208 (external_declaration -> function_definition .)
    INT             reduce using rule 208 (external_declaration -> function_definition .)
    LONG            reduce using rule 208 (external_declaration -> function_definition .)
    FLOAT           reduce using rule 208 (external_declaration -> function_definition .)
    DOUBLE          reduce using rule 208 (external_declaration -> function_definition .)
    SIGNED          reduce using rule 208 (external_declaration -> function_definition .)
    UNSIGNED        reduce using rule 208 (external_declaration -> function_definition .)
    CONST           reduce using rule 208 (external_declaration -> function_definition .)
    VOLATILE        reduce using rule 208 (external_declaration -> function_definition .)
    MULTOP          reduce using rule 208 (external_declaration -> function_definition .)
    IDENTIFIER      reduce using rule 208 (external_declaration -> function_definition .)
    LRPAREN         reduce using rule 208 (external_declaration -> function_definition .)
    ENUM            reduce using rule 208 (external_declaration -> function_definition .)
    STRUCT          reduce using rule 208 (external_declaration -> function_definition .)
    UNION           reduce using rule 208 (external_declaration -> function_definition .)
    CLASS           reduce using rule 208 (external_declaration -> function_definition .)
    $end            reduce using rule 208 (external_declaration -> function_definition .)


state 5

    (209) external_declaration -> declaration .

    TYPEDEF         reduce using rule 209 (external_declaration -> declaration .)
    EXTERN          reduce using rule 209 (external_declaration -> declaration .)
    STATIC          reduce using rule 209 (external_declaration -> declaration .)
    AUTO            reduce using rule 209 (external_declaration -> declaration .)
    REGISTER        reduce using rule 209 (external_declaration -> declaration .)
    VOID            reduce using rule 209 (external_declaration -> declaration .)
    CHAR            reduce using rule 209 (external_declaration -> declaration .)
    SHORT           reduce using rule 209 (external_declaration -> declaration .)
    INT             reduce using rule 209 (external_declaration -> declaration .)
    LONG            reduce using rule 209 (external_declaration -> declaration .)
    FLOAT           reduce using rule 209 (external_declaration -> declaration .)
    DOUBLE          reduce using rule 209 (external_declaration -> declaration .)
    SIGNED          reduce using rule 209 (external_declaration -> declaration .)
    UNSIGNED        reduce using rule 209 (external_declaration -> declaration .)
    CONST           reduce using rule 209 (external_declaration -> declaration .)
    VOLATILE        reduce using rule 209 (external_declaration -> declaration .)
    MULTOP          reduce using rule 209 (external_declaration -> declaration .)
    IDENTIFIER      reduce using rule 209 (external_declaration -> declaration .)
    LRPAREN         reduce using rule 209 (external_declaration -> declaration .)
    ENUM            reduce using rule 209 (external_declaration -> declaration .)
    STRUCT          reduce using rule 209 (external_declaration -> declaration .)
    UNION           reduce using rule 209 (external_declaration -> declaration .)
    CLASS           reduce using rule 209 (external_declaration -> declaration .)
    $end            reduce using rule 209 (external_declaration -> declaration .)


state 6

    (210) function_definition -> declaration_specifiers . declarator declaration_list compound_statement
    (211) function_definition -> declaration_specifiers . declarator compound_statement
    (77) declaration -> declaration_specifiers . SEMICOLON
    (78) declaration -> declaration_specifiers . init_declarator_list SEMICOLON
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (85) init_declarator_list -> . init_declarator
    (86) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (87) init_declarator -> . declarator
    (88) init_declarator -> . declarator EQUAL initializer

    SEMICOLON       shift and go to state 41
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    declarator                     shift and go to state 40
    init_declarator_list           shift and go to state 42
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12
    init_declarator                shift and go to state 43

state 7

    (212) function_definition -> declarator . declaration_list compound_statement
    (213) function_definition -> declarator . compound_statement
    (188) declaration_list -> . declaration
    (189) declaration_list -> . declaration_list declaration
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    LCPAREN         shift and go to state 47
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    declaration_list               shift and go to state 44
    compound_statement             shift and go to state 45
    declaration                    shift and go to state 46
    declaration_specifiers         shift and go to state 48
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 8

    (79) declaration_specifiers -> storage_class_specifier .
    (80) declaration_specifiers -> storage_class_specifier . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    SEMICOLON       reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    MULTOP          reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    IDENTIFIER      reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    LRPAREN         reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    LSPAREN         reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    COMMA           reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    RRPAREN         reduce using rule 79 (declaration_specifiers -> storage_class_specifier .)
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    storage_class_specifier        shift and go to state 8
    declaration_specifiers         shift and go to state 49
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 9

    (81) declaration_specifiers -> type_specifier .
    (82) declaration_specifiers -> type_specifier . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    SEMICOLON       reduce using rule 81 (declaration_specifiers -> type_specifier .)
    MULTOP          reduce using rule 81 (declaration_specifiers -> type_specifier .)
    IDENTIFIER      reduce using rule 81 (declaration_specifiers -> type_specifier .)
    LRPAREN         reduce using rule 81 (declaration_specifiers -> type_specifier .)
    LSPAREN         reduce using rule 81 (declaration_specifiers -> type_specifier .)
    COMMA           reduce using rule 81 (declaration_specifiers -> type_specifier .)
    RRPAREN         reduce using rule 81 (declaration_specifiers -> type_specifier .)
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    type_specifier                 shift and go to state 9
    declaration_specifiers         shift and go to state 50
    storage_class_specifier        shift and go to state 8
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 10

    (83) declaration_specifiers -> type_qualifier .
    (84) declaration_specifiers -> type_qualifier . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    SEMICOLON       reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    MULTOP          reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    IDENTIFIER      reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    LRPAREN         reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    LSPAREN         reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    COMMA           reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    RRPAREN         reduce using rule 83 (declaration_specifiers -> type_qualifier .)
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    type_qualifier                 shift and go to state 10
    declaration_specifiers         shift and go to state 51
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 11

    (132) declarator -> pointer . direct_declarator
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    direct_declarator              shift and go to state 52

state 12

    (133) declarator -> direct_declarator .
    (136) direct_declarator -> direct_declarator . LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> direct_declarator . LSPAREN RSPAREN
    (138) direct_declarator -> direct_declarator . LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> direct_declarator . LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> direct_declarator . LRPAREN RRPAREN

    LCPAREN         reduce using rule 133 (declarator -> direct_declarator .)
    TYPEDEF         reduce using rule 133 (declarator -> direct_declarator .)
    EXTERN          reduce using rule 133 (declarator -> direct_declarator .)
    STATIC          reduce using rule 133 (declarator -> direct_declarator .)
    AUTO            reduce using rule 133 (declarator -> direct_declarator .)
    REGISTER        reduce using rule 133 (declarator -> direct_declarator .)
    VOID            reduce using rule 133 (declarator -> direct_declarator .)
    CHAR            reduce using rule 133 (declarator -> direct_declarator .)
    SHORT           reduce using rule 133 (declarator -> direct_declarator .)
    INT             reduce using rule 133 (declarator -> direct_declarator .)
    LONG            reduce using rule 133 (declarator -> direct_declarator .)
    FLOAT           reduce using rule 133 (declarator -> direct_declarator .)
    DOUBLE          reduce using rule 133 (declarator -> direct_declarator .)
    SIGNED          reduce using rule 133 (declarator -> direct_declarator .)
    UNSIGNED        reduce using rule 133 (declarator -> direct_declarator .)
    CONST           reduce using rule 133 (declarator -> direct_declarator .)
    VOLATILE        reduce using rule 133 (declarator -> direct_declarator .)
    ENUM            reduce using rule 133 (declarator -> direct_declarator .)
    STRUCT          reduce using rule 133 (declarator -> direct_declarator .)
    UNION           reduce using rule 133 (declarator -> direct_declarator .)
    CLASS           reduce using rule 133 (declarator -> direct_declarator .)
    EQUAL           reduce using rule 133 (declarator -> direct_declarator .)
    SEMICOLON       reduce using rule 133 (declarator -> direct_declarator .)
    COMMA           reduce using rule 133 (declarator -> direct_declarator .)
    RRPAREN         reduce using rule 133 (declarator -> direct_declarator .)
    COLON           reduce using rule 133 (declarator -> direct_declarator .)
    LSPAREN         shift and go to state 53
    LRPAREN         shift and go to state 54


state 13

    (89) storage_class_specifier -> TYPEDEF .

    TYPEDEF         reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    EXTERN          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    STATIC          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    AUTO            reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    REGISTER        reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    VOID            reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    CHAR            reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    SHORT           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    INT             reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    LONG            reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    FLOAT           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    DOUBLE          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    SIGNED          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    UNSIGNED        reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    CONST           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    VOLATILE        reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    ENUM            reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    STRUCT          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    UNION           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    CLASS           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    SEMICOLON       reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    MULTOP          reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    IDENTIFIER      reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    LRPAREN         reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    LSPAREN         reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    COMMA           reduce using rule 89 (storage_class_specifier -> TYPEDEF .)
    RRPAREN         reduce using rule 89 (storage_class_specifier -> TYPEDEF .)


state 14

    (90) storage_class_specifier -> EXTERN .

    TYPEDEF         reduce using rule 90 (storage_class_specifier -> EXTERN .)
    EXTERN          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    STATIC          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    AUTO            reduce using rule 90 (storage_class_specifier -> EXTERN .)
    REGISTER        reduce using rule 90 (storage_class_specifier -> EXTERN .)
    VOID            reduce using rule 90 (storage_class_specifier -> EXTERN .)
    CHAR            reduce using rule 90 (storage_class_specifier -> EXTERN .)
    SHORT           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    INT             reduce using rule 90 (storage_class_specifier -> EXTERN .)
    LONG            reduce using rule 90 (storage_class_specifier -> EXTERN .)
    FLOAT           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    DOUBLE          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    SIGNED          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    UNSIGNED        reduce using rule 90 (storage_class_specifier -> EXTERN .)
    CONST           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    VOLATILE        reduce using rule 90 (storage_class_specifier -> EXTERN .)
    ENUM            reduce using rule 90 (storage_class_specifier -> EXTERN .)
    STRUCT          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    UNION           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    CLASS           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    SEMICOLON       reduce using rule 90 (storage_class_specifier -> EXTERN .)
    MULTOP          reduce using rule 90 (storage_class_specifier -> EXTERN .)
    IDENTIFIER      reduce using rule 90 (storage_class_specifier -> EXTERN .)
    LRPAREN         reduce using rule 90 (storage_class_specifier -> EXTERN .)
    LSPAREN         reduce using rule 90 (storage_class_specifier -> EXTERN .)
    COMMA           reduce using rule 90 (storage_class_specifier -> EXTERN .)
    RRPAREN         reduce using rule 90 (storage_class_specifier -> EXTERN .)


state 15

    (91) storage_class_specifier -> STATIC .

    TYPEDEF         reduce using rule 91 (storage_class_specifier -> STATIC .)
    EXTERN          reduce using rule 91 (storage_class_specifier -> STATIC .)
    STATIC          reduce using rule 91 (storage_class_specifier -> STATIC .)
    AUTO            reduce using rule 91 (storage_class_specifier -> STATIC .)
    REGISTER        reduce using rule 91 (storage_class_specifier -> STATIC .)
    VOID            reduce using rule 91 (storage_class_specifier -> STATIC .)
    CHAR            reduce using rule 91 (storage_class_specifier -> STATIC .)
    SHORT           reduce using rule 91 (storage_class_specifier -> STATIC .)
    INT             reduce using rule 91 (storage_class_specifier -> STATIC .)
    LONG            reduce using rule 91 (storage_class_specifier -> STATIC .)
    FLOAT           reduce using rule 91 (storage_class_specifier -> STATIC .)
    DOUBLE          reduce using rule 91 (storage_class_specifier -> STATIC .)
    SIGNED          reduce using rule 91 (storage_class_specifier -> STATIC .)
    UNSIGNED        reduce using rule 91 (storage_class_specifier -> STATIC .)
    CONST           reduce using rule 91 (storage_class_specifier -> STATIC .)
    VOLATILE        reduce using rule 91 (storage_class_specifier -> STATIC .)
    ENUM            reduce using rule 91 (storage_class_specifier -> STATIC .)
    STRUCT          reduce using rule 91 (storage_class_specifier -> STATIC .)
    UNION           reduce using rule 91 (storage_class_specifier -> STATIC .)
    CLASS           reduce using rule 91 (storage_class_specifier -> STATIC .)
    SEMICOLON       reduce using rule 91 (storage_class_specifier -> STATIC .)
    MULTOP          reduce using rule 91 (storage_class_specifier -> STATIC .)
    IDENTIFIER      reduce using rule 91 (storage_class_specifier -> STATIC .)
    LRPAREN         reduce using rule 91 (storage_class_specifier -> STATIC .)
    LSPAREN         reduce using rule 91 (storage_class_specifier -> STATIC .)
    COMMA           reduce using rule 91 (storage_class_specifier -> STATIC .)
    RRPAREN         reduce using rule 91 (storage_class_specifier -> STATIC .)


state 16

    (92) storage_class_specifier -> AUTO .

    TYPEDEF         reduce using rule 92 (storage_class_specifier -> AUTO .)
    EXTERN          reduce using rule 92 (storage_class_specifier -> AUTO .)
    STATIC          reduce using rule 92 (storage_class_specifier -> AUTO .)
    AUTO            reduce using rule 92 (storage_class_specifier -> AUTO .)
    REGISTER        reduce using rule 92 (storage_class_specifier -> AUTO .)
    VOID            reduce using rule 92 (storage_class_specifier -> AUTO .)
    CHAR            reduce using rule 92 (storage_class_specifier -> AUTO .)
    SHORT           reduce using rule 92 (storage_class_specifier -> AUTO .)
    INT             reduce using rule 92 (storage_class_specifier -> AUTO .)
    LONG            reduce using rule 92 (storage_class_specifier -> AUTO .)
    FLOAT           reduce using rule 92 (storage_class_specifier -> AUTO .)
    DOUBLE          reduce using rule 92 (storage_class_specifier -> AUTO .)
    SIGNED          reduce using rule 92 (storage_class_specifier -> AUTO .)
    UNSIGNED        reduce using rule 92 (storage_class_specifier -> AUTO .)
    CONST           reduce using rule 92 (storage_class_specifier -> AUTO .)
    VOLATILE        reduce using rule 92 (storage_class_specifier -> AUTO .)
    ENUM            reduce using rule 92 (storage_class_specifier -> AUTO .)
    STRUCT          reduce using rule 92 (storage_class_specifier -> AUTO .)
    UNION           reduce using rule 92 (storage_class_specifier -> AUTO .)
    CLASS           reduce using rule 92 (storage_class_specifier -> AUTO .)
    SEMICOLON       reduce using rule 92 (storage_class_specifier -> AUTO .)
    MULTOP          reduce using rule 92 (storage_class_specifier -> AUTO .)
    IDENTIFIER      reduce using rule 92 (storage_class_specifier -> AUTO .)
    LRPAREN         reduce using rule 92 (storage_class_specifier -> AUTO .)
    LSPAREN         reduce using rule 92 (storage_class_specifier -> AUTO .)
    COMMA           reduce using rule 92 (storage_class_specifier -> AUTO .)
    RRPAREN         reduce using rule 92 (storage_class_specifier -> AUTO .)


state 17

    (93) storage_class_specifier -> REGISTER .

    TYPEDEF         reduce using rule 93 (storage_class_specifier -> REGISTER .)
    EXTERN          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    STATIC          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    AUTO            reduce using rule 93 (storage_class_specifier -> REGISTER .)
    REGISTER        reduce using rule 93 (storage_class_specifier -> REGISTER .)
    VOID            reduce using rule 93 (storage_class_specifier -> REGISTER .)
    CHAR            reduce using rule 93 (storage_class_specifier -> REGISTER .)
    SHORT           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    INT             reduce using rule 93 (storage_class_specifier -> REGISTER .)
    LONG            reduce using rule 93 (storage_class_specifier -> REGISTER .)
    FLOAT           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    DOUBLE          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    SIGNED          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    UNSIGNED        reduce using rule 93 (storage_class_specifier -> REGISTER .)
    CONST           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    VOLATILE        reduce using rule 93 (storage_class_specifier -> REGISTER .)
    ENUM            reduce using rule 93 (storage_class_specifier -> REGISTER .)
    STRUCT          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    UNION           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    CLASS           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    SEMICOLON       reduce using rule 93 (storage_class_specifier -> REGISTER .)
    MULTOP          reduce using rule 93 (storage_class_specifier -> REGISTER .)
    IDENTIFIER      reduce using rule 93 (storage_class_specifier -> REGISTER .)
    LRPAREN         reduce using rule 93 (storage_class_specifier -> REGISTER .)
    LSPAREN         reduce using rule 93 (storage_class_specifier -> REGISTER .)
    COMMA           reduce using rule 93 (storage_class_specifier -> REGISTER .)
    RRPAREN         reduce using rule 93 (storage_class_specifier -> REGISTER .)


state 18

    (94) type_specifier -> VOID .

    TYPEDEF         reduce using rule 94 (type_specifier -> VOID .)
    EXTERN          reduce using rule 94 (type_specifier -> VOID .)
    STATIC          reduce using rule 94 (type_specifier -> VOID .)
    AUTO            reduce using rule 94 (type_specifier -> VOID .)
    REGISTER        reduce using rule 94 (type_specifier -> VOID .)
    VOID            reduce using rule 94 (type_specifier -> VOID .)
    CHAR            reduce using rule 94 (type_specifier -> VOID .)
    SHORT           reduce using rule 94 (type_specifier -> VOID .)
    INT             reduce using rule 94 (type_specifier -> VOID .)
    LONG            reduce using rule 94 (type_specifier -> VOID .)
    FLOAT           reduce using rule 94 (type_specifier -> VOID .)
    DOUBLE          reduce using rule 94 (type_specifier -> VOID .)
    SIGNED          reduce using rule 94 (type_specifier -> VOID .)
    UNSIGNED        reduce using rule 94 (type_specifier -> VOID .)
    CONST           reduce using rule 94 (type_specifier -> VOID .)
    VOLATILE        reduce using rule 94 (type_specifier -> VOID .)
    ENUM            reduce using rule 94 (type_specifier -> VOID .)
    STRUCT          reduce using rule 94 (type_specifier -> VOID .)
    UNION           reduce using rule 94 (type_specifier -> VOID .)
    CLASS           reduce using rule 94 (type_specifier -> VOID .)
    SEMICOLON       reduce using rule 94 (type_specifier -> VOID .)
    MULTOP          reduce using rule 94 (type_specifier -> VOID .)
    IDENTIFIER      reduce using rule 94 (type_specifier -> VOID .)
    LRPAREN         reduce using rule 94 (type_specifier -> VOID .)
    LSPAREN         reduce using rule 94 (type_specifier -> VOID .)
    COMMA           reduce using rule 94 (type_specifier -> VOID .)
    RRPAREN         reduce using rule 94 (type_specifier -> VOID .)
    COLON           reduce using rule 94 (type_specifier -> VOID .)


state 19

    (95) type_specifier -> CHAR .

    TYPEDEF         reduce using rule 95 (type_specifier -> CHAR .)
    EXTERN          reduce using rule 95 (type_specifier -> CHAR .)
    STATIC          reduce using rule 95 (type_specifier -> CHAR .)
    AUTO            reduce using rule 95 (type_specifier -> CHAR .)
    REGISTER        reduce using rule 95 (type_specifier -> CHAR .)
    VOID            reduce using rule 95 (type_specifier -> CHAR .)
    CHAR            reduce using rule 95 (type_specifier -> CHAR .)
    SHORT           reduce using rule 95 (type_specifier -> CHAR .)
    INT             reduce using rule 95 (type_specifier -> CHAR .)
    LONG            reduce using rule 95 (type_specifier -> CHAR .)
    FLOAT           reduce using rule 95 (type_specifier -> CHAR .)
    DOUBLE          reduce using rule 95 (type_specifier -> CHAR .)
    SIGNED          reduce using rule 95 (type_specifier -> CHAR .)
    UNSIGNED        reduce using rule 95 (type_specifier -> CHAR .)
    CONST           reduce using rule 95 (type_specifier -> CHAR .)
    VOLATILE        reduce using rule 95 (type_specifier -> CHAR .)
    ENUM            reduce using rule 95 (type_specifier -> CHAR .)
    STRUCT          reduce using rule 95 (type_specifier -> CHAR .)
    UNION           reduce using rule 95 (type_specifier -> CHAR .)
    CLASS           reduce using rule 95 (type_specifier -> CHAR .)
    SEMICOLON       reduce using rule 95 (type_specifier -> CHAR .)
    MULTOP          reduce using rule 95 (type_specifier -> CHAR .)
    IDENTIFIER      reduce using rule 95 (type_specifier -> CHAR .)
    LRPAREN         reduce using rule 95 (type_specifier -> CHAR .)
    LSPAREN         reduce using rule 95 (type_specifier -> CHAR .)
    COMMA           reduce using rule 95 (type_specifier -> CHAR .)
    RRPAREN         reduce using rule 95 (type_specifier -> CHAR .)
    COLON           reduce using rule 95 (type_specifier -> CHAR .)


state 20

    (96) type_specifier -> SHORT .

    TYPEDEF         reduce using rule 96 (type_specifier -> SHORT .)
    EXTERN          reduce using rule 96 (type_specifier -> SHORT .)
    STATIC          reduce using rule 96 (type_specifier -> SHORT .)
    AUTO            reduce using rule 96 (type_specifier -> SHORT .)
    REGISTER        reduce using rule 96 (type_specifier -> SHORT .)
    VOID            reduce using rule 96 (type_specifier -> SHORT .)
    CHAR            reduce using rule 96 (type_specifier -> SHORT .)
    SHORT           reduce using rule 96 (type_specifier -> SHORT .)
    INT             reduce using rule 96 (type_specifier -> SHORT .)
    LONG            reduce using rule 96 (type_specifier -> SHORT .)
    FLOAT           reduce using rule 96 (type_specifier -> SHORT .)
    DOUBLE          reduce using rule 96 (type_specifier -> SHORT .)
    SIGNED          reduce using rule 96 (type_specifier -> SHORT .)
    UNSIGNED        reduce using rule 96 (type_specifier -> SHORT .)
    CONST           reduce using rule 96 (type_specifier -> SHORT .)
    VOLATILE        reduce using rule 96 (type_specifier -> SHORT .)
    ENUM            reduce using rule 96 (type_specifier -> SHORT .)
    STRUCT          reduce using rule 96 (type_specifier -> SHORT .)
    UNION           reduce using rule 96 (type_specifier -> SHORT .)
    CLASS           reduce using rule 96 (type_specifier -> SHORT .)
    SEMICOLON       reduce using rule 96 (type_specifier -> SHORT .)
    MULTOP          reduce using rule 96 (type_specifier -> SHORT .)
    IDENTIFIER      reduce using rule 96 (type_specifier -> SHORT .)
    LRPAREN         reduce using rule 96 (type_specifier -> SHORT .)
    LSPAREN         reduce using rule 96 (type_specifier -> SHORT .)
    COMMA           reduce using rule 96 (type_specifier -> SHORT .)
    RRPAREN         reduce using rule 96 (type_specifier -> SHORT .)
    COLON           reduce using rule 96 (type_specifier -> SHORT .)


state 21

    (97) type_specifier -> INT .

    TYPEDEF         reduce using rule 97 (type_specifier -> INT .)
    EXTERN          reduce using rule 97 (type_specifier -> INT .)
    STATIC          reduce using rule 97 (type_specifier -> INT .)
    AUTO            reduce using rule 97 (type_specifier -> INT .)
    REGISTER        reduce using rule 97 (type_specifier -> INT .)
    VOID            reduce using rule 97 (type_specifier -> INT .)
    CHAR            reduce using rule 97 (type_specifier -> INT .)
    SHORT           reduce using rule 97 (type_specifier -> INT .)
    INT             reduce using rule 97 (type_specifier -> INT .)
    LONG            reduce using rule 97 (type_specifier -> INT .)
    FLOAT           reduce using rule 97 (type_specifier -> INT .)
    DOUBLE          reduce using rule 97 (type_specifier -> INT .)
    SIGNED          reduce using rule 97 (type_specifier -> INT .)
    UNSIGNED        reduce using rule 97 (type_specifier -> INT .)
    CONST           reduce using rule 97 (type_specifier -> INT .)
    VOLATILE        reduce using rule 97 (type_specifier -> INT .)
    ENUM            reduce using rule 97 (type_specifier -> INT .)
    STRUCT          reduce using rule 97 (type_specifier -> INT .)
    UNION           reduce using rule 97 (type_specifier -> INT .)
    CLASS           reduce using rule 97 (type_specifier -> INT .)
    SEMICOLON       reduce using rule 97 (type_specifier -> INT .)
    MULTOP          reduce using rule 97 (type_specifier -> INT .)
    IDENTIFIER      reduce using rule 97 (type_specifier -> INT .)
    LRPAREN         reduce using rule 97 (type_specifier -> INT .)
    LSPAREN         reduce using rule 97 (type_specifier -> INT .)
    COMMA           reduce using rule 97 (type_specifier -> INT .)
    RRPAREN         reduce using rule 97 (type_specifier -> INT .)
    COLON           reduce using rule 97 (type_specifier -> INT .)


state 22

    (98) type_specifier -> LONG .

    TYPEDEF         reduce using rule 98 (type_specifier -> LONG .)
    EXTERN          reduce using rule 98 (type_specifier -> LONG .)
    STATIC          reduce using rule 98 (type_specifier -> LONG .)
    AUTO            reduce using rule 98 (type_specifier -> LONG .)
    REGISTER        reduce using rule 98 (type_specifier -> LONG .)
    VOID            reduce using rule 98 (type_specifier -> LONG .)
    CHAR            reduce using rule 98 (type_specifier -> LONG .)
    SHORT           reduce using rule 98 (type_specifier -> LONG .)
    INT             reduce using rule 98 (type_specifier -> LONG .)
    LONG            reduce using rule 98 (type_specifier -> LONG .)
    FLOAT           reduce using rule 98 (type_specifier -> LONG .)
    DOUBLE          reduce using rule 98 (type_specifier -> LONG .)
    SIGNED          reduce using rule 98 (type_specifier -> LONG .)
    UNSIGNED        reduce using rule 98 (type_specifier -> LONG .)
    CONST           reduce using rule 98 (type_specifier -> LONG .)
    VOLATILE        reduce using rule 98 (type_specifier -> LONG .)
    ENUM            reduce using rule 98 (type_specifier -> LONG .)
    STRUCT          reduce using rule 98 (type_specifier -> LONG .)
    UNION           reduce using rule 98 (type_specifier -> LONG .)
    CLASS           reduce using rule 98 (type_specifier -> LONG .)
    SEMICOLON       reduce using rule 98 (type_specifier -> LONG .)
    MULTOP          reduce using rule 98 (type_specifier -> LONG .)
    IDENTIFIER      reduce using rule 98 (type_specifier -> LONG .)
    LRPAREN         reduce using rule 98 (type_specifier -> LONG .)
    LSPAREN         reduce using rule 98 (type_specifier -> LONG .)
    COMMA           reduce using rule 98 (type_specifier -> LONG .)
    RRPAREN         reduce using rule 98 (type_specifier -> LONG .)
    COLON           reduce using rule 98 (type_specifier -> LONG .)


state 23

    (99) type_specifier -> FLOAT .

    TYPEDEF         reduce using rule 99 (type_specifier -> FLOAT .)
    EXTERN          reduce using rule 99 (type_specifier -> FLOAT .)
    STATIC          reduce using rule 99 (type_specifier -> FLOAT .)
    AUTO            reduce using rule 99 (type_specifier -> FLOAT .)
    REGISTER        reduce using rule 99 (type_specifier -> FLOAT .)
    VOID            reduce using rule 99 (type_specifier -> FLOAT .)
    CHAR            reduce using rule 99 (type_specifier -> FLOAT .)
    SHORT           reduce using rule 99 (type_specifier -> FLOAT .)
    INT             reduce using rule 99 (type_specifier -> FLOAT .)
    LONG            reduce using rule 99 (type_specifier -> FLOAT .)
    FLOAT           reduce using rule 99 (type_specifier -> FLOAT .)
    DOUBLE          reduce using rule 99 (type_specifier -> FLOAT .)
    SIGNED          reduce using rule 99 (type_specifier -> FLOAT .)
    UNSIGNED        reduce using rule 99 (type_specifier -> FLOAT .)
    CONST           reduce using rule 99 (type_specifier -> FLOAT .)
    VOLATILE        reduce using rule 99 (type_specifier -> FLOAT .)
    ENUM            reduce using rule 99 (type_specifier -> FLOAT .)
    STRUCT          reduce using rule 99 (type_specifier -> FLOAT .)
    UNION           reduce using rule 99 (type_specifier -> FLOAT .)
    CLASS           reduce using rule 99 (type_specifier -> FLOAT .)
    SEMICOLON       reduce using rule 99 (type_specifier -> FLOAT .)
    MULTOP          reduce using rule 99 (type_specifier -> FLOAT .)
    IDENTIFIER      reduce using rule 99 (type_specifier -> FLOAT .)
    LRPAREN         reduce using rule 99 (type_specifier -> FLOAT .)
    LSPAREN         reduce using rule 99 (type_specifier -> FLOAT .)
    COMMA           reduce using rule 99 (type_specifier -> FLOAT .)
    RRPAREN         reduce using rule 99 (type_specifier -> FLOAT .)
    COLON           reduce using rule 99 (type_specifier -> FLOAT .)


state 24

    (100) type_specifier -> DOUBLE .

    TYPEDEF         reduce using rule 100 (type_specifier -> DOUBLE .)
    EXTERN          reduce using rule 100 (type_specifier -> DOUBLE .)
    STATIC          reduce using rule 100 (type_specifier -> DOUBLE .)
    AUTO            reduce using rule 100 (type_specifier -> DOUBLE .)
    REGISTER        reduce using rule 100 (type_specifier -> DOUBLE .)
    VOID            reduce using rule 100 (type_specifier -> DOUBLE .)
    CHAR            reduce using rule 100 (type_specifier -> DOUBLE .)
    SHORT           reduce using rule 100 (type_specifier -> DOUBLE .)
    INT             reduce using rule 100 (type_specifier -> DOUBLE .)
    LONG            reduce using rule 100 (type_specifier -> DOUBLE .)
    FLOAT           reduce using rule 100 (type_specifier -> DOUBLE .)
    DOUBLE          reduce using rule 100 (type_specifier -> DOUBLE .)
    SIGNED          reduce using rule 100 (type_specifier -> DOUBLE .)
    UNSIGNED        reduce using rule 100 (type_specifier -> DOUBLE .)
    CONST           reduce using rule 100 (type_specifier -> DOUBLE .)
    VOLATILE        reduce using rule 100 (type_specifier -> DOUBLE .)
    ENUM            reduce using rule 100 (type_specifier -> DOUBLE .)
    STRUCT          reduce using rule 100 (type_specifier -> DOUBLE .)
    UNION           reduce using rule 100 (type_specifier -> DOUBLE .)
    CLASS           reduce using rule 100 (type_specifier -> DOUBLE .)
    SEMICOLON       reduce using rule 100 (type_specifier -> DOUBLE .)
    MULTOP          reduce using rule 100 (type_specifier -> DOUBLE .)
    IDENTIFIER      reduce using rule 100 (type_specifier -> DOUBLE .)
    LRPAREN         reduce using rule 100 (type_specifier -> DOUBLE .)
    LSPAREN         reduce using rule 100 (type_specifier -> DOUBLE .)
    COMMA           reduce using rule 100 (type_specifier -> DOUBLE .)
    RRPAREN         reduce using rule 100 (type_specifier -> DOUBLE .)
    COLON           reduce using rule 100 (type_specifier -> DOUBLE .)


state 25

    (101) type_specifier -> SIGNED .

    TYPEDEF         reduce using rule 101 (type_specifier -> SIGNED .)
    EXTERN          reduce using rule 101 (type_specifier -> SIGNED .)
    STATIC          reduce using rule 101 (type_specifier -> SIGNED .)
    AUTO            reduce using rule 101 (type_specifier -> SIGNED .)
    REGISTER        reduce using rule 101 (type_specifier -> SIGNED .)
    VOID            reduce using rule 101 (type_specifier -> SIGNED .)
    CHAR            reduce using rule 101 (type_specifier -> SIGNED .)
    SHORT           reduce using rule 101 (type_specifier -> SIGNED .)
    INT             reduce using rule 101 (type_specifier -> SIGNED .)
    LONG            reduce using rule 101 (type_specifier -> SIGNED .)
    FLOAT           reduce using rule 101 (type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 101 (type_specifier -> SIGNED .)
    SIGNED          reduce using rule 101 (type_specifier -> SIGNED .)
    UNSIGNED        reduce using rule 101 (type_specifier -> SIGNED .)
    CONST           reduce using rule 101 (type_specifier -> SIGNED .)
    VOLATILE        reduce using rule 101 (type_specifier -> SIGNED .)
    ENUM            reduce using rule 101 (type_specifier -> SIGNED .)
    STRUCT          reduce using rule 101 (type_specifier -> SIGNED .)
    UNION           reduce using rule 101 (type_specifier -> SIGNED .)
    CLASS           reduce using rule 101 (type_specifier -> SIGNED .)
    SEMICOLON       reduce using rule 101 (type_specifier -> SIGNED .)
    MULTOP          reduce using rule 101 (type_specifier -> SIGNED .)
    IDENTIFIER      reduce using rule 101 (type_specifier -> SIGNED .)
    LRPAREN         reduce using rule 101 (type_specifier -> SIGNED .)
    LSPAREN         reduce using rule 101 (type_specifier -> SIGNED .)
    COMMA           reduce using rule 101 (type_specifier -> SIGNED .)
    RRPAREN         reduce using rule 101 (type_specifier -> SIGNED .)
    COLON           reduce using rule 101 (type_specifier -> SIGNED .)


state 26

    (102) type_specifier -> UNSIGNED .

    TYPEDEF         reduce using rule 102 (type_specifier -> UNSIGNED .)
    EXTERN          reduce using rule 102 (type_specifier -> UNSIGNED .)
    STATIC          reduce using rule 102 (type_specifier -> UNSIGNED .)
    AUTO            reduce using rule 102 (type_specifier -> UNSIGNED .)
    REGISTER        reduce using rule 102 (type_specifier -> UNSIGNED .)
    VOID            reduce using rule 102 (type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 102 (type_specifier -> UNSIGNED .)
    SHORT           reduce using rule 102 (type_specifier -> UNSIGNED .)
    INT             reduce using rule 102 (type_specifier -> UNSIGNED .)
    LONG            reduce using rule 102 (type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 102 (type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 102 (type_specifier -> UNSIGNED .)
    SIGNED          reduce using rule 102 (type_specifier -> UNSIGNED .)
    UNSIGNED        reduce using rule 102 (type_specifier -> UNSIGNED .)
    CONST           reduce using rule 102 (type_specifier -> UNSIGNED .)
    VOLATILE        reduce using rule 102 (type_specifier -> UNSIGNED .)
    ENUM            reduce using rule 102 (type_specifier -> UNSIGNED .)
    STRUCT          reduce using rule 102 (type_specifier -> UNSIGNED .)
    UNION           reduce using rule 102 (type_specifier -> UNSIGNED .)
    CLASS           reduce using rule 102 (type_specifier -> UNSIGNED .)
    SEMICOLON       reduce using rule 102 (type_specifier -> UNSIGNED .)
    MULTOP          reduce using rule 102 (type_specifier -> UNSIGNED .)
    IDENTIFIER      reduce using rule 102 (type_specifier -> UNSIGNED .)
    LRPAREN         reduce using rule 102 (type_specifier -> UNSIGNED .)
    LSPAREN         reduce using rule 102 (type_specifier -> UNSIGNED .)
    COMMA           reduce using rule 102 (type_specifier -> UNSIGNED .)
    RRPAREN         reduce using rule 102 (type_specifier -> UNSIGNED .)
    COLON           reduce using rule 102 (type_specifier -> UNSIGNED .)


state 27

    (103) type_specifier -> struct_or_union_specifier .

    TYPEDEF         reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    EXTERN          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    STATIC          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    AUTO            reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    REGISTER        reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    VOID            reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    CHAR            reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    SHORT           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    INT             reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    LONG            reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    FLOAT           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    DOUBLE          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    SIGNED          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    UNSIGNED        reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    CONST           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    VOLATILE        reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    ENUM            reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    STRUCT          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    UNION           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    CLASS           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    SEMICOLON       reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    MULTOP          reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    IDENTIFIER      reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    LRPAREN         reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    LSPAREN         reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    COMMA           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    RRPAREN         reduce using rule 103 (type_specifier -> struct_or_union_specifier .)
    COLON           reduce using rule 103 (type_specifier -> struct_or_union_specifier .)


state 28

    (104) type_specifier -> enum_specifier .

    TYPEDEF         reduce using rule 104 (type_specifier -> enum_specifier .)
    EXTERN          reduce using rule 104 (type_specifier -> enum_specifier .)
    STATIC          reduce using rule 104 (type_specifier -> enum_specifier .)
    AUTO            reduce using rule 104 (type_specifier -> enum_specifier .)
    REGISTER        reduce using rule 104 (type_specifier -> enum_specifier .)
    VOID            reduce using rule 104 (type_specifier -> enum_specifier .)
    CHAR            reduce using rule 104 (type_specifier -> enum_specifier .)
    SHORT           reduce using rule 104 (type_specifier -> enum_specifier .)
    INT             reduce using rule 104 (type_specifier -> enum_specifier .)
    LONG            reduce using rule 104 (type_specifier -> enum_specifier .)
    FLOAT           reduce using rule 104 (type_specifier -> enum_specifier .)
    DOUBLE          reduce using rule 104 (type_specifier -> enum_specifier .)
    SIGNED          reduce using rule 104 (type_specifier -> enum_specifier .)
    UNSIGNED        reduce using rule 104 (type_specifier -> enum_specifier .)
    CONST           reduce using rule 104 (type_specifier -> enum_specifier .)
    VOLATILE        reduce using rule 104 (type_specifier -> enum_specifier .)
    ENUM            reduce using rule 104 (type_specifier -> enum_specifier .)
    STRUCT          reduce using rule 104 (type_specifier -> enum_specifier .)
    UNION           reduce using rule 104 (type_specifier -> enum_specifier .)
    CLASS           reduce using rule 104 (type_specifier -> enum_specifier .)
    SEMICOLON       reduce using rule 104 (type_specifier -> enum_specifier .)
    MULTOP          reduce using rule 104 (type_specifier -> enum_specifier .)
    IDENTIFIER      reduce using rule 104 (type_specifier -> enum_specifier .)
    LRPAREN         reduce using rule 104 (type_specifier -> enum_specifier .)
    LSPAREN         reduce using rule 104 (type_specifier -> enum_specifier .)
    COMMA           reduce using rule 104 (type_specifier -> enum_specifier .)
    RRPAREN         reduce using rule 104 (type_specifier -> enum_specifier .)
    COLON           reduce using rule 104 (type_specifier -> enum_specifier .)


state 29

    (130) type_qualifier -> CONST .

    TYPEDEF         reduce using rule 130 (type_qualifier -> CONST .)
    EXTERN          reduce using rule 130 (type_qualifier -> CONST .)
    STATIC          reduce using rule 130 (type_qualifier -> CONST .)
    AUTO            reduce using rule 130 (type_qualifier -> CONST .)
    REGISTER        reduce using rule 130 (type_qualifier -> CONST .)
    VOID            reduce using rule 130 (type_qualifier -> CONST .)
    CHAR            reduce using rule 130 (type_qualifier -> CONST .)
    SHORT           reduce using rule 130 (type_qualifier -> CONST .)
    INT             reduce using rule 130 (type_qualifier -> CONST .)
    LONG            reduce using rule 130 (type_qualifier -> CONST .)
    FLOAT           reduce using rule 130 (type_qualifier -> CONST .)
    DOUBLE          reduce using rule 130 (type_qualifier -> CONST .)
    SIGNED          reduce using rule 130 (type_qualifier -> CONST .)
    UNSIGNED        reduce using rule 130 (type_qualifier -> CONST .)
    CONST           reduce using rule 130 (type_qualifier -> CONST .)
    VOLATILE        reduce using rule 130 (type_qualifier -> CONST .)
    ENUM            reduce using rule 130 (type_qualifier -> CONST .)
    STRUCT          reduce using rule 130 (type_qualifier -> CONST .)
    UNION           reduce using rule 130 (type_qualifier -> CONST .)
    CLASS           reduce using rule 130 (type_qualifier -> CONST .)
    SEMICOLON       reduce using rule 130 (type_qualifier -> CONST .)
    MULTOP          reduce using rule 130 (type_qualifier -> CONST .)
    IDENTIFIER      reduce using rule 130 (type_qualifier -> CONST .)
    LRPAREN         reduce using rule 130 (type_qualifier -> CONST .)
    LSPAREN         reduce using rule 130 (type_qualifier -> CONST .)
    COMMA           reduce using rule 130 (type_qualifier -> CONST .)
    RRPAREN         reduce using rule 130 (type_qualifier -> CONST .)
    COLON           reduce using rule 130 (type_qualifier -> CONST .)


state 30

    (131) type_qualifier -> VOLATILE .

    TYPEDEF         reduce using rule 131 (type_qualifier -> VOLATILE .)
    EXTERN          reduce using rule 131 (type_qualifier -> VOLATILE .)
    STATIC          reduce using rule 131 (type_qualifier -> VOLATILE .)
    AUTO            reduce using rule 131 (type_qualifier -> VOLATILE .)
    REGISTER        reduce using rule 131 (type_qualifier -> VOLATILE .)
    VOID            reduce using rule 131 (type_qualifier -> VOLATILE .)
    CHAR            reduce using rule 131 (type_qualifier -> VOLATILE .)
    SHORT           reduce using rule 131 (type_qualifier -> VOLATILE .)
    INT             reduce using rule 131 (type_qualifier -> VOLATILE .)
    LONG            reduce using rule 131 (type_qualifier -> VOLATILE .)
    FLOAT           reduce using rule 131 (type_qualifier -> VOLATILE .)
    DOUBLE          reduce using rule 131 (type_qualifier -> VOLATILE .)
    SIGNED          reduce using rule 131 (type_qualifier -> VOLATILE .)
    UNSIGNED        reduce using rule 131 (type_qualifier -> VOLATILE .)
    CONST           reduce using rule 131 (type_qualifier -> VOLATILE .)
    VOLATILE        reduce using rule 131 (type_qualifier -> VOLATILE .)
    ENUM            reduce using rule 131 (type_qualifier -> VOLATILE .)
    STRUCT          reduce using rule 131 (type_qualifier -> VOLATILE .)
    UNION           reduce using rule 131 (type_qualifier -> VOLATILE .)
    CLASS           reduce using rule 131 (type_qualifier -> VOLATILE .)
    SEMICOLON       reduce using rule 131 (type_qualifier -> VOLATILE .)
    MULTOP          reduce using rule 131 (type_qualifier -> VOLATILE .)
    IDENTIFIER      reduce using rule 131 (type_qualifier -> VOLATILE .)
    LRPAREN         reduce using rule 131 (type_qualifier -> VOLATILE .)
    LSPAREN         reduce using rule 131 (type_qualifier -> VOLATILE .)
    COMMA           reduce using rule 131 (type_qualifier -> VOLATILE .)
    RRPAREN         reduce using rule 131 (type_qualifier -> VOLATILE .)
    COLON           reduce using rule 131 (type_qualifier -> VOLATILE .)


state 31

    (141) pointer -> MULTOP .
    (142) pointer -> MULTOP . type_qualifier_list
    (143) pointer -> MULTOP . pointer
    (144) pointer -> MULTOP . type_qualifier_list pointer
    (145) type_qualifier_list -> . type_qualifier
    (146) type_qualifier_list -> . type_qualifier_list type_qualifier
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE

    IDENTIFIER      reduce using rule 141 (pointer -> MULTOP .)
    LRPAREN         reduce using rule 141 (pointer -> MULTOP .)
    LSPAREN         reduce using rule 141 (pointer -> MULTOP .)
    COMMA           reduce using rule 141 (pointer -> MULTOP .)
    RRPAREN         reduce using rule 141 (pointer -> MULTOP .)
    MULTOP          shift and go to state 31
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30

    type_qualifier_list            shift and go to state 55
    pointer                        shift and go to state 56
    type_qualifier                 shift and go to state 57

state 32

    (134) direct_declarator -> IDENTIFIER .

    LSPAREN         reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    LRPAREN         reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    LCPAREN         reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    TYPEDEF         reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    EXTERN          reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    STATIC          reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    AUTO            reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    REGISTER        reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    VOID            reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    CHAR            reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    SHORT           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    INT             reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    LONG            reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    FLOAT           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    DOUBLE          reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    SIGNED          reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    UNSIGNED        reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    CONST           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    VOLATILE        reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    ENUM            reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    STRUCT          reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    UNION           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    CLASS           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    EQUAL           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    SEMICOLON       reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    COMMA           reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    RRPAREN         reduce using rule 134 (direct_declarator -> IDENTIFIER .)
    COLON           reduce using rule 134 (direct_declarator -> IDENTIFIER .)


state 33

    (135) direct_declarator -> LRPAREN . declarator RRPAREN
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    declarator                     shift and go to state 58
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12

state 34

    (105) struct_or_union_specifier -> struct_or_union . IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> struct_or_union . LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> struct_or_union . IDENTIFIER

    IDENTIFIER      shift and go to state 59
    LCPAREN         shift and go to state 60


state 35

    (123) enum_specifier -> ENUM . LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> ENUM . IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> ENUM . IDENTIFIER

    LCPAREN         shift and go to state 61
    IDENTIFIER      shift and go to state 62


state 36

    (108) struct_or_union -> STRUCT .

    IDENTIFIER      reduce using rule 108 (struct_or_union -> STRUCT .)
    LCPAREN         reduce using rule 108 (struct_or_union -> STRUCT .)


state 37

    (109) struct_or_union -> UNION .

    IDENTIFIER      reduce using rule 109 (struct_or_union -> UNION .)
    LCPAREN         reduce using rule 109 (struct_or_union -> UNION .)


state 38

    (110) struct_or_union -> CLASS .

    IDENTIFIER      reduce using rule 110 (struct_or_union -> CLASS .)
    LCPAREN         reduce using rule 110 (struct_or_union -> CLASS .)


state 39

    (207) translation_unit -> translation_unit external_declaration .

    TYPEDEF         reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    EXTERN          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    STATIC          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    AUTO            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    REGISTER        reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    VOID            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    CHAR            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    SHORT           reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    INT             reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    LONG            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    FLOAT           reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    DOUBLE          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    SIGNED          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    UNSIGNED        reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    CONST           reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    VOLATILE        reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    MULTOP          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    IDENTIFIER      reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    LRPAREN         reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    ENUM            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    STRUCT          reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    UNION           reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    CLASS           reduce using rule 207 (translation_unit -> translation_unit external_declaration .)
    $end            reduce using rule 207 (translation_unit -> translation_unit external_declaration .)


state 40

    (210) function_definition -> declaration_specifiers declarator . declaration_list compound_statement
    (211) function_definition -> declaration_specifiers declarator . compound_statement
    (87) init_declarator -> declarator .
    (88) init_declarator -> declarator . EQUAL initializer
    (188) declaration_list -> . declaration
    (189) declaration_list -> . declaration_list declaration
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    SEMICOLON       reduce using rule 87 (init_declarator -> declarator .)
    COMMA           reduce using rule 87 (init_declarator -> declarator .)
    EQUAL           shift and go to state 65
    LCPAREN         shift and go to state 47
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    declaration_specifiers         shift and go to state 48
    declaration_list               shift and go to state 63
    compound_statement             shift and go to state 64
    declaration                    shift and go to state 46
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 41

    (77) declaration -> declaration_specifiers SEMICOLON .

    TYPEDEF         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    EXTERN          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    STATIC          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    AUTO            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    REGISTER        reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    VOID            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    CHAR            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SHORT           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    INT             reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    LONG            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    FLOAT           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    DOUBLE          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SIGNED          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    UNSIGNED        reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    CONST           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    VOLATILE        reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    MULTOP          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    IDENTIFIER      reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    LRPAREN         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    ENUM            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    STRUCT          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    UNION           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    CLASS           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    $end            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    LCPAREN         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    RCPAREN         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    CASE            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    DEFAULT         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SEMICOLON       reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    IF              reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SWITCH          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    WHILE           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    DO              reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    FOR             reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    GOTO            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    CONTINUE        reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    BREAK           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    RETURN          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    INC_OP          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    DEC_OP          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SIZEOF          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    BANDOP          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    PLUSOP          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    MINUSOP         reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    BNOP            reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    NOTSYM          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    NUMBER          reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    STRING_LITERAL  reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)
    SCHAR           reduce using rule 77 (declaration -> declaration_specifiers SEMICOLON .)


state 42

    (78) declaration -> declaration_specifiers init_declarator_list . SEMICOLON
    (86) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMICOLON       shift and go to state 66
    COMMA           shift and go to state 67


state 43

    (85) init_declarator_list -> init_declarator .

    SEMICOLON       reduce using rule 85 (init_declarator_list -> init_declarator .)
    COMMA           reduce using rule 85 (init_declarator_list -> init_declarator .)


state 44

    (212) function_definition -> declarator declaration_list . compound_statement
    (189) declaration_list -> declaration_list . declaration
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    LCPAREN         shift and go to state 47
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    compound_statement             shift and go to state 68
    declaration                    shift and go to state 69
    declaration_specifiers         shift and go to state 48
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 45

    (213) function_definition -> declarator compound_statement .

    TYPEDEF         reduce using rule 213 (function_definition -> declarator compound_statement .)
    EXTERN          reduce using rule 213 (function_definition -> declarator compound_statement .)
    STATIC          reduce using rule 213 (function_definition -> declarator compound_statement .)
    AUTO            reduce using rule 213 (function_definition -> declarator compound_statement .)
    REGISTER        reduce using rule 213 (function_definition -> declarator compound_statement .)
    VOID            reduce using rule 213 (function_definition -> declarator compound_statement .)
    CHAR            reduce using rule 213 (function_definition -> declarator compound_statement .)
    SHORT           reduce using rule 213 (function_definition -> declarator compound_statement .)
    INT             reduce using rule 213 (function_definition -> declarator compound_statement .)
    LONG            reduce using rule 213 (function_definition -> declarator compound_statement .)
    FLOAT           reduce using rule 213 (function_definition -> declarator compound_statement .)
    DOUBLE          reduce using rule 213 (function_definition -> declarator compound_statement .)
    SIGNED          reduce using rule 213 (function_definition -> declarator compound_statement .)
    UNSIGNED        reduce using rule 213 (function_definition -> declarator compound_statement .)
    CONST           reduce using rule 213 (function_definition -> declarator compound_statement .)
    VOLATILE        reduce using rule 213 (function_definition -> declarator compound_statement .)
    MULTOP          reduce using rule 213 (function_definition -> declarator compound_statement .)
    IDENTIFIER      reduce using rule 213 (function_definition -> declarator compound_statement .)
    LRPAREN         reduce using rule 213 (function_definition -> declarator compound_statement .)
    ENUM            reduce using rule 213 (function_definition -> declarator compound_statement .)
    STRUCT          reduce using rule 213 (function_definition -> declarator compound_statement .)
    UNION           reduce using rule 213 (function_definition -> declarator compound_statement .)
    CLASS           reduce using rule 213 (function_definition -> declarator compound_statement .)
    $end            reduce using rule 213 (function_definition -> declarator compound_statement .)


state 46

    (188) declaration_list -> declaration .

    LCPAREN         reduce using rule 188 (declaration_list -> declaration .)
    TYPEDEF         reduce using rule 188 (declaration_list -> declaration .)
    EXTERN          reduce using rule 188 (declaration_list -> declaration .)
    STATIC          reduce using rule 188 (declaration_list -> declaration .)
    AUTO            reduce using rule 188 (declaration_list -> declaration .)
    REGISTER        reduce using rule 188 (declaration_list -> declaration .)
    VOID            reduce using rule 188 (declaration_list -> declaration .)
    CHAR            reduce using rule 188 (declaration_list -> declaration .)
    SHORT           reduce using rule 188 (declaration_list -> declaration .)
    INT             reduce using rule 188 (declaration_list -> declaration .)
    LONG            reduce using rule 188 (declaration_list -> declaration .)
    FLOAT           reduce using rule 188 (declaration_list -> declaration .)
    DOUBLE          reduce using rule 188 (declaration_list -> declaration .)
    SIGNED          reduce using rule 188 (declaration_list -> declaration .)
    UNSIGNED        reduce using rule 188 (declaration_list -> declaration .)
    CONST           reduce using rule 188 (declaration_list -> declaration .)
    VOLATILE        reduce using rule 188 (declaration_list -> declaration .)
    ENUM            reduce using rule 188 (declaration_list -> declaration .)
    STRUCT          reduce using rule 188 (declaration_list -> declaration .)
    UNION           reduce using rule 188 (declaration_list -> declaration .)
    CLASS           reduce using rule 188 (declaration_list -> declaration .)
    RCPAREN         reduce using rule 188 (declaration_list -> declaration .)
    IDENTIFIER      reduce using rule 188 (declaration_list -> declaration .)
    CASE            reduce using rule 188 (declaration_list -> declaration .)
    DEFAULT         reduce using rule 188 (declaration_list -> declaration .)
    SEMICOLON       reduce using rule 188 (declaration_list -> declaration .)
    IF              reduce using rule 188 (declaration_list -> declaration .)
    SWITCH          reduce using rule 188 (declaration_list -> declaration .)
    WHILE           reduce using rule 188 (declaration_list -> declaration .)
    DO              reduce using rule 188 (declaration_list -> declaration .)
    FOR             reduce using rule 188 (declaration_list -> declaration .)
    GOTO            reduce using rule 188 (declaration_list -> declaration .)
    CONTINUE        reduce using rule 188 (declaration_list -> declaration .)
    BREAK           reduce using rule 188 (declaration_list -> declaration .)
    RETURN          reduce using rule 188 (declaration_list -> declaration .)
    INC_OP          reduce using rule 188 (declaration_list -> declaration .)
    DEC_OP          reduce using rule 188 (declaration_list -> declaration .)
    SIZEOF          reduce using rule 188 (declaration_list -> declaration .)
    BANDOP          reduce using rule 188 (declaration_list -> declaration .)
    MULTOP          reduce using rule 188 (declaration_list -> declaration .)
    PLUSOP          reduce using rule 188 (declaration_list -> declaration .)
    MINUSOP         reduce using rule 188 (declaration_list -> declaration .)
    BNOP            reduce using rule 188 (declaration_list -> declaration .)
    NOTSYM          reduce using rule 188 (declaration_list -> declaration .)
    NUMBER          reduce using rule 188 (declaration_list -> declaration .)
    STRING_LITERAL  reduce using rule 188 (declaration_list -> declaration .)
    SCHAR           reduce using rule 188 (declaration_list -> declaration .)
    LRPAREN         reduce using rule 188 (declaration_list -> declaration .)


state 47

    (184) compound_statement -> LCPAREN . RCPAREN
    (185) compound_statement -> LCPAREN . statement_list RCPAREN
    (186) compound_statement -> LCPAREN . declaration_list RCPAREN
    (187) compound_statement -> LCPAREN . declaration_list statement_list RCPAREN
    (190) statement_list -> . statement
    (191) statement_list -> . statement_list statement
    (188) declaration_list -> . declaration
    (189) declaration_list -> . declaration_list declaration
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RCPAREN         shift and go to state 70
    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement_list                 shift and go to state 71
    declaration_list               shift and go to state 72
    statement                      shift and go to state 73
    declaration                    shift and go to state 46
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    declaration_specifiers         shift and go to state 48
    expression                     shift and go to state 84
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    assignment_expression          shift and go to state 95
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    struct_or_union                shift and go to state 34
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 48

    (77) declaration -> declaration_specifiers . SEMICOLON
    (78) declaration -> declaration_specifiers . init_declarator_list SEMICOLON
    (85) init_declarator_list -> . init_declarator
    (86) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (87) init_declarator -> . declarator
    (88) init_declarator -> . declarator EQUAL initializer
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    SEMICOLON       shift and go to state 41
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    init_declarator_list           shift and go to state 42
    init_declarator                shift and go to state 43
    declarator                     shift and go to state 124
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12

state 49

    (80) declaration_specifiers -> storage_class_specifier declaration_specifiers .

    SEMICOLON       reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    MULTOP          reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    LRPAREN         reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    LSPAREN         reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    COMMA           reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    RRPAREN         reduce using rule 80 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)


state 50

    (82) declaration_specifiers -> type_specifier declaration_specifiers .

    SEMICOLON       reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    MULTOP          reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    LRPAREN         reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    LSPAREN         reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    COMMA           reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)
    RRPAREN         reduce using rule 82 (declaration_specifiers -> type_specifier declaration_specifiers .)


state 51

    (84) declaration_specifiers -> type_qualifier declaration_specifiers .

    SEMICOLON       reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    MULTOP          reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    LRPAREN         reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    LSPAREN         reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    COMMA           reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    RRPAREN         reduce using rule 84 (declaration_specifiers -> type_qualifier declaration_specifiers .)


state 52

    (132) declarator -> pointer direct_declarator .
    (136) direct_declarator -> direct_declarator . LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> direct_declarator . LSPAREN RSPAREN
    (138) direct_declarator -> direct_declarator . LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> direct_declarator . LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> direct_declarator . LRPAREN RRPAREN

    LCPAREN         reduce using rule 132 (declarator -> pointer direct_declarator .)
    TYPEDEF         reduce using rule 132 (declarator -> pointer direct_declarator .)
    EXTERN          reduce using rule 132 (declarator -> pointer direct_declarator .)
    STATIC          reduce using rule 132 (declarator -> pointer direct_declarator .)
    AUTO            reduce using rule 132 (declarator -> pointer direct_declarator .)
    REGISTER        reduce using rule 132 (declarator -> pointer direct_declarator .)
    VOID            reduce using rule 132 (declarator -> pointer direct_declarator .)
    CHAR            reduce using rule 132 (declarator -> pointer direct_declarator .)
    SHORT           reduce using rule 132 (declarator -> pointer direct_declarator .)
    INT             reduce using rule 132 (declarator -> pointer direct_declarator .)
    LONG            reduce using rule 132 (declarator -> pointer direct_declarator .)
    FLOAT           reduce using rule 132 (declarator -> pointer direct_declarator .)
    DOUBLE          reduce using rule 132 (declarator -> pointer direct_declarator .)
    SIGNED          reduce using rule 132 (declarator -> pointer direct_declarator .)
    UNSIGNED        reduce using rule 132 (declarator -> pointer direct_declarator .)
    CONST           reduce using rule 132 (declarator -> pointer direct_declarator .)
    VOLATILE        reduce using rule 132 (declarator -> pointer direct_declarator .)
    ENUM            reduce using rule 132 (declarator -> pointer direct_declarator .)
    STRUCT          reduce using rule 132 (declarator -> pointer direct_declarator .)
    UNION           reduce using rule 132 (declarator -> pointer direct_declarator .)
    CLASS           reduce using rule 132 (declarator -> pointer direct_declarator .)
    EQUAL           reduce using rule 132 (declarator -> pointer direct_declarator .)
    SEMICOLON       reduce using rule 132 (declarator -> pointer direct_declarator .)
    COMMA           reduce using rule 132 (declarator -> pointer direct_declarator .)
    RRPAREN         reduce using rule 132 (declarator -> pointer direct_declarator .)
    COLON           reduce using rule 132 (declarator -> pointer direct_declarator .)
    LSPAREN         shift and go to state 53
    LRPAREN         shift and go to state 54


state 53

    (136) direct_declarator -> direct_declarator LSPAREN . constant_expression RSPAREN
    (137) direct_declarator -> direct_declarator LSPAREN . RSPAREN
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    RSPAREN         shift and go to state 126
    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 125
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 54

    (138) direct_declarator -> direct_declarator LRPAREN . parameter_type_list RRPAREN
    (139) direct_declarator -> direct_declarator LRPAREN . identifier_list RRPAREN
    (140) direct_declarator -> direct_declarator LRPAREN . RRPAREN
    (147) parameter_type_list -> . parameter_list
    (148) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (154) identifier_list -> . IDENTIFIER
    (155) identifier_list -> . identifier_list COMMA IDENTIFIER
    (149) parameter_list -> . parameter_declaration
    (150) parameter_list -> . parameter_list COMMA parameter_declaration
    (151) parameter_declaration -> . declaration_specifiers declarator
    (152) parameter_declaration -> . declaration_specifiers abstract_declarator
    (153) parameter_declaration -> . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RRPAREN         shift and go to state 132
    IDENTIFIER      shift and go to state 135
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    parameter_type_list            shift and go to state 131
    identifier_list                shift and go to state 133
    parameter_list                 shift and go to state 134
    parameter_declaration          shift and go to state 136
    declaration_specifiers         shift and go to state 137
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 55

    (142) pointer -> MULTOP type_qualifier_list .
    (144) pointer -> MULTOP type_qualifier_list . pointer
    (146) type_qualifier_list -> type_qualifier_list . type_qualifier
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE

    IDENTIFIER      reduce using rule 142 (pointer -> MULTOP type_qualifier_list .)
    LRPAREN         reduce using rule 142 (pointer -> MULTOP type_qualifier_list .)
    LSPAREN         reduce using rule 142 (pointer -> MULTOP type_qualifier_list .)
    COMMA           reduce using rule 142 (pointer -> MULTOP type_qualifier_list .)
    RRPAREN         reduce using rule 142 (pointer -> MULTOP type_qualifier_list .)
    MULTOP          shift and go to state 31
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30

    pointer                        shift and go to state 138
    type_qualifier                 shift and go to state 139

state 56

    (143) pointer -> MULTOP pointer .

    IDENTIFIER      reduce using rule 143 (pointer -> MULTOP pointer .)
    LRPAREN         reduce using rule 143 (pointer -> MULTOP pointer .)
    LSPAREN         reduce using rule 143 (pointer -> MULTOP pointer .)
    COMMA           reduce using rule 143 (pointer -> MULTOP pointer .)
    RRPAREN         reduce using rule 143 (pointer -> MULTOP pointer .)


state 57

    (145) type_qualifier_list -> type_qualifier .

    MULTOP          reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    CONST           reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    VOLATILE        reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    LRPAREN         reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    LSPAREN         reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    COMMA           reduce using rule 145 (type_qualifier_list -> type_qualifier .)
    RRPAREN         reduce using rule 145 (type_qualifier_list -> type_qualifier .)


state 58

    (135) direct_declarator -> LRPAREN declarator . RRPAREN

    RRPAREN         shift and go to state 140


state 59

    (105) struct_or_union_specifier -> struct_or_union IDENTIFIER . LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> struct_or_union IDENTIFIER .

    LCPAREN         shift and go to state 141
    TYPEDEF         reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    EXTERN          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    STATIC          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    AUTO            reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    REGISTER        reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    VOID            reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    CHAR            reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    SHORT           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    INT             reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    LONG            reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    FLOAT           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    DOUBLE          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    SIGNED          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    UNSIGNED        reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    CONST           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    VOLATILE        reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    ENUM            reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    STRUCT          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    UNION           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    CLASS           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    SEMICOLON       reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    MULTOP          reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    IDENTIFIER      reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    LRPAREN         reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    LSPAREN         reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    COMMA           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    RRPAREN         reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)
    COLON           reduce using rule 107 (struct_or_union_specifier -> struct_or_union IDENTIFIER .)


state 60

    (106) struct_or_union_specifier -> struct_or_union LCPAREN . struct_declaration_list RCPAREN
    (111) struct_declaration_list -> . struct_declaration
    (112) struct_declaration_list -> . struct_declaration_list struct_declaration
    (113) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMICOLON
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    struct_or_union                shift and go to state 34
    struct_declaration_list        shift and go to state 142
    struct_declaration             shift and go to state 143
    specifier_qualifier_list       shift and go to state 144
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 61

    (123) enum_specifier -> ENUM LCPAREN . enumerator_list RCPAREN
    (126) enumerator_list -> . enumerator
    (127) enumerator_list -> . enumerator_list COMMA enumerator
    (128) enumerator -> . IDENTIFIER
    (129) enumerator -> . IDENTIFIER EQUAL constant_expression

    IDENTIFIER      shift and go to state 149

    enumerator_list                shift and go to state 147
    enumerator                     shift and go to state 148

state 62

    (124) enum_specifier -> ENUM IDENTIFIER . LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> ENUM IDENTIFIER .

    LCPAREN         shift and go to state 150
    TYPEDEF         reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    EXTERN          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    STATIC          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    AUTO            reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    REGISTER        reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    VOID            reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    CHAR            reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    SHORT           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    INT             reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    LONG            reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    FLOAT           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    DOUBLE          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    SIGNED          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    UNSIGNED        reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    CONST           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    VOLATILE        reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    ENUM            reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    STRUCT          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    UNION           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    CLASS           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    SEMICOLON       reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    MULTOP          reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    IDENTIFIER      reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    LRPAREN         reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    LSPAREN         reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    COMMA           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    RRPAREN         reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)
    COLON           reduce using rule 125 (enum_specifier -> ENUM IDENTIFIER .)


state 63

    (210) function_definition -> declaration_specifiers declarator declaration_list . compound_statement
    (189) declaration_list -> declaration_list . declaration
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    LCPAREN         shift and go to state 47
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    declaration_specifiers         shift and go to state 48
    compound_statement             shift and go to state 151
    declaration                    shift and go to state 69
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 64

    (211) function_definition -> declaration_specifiers declarator compound_statement .

    TYPEDEF         reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    EXTERN          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    STATIC          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    AUTO            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    REGISTER        reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOID            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    CHAR            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    SHORT           reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    INT             reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    LONG            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    FLOAT           reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    DOUBLE          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    SIGNED          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNSIGNED        reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    CONST           reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOLATILE        reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    MULTOP          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    IDENTIFIER      reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    LRPAREN         reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    ENUM            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    STRUCT          reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNION           reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    CLASS           reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)
    $end            reduce using rule 211 (function_definition -> declaration_specifiers declarator compound_statement .)


state 65

    (88) init_declarator -> declarator EQUAL . initializer
    (170) initializer -> . assignment_expression
    (171) initializer -> . LCPAREN initializer_list RCPAREN
    (172) initializer -> . LCPAREN initializer_list COMMA RCPAREN
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    LCPAREN         shift and go to state 154
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    initializer                    shift and go to state 152
    assignment_expression          shift and go to state 153
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 66

    (78) declaration -> declaration_specifiers init_declarator_list SEMICOLON .

    TYPEDEF         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    EXTERN          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    STATIC          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    AUTO            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    REGISTER        reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    VOID            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    CHAR            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SHORT           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    INT             reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    LONG            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    FLOAT           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    DOUBLE          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SIGNED          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    UNSIGNED        reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    CONST           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    VOLATILE        reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    MULTOP          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    LRPAREN         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    ENUM            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    STRUCT          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    UNION           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    CLASS           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    $end            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    LCPAREN         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    RCPAREN         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    CASE            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    DEFAULT         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SEMICOLON       reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    IF              reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SWITCH          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    WHILE           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    DO              reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    FOR             reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    GOTO            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    CONTINUE        reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    BREAK           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    RETURN          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    INC_OP          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    DEC_OP          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SIZEOF          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    BANDOP          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    PLUSOP          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    MINUSOP         reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    BNOP            reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    NOTSYM          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    NUMBER          reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)
    SCHAR           reduce using rule 78 (declaration -> declaration_specifiers init_declarator_list SEMICOLON .)


state 67

    (86) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (87) init_declarator -> . declarator
    (88) init_declarator -> . declarator EQUAL initializer
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    init_declarator                shift and go to state 155
    declarator                     shift and go to state 124
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12

state 68

    (212) function_definition -> declarator declaration_list compound_statement .

    TYPEDEF         reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    STATIC          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    AUTO            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    VOID            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    CHAR            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    SHORT           reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    INT             reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    LONG            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    CONST           reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    MULTOP          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    LRPAREN         reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    ENUM            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    UNION           reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    CLASS           reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)
    $end            reduce using rule 212 (function_definition -> declarator declaration_list compound_statement .)


state 69

    (189) declaration_list -> declaration_list declaration .

    LCPAREN         reduce using rule 189 (declaration_list -> declaration_list declaration .)
    TYPEDEF         reduce using rule 189 (declaration_list -> declaration_list declaration .)
    EXTERN          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    STATIC          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    AUTO            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    REGISTER        reduce using rule 189 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    CHAR            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SHORT           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 189 (declaration_list -> declaration_list declaration .)
    LONG            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SIGNED          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    UNSIGNED        reduce using rule 189 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    VOLATILE        reduce using rule 189 (declaration_list -> declaration_list declaration .)
    ENUM            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    STRUCT          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    UNION           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    CLASS           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    RCPAREN         reduce using rule 189 (declaration_list -> declaration_list declaration .)
    IDENTIFIER      reduce using rule 189 (declaration_list -> declaration_list declaration .)
    CASE            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    DEFAULT         reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SEMICOLON       reduce using rule 189 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SWITCH          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    DO              reduce using rule 189 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 189 (declaration_list -> declaration_list declaration .)
    GOTO            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    CONTINUE        reduce using rule 189 (declaration_list -> declaration_list declaration .)
    BREAK           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    INC_OP          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    DEC_OP          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SIZEOF          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    BANDOP          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    MULTOP          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    PLUSOP          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    MINUSOP         reduce using rule 189 (declaration_list -> declaration_list declaration .)
    BNOP            reduce using rule 189 (declaration_list -> declaration_list declaration .)
    NOTSYM          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 189 (declaration_list -> declaration_list declaration .)
    STRING_LITERAL  reduce using rule 189 (declaration_list -> declaration_list declaration .)
    SCHAR           reduce using rule 189 (declaration_list -> declaration_list declaration .)
    LRPAREN         reduce using rule 189 (declaration_list -> declaration_list declaration .)


state 70

    (184) compound_statement -> LCPAREN RCPAREN .

    TYPEDEF         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    EXTERN          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    STATIC          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    AUTO            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    REGISTER        reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    VOID            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    CHAR            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SHORT           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    INT             reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    LONG            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    FLOAT           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    DOUBLE          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SIGNED          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    UNSIGNED        reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    CONST           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    VOLATILE        reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    MULTOP          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    IDENTIFIER      reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    LRPAREN         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    ENUM            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    STRUCT          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    UNION           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    CLASS           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    $end            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    RCPAREN         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    CASE            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    DEFAULT         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    LCPAREN         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SEMICOLON       reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    IF              reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SWITCH          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    WHILE           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    DO              reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    FOR             reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    GOTO            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    CONTINUE        reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    BREAK           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    RETURN          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    INC_OP          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    DEC_OP          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SIZEOF          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    BANDOP          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    PLUSOP          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    MINUSOP         reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    BNOP            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    NOTSYM          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    NUMBER          reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    STRING_LITERAL  reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    SCHAR           reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)
    ELSE            reduce using rule 184 (compound_statement -> LCPAREN RCPAREN .)


state 71

    (185) compound_statement -> LCPAREN statement_list . RCPAREN
    (191) statement_list -> statement_list . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RCPAREN         shift and go to state 156
    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 157
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 72

    (186) compound_statement -> LCPAREN declaration_list . RCPAREN
    (187) compound_statement -> LCPAREN declaration_list . statement_list RCPAREN
    (189) declaration_list -> declaration_list . declaration
    (190) statement_list -> . statement
    (191) statement_list -> . statement_list statement
    (77) declaration -> . declaration_specifiers SEMICOLON
    (78) declaration -> . declaration_specifiers init_declarator_list SEMICOLON
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RCPAREN         shift and go to state 158
    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement_list                 shift and go to state 159
    declaration                    shift and go to state 69
    statement                      shift and go to state 73
    declaration_specifiers         shift and go to state 48
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    expression                     shift and go to state 84
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    assignment_expression          shift and go to state 95
    struct_or_union                shift and go to state 34
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 73

    (190) statement_list -> statement .

    RCPAREN         reduce using rule 190 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 190 (statement_list -> statement .)
    CASE            reduce using rule 190 (statement_list -> statement .)
    DEFAULT         reduce using rule 190 (statement_list -> statement .)
    LCPAREN         reduce using rule 190 (statement_list -> statement .)
    SEMICOLON       reduce using rule 190 (statement_list -> statement .)
    IF              reduce using rule 190 (statement_list -> statement .)
    SWITCH          reduce using rule 190 (statement_list -> statement .)
    WHILE           reduce using rule 190 (statement_list -> statement .)
    DO              reduce using rule 190 (statement_list -> statement .)
    FOR             reduce using rule 190 (statement_list -> statement .)
    GOTO            reduce using rule 190 (statement_list -> statement .)
    CONTINUE        reduce using rule 190 (statement_list -> statement .)
    BREAK           reduce using rule 190 (statement_list -> statement .)
    RETURN          reduce using rule 190 (statement_list -> statement .)
    INC_OP          reduce using rule 190 (statement_list -> statement .)
    DEC_OP          reduce using rule 190 (statement_list -> statement .)
    SIZEOF          reduce using rule 190 (statement_list -> statement .)
    BANDOP          reduce using rule 190 (statement_list -> statement .)
    MULTOP          reduce using rule 190 (statement_list -> statement .)
    PLUSOP          reduce using rule 190 (statement_list -> statement .)
    MINUSOP         reduce using rule 190 (statement_list -> statement .)
    BNOP            reduce using rule 190 (statement_list -> statement .)
    NOTSYM          reduce using rule 190 (statement_list -> statement .)
    NUMBER          reduce using rule 190 (statement_list -> statement .)
    STRING_LITERAL  reduce using rule 190 (statement_list -> statement .)
    SCHAR           reduce using rule 190 (statement_list -> statement .)
    LRPAREN         reduce using rule 190 (statement_list -> statement .)


state 74

    (175) statement -> labeled_statement .

    RCPAREN         reduce using rule 175 (statement -> labeled_statement .)
    IDENTIFIER      reduce using rule 175 (statement -> labeled_statement .)
    CASE            reduce using rule 175 (statement -> labeled_statement .)
    DEFAULT         reduce using rule 175 (statement -> labeled_statement .)
    LCPAREN         reduce using rule 175 (statement -> labeled_statement .)
    SEMICOLON       reduce using rule 175 (statement -> labeled_statement .)
    IF              reduce using rule 175 (statement -> labeled_statement .)
    SWITCH          reduce using rule 175 (statement -> labeled_statement .)
    WHILE           reduce using rule 175 (statement -> labeled_statement .)
    DO              reduce using rule 175 (statement -> labeled_statement .)
    FOR             reduce using rule 175 (statement -> labeled_statement .)
    GOTO            reduce using rule 175 (statement -> labeled_statement .)
    CONTINUE        reduce using rule 175 (statement -> labeled_statement .)
    BREAK           reduce using rule 175 (statement -> labeled_statement .)
    RETURN          reduce using rule 175 (statement -> labeled_statement .)
    INC_OP          reduce using rule 175 (statement -> labeled_statement .)
    DEC_OP          reduce using rule 175 (statement -> labeled_statement .)
    SIZEOF          reduce using rule 175 (statement -> labeled_statement .)
    BANDOP          reduce using rule 175 (statement -> labeled_statement .)
    MULTOP          reduce using rule 175 (statement -> labeled_statement .)
    PLUSOP          reduce using rule 175 (statement -> labeled_statement .)
    MINUSOP         reduce using rule 175 (statement -> labeled_statement .)
    BNOP            reduce using rule 175 (statement -> labeled_statement .)
    NOTSYM          reduce using rule 175 (statement -> labeled_statement .)
    NUMBER          reduce using rule 175 (statement -> labeled_statement .)
    STRING_LITERAL  reduce using rule 175 (statement -> labeled_statement .)
    SCHAR           reduce using rule 175 (statement -> labeled_statement .)
    LRPAREN         reduce using rule 175 (statement -> labeled_statement .)
    ELSE            reduce using rule 175 (statement -> labeled_statement .)


state 75

    (176) statement -> compound_statement .

    RCPAREN         reduce using rule 176 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 176 (statement -> compound_statement .)
    CASE            reduce using rule 176 (statement -> compound_statement .)
    DEFAULT         reduce using rule 176 (statement -> compound_statement .)
    LCPAREN         reduce using rule 176 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 176 (statement -> compound_statement .)
    IF              reduce using rule 176 (statement -> compound_statement .)
    SWITCH          reduce using rule 176 (statement -> compound_statement .)
    WHILE           reduce using rule 176 (statement -> compound_statement .)
    DO              reduce using rule 176 (statement -> compound_statement .)
    FOR             reduce using rule 176 (statement -> compound_statement .)
    GOTO            reduce using rule 176 (statement -> compound_statement .)
    CONTINUE        reduce using rule 176 (statement -> compound_statement .)
    BREAK           reduce using rule 176 (statement -> compound_statement .)
    RETURN          reduce using rule 176 (statement -> compound_statement .)
    INC_OP          reduce using rule 176 (statement -> compound_statement .)
    DEC_OP          reduce using rule 176 (statement -> compound_statement .)
    SIZEOF          reduce using rule 176 (statement -> compound_statement .)
    BANDOP          reduce using rule 176 (statement -> compound_statement .)
    MULTOP          reduce using rule 176 (statement -> compound_statement .)
    PLUSOP          reduce using rule 176 (statement -> compound_statement .)
    MINUSOP         reduce using rule 176 (statement -> compound_statement .)
    BNOP            reduce using rule 176 (statement -> compound_statement .)
    NOTSYM          reduce using rule 176 (statement -> compound_statement .)
    NUMBER          reduce using rule 176 (statement -> compound_statement .)
    STRING_LITERAL  reduce using rule 176 (statement -> compound_statement .)
    SCHAR           reduce using rule 176 (statement -> compound_statement .)
    LRPAREN         reduce using rule 176 (statement -> compound_statement .)
    ELSE            reduce using rule 176 (statement -> compound_statement .)


state 76

    (177) statement -> expression_statement .

    RCPAREN         reduce using rule 177 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 177 (statement -> expression_statement .)
    CASE            reduce using rule 177 (statement -> expression_statement .)
    DEFAULT         reduce using rule 177 (statement -> expression_statement .)
    LCPAREN         reduce using rule 177 (statement -> expression_statement .)
    SEMICOLON       reduce using rule 177 (statement -> expression_statement .)
    IF              reduce using rule 177 (statement -> expression_statement .)
    SWITCH          reduce using rule 177 (statement -> expression_statement .)
    WHILE           reduce using rule 177 (statement -> expression_statement .)
    DO              reduce using rule 177 (statement -> expression_statement .)
    FOR             reduce using rule 177 (statement -> expression_statement .)
    GOTO            reduce using rule 177 (statement -> expression_statement .)
    CONTINUE        reduce using rule 177 (statement -> expression_statement .)
    BREAK           reduce using rule 177 (statement -> expression_statement .)
    RETURN          reduce using rule 177 (statement -> expression_statement .)
    INC_OP          reduce using rule 177 (statement -> expression_statement .)
    DEC_OP          reduce using rule 177 (statement -> expression_statement .)
    SIZEOF          reduce using rule 177 (statement -> expression_statement .)
    BANDOP          reduce using rule 177 (statement -> expression_statement .)
    MULTOP          reduce using rule 177 (statement -> expression_statement .)
    PLUSOP          reduce using rule 177 (statement -> expression_statement .)
    MINUSOP         reduce using rule 177 (statement -> expression_statement .)
    BNOP            reduce using rule 177 (statement -> expression_statement .)
    NOTSYM          reduce using rule 177 (statement -> expression_statement .)
    NUMBER          reduce using rule 177 (statement -> expression_statement .)
    STRING_LITERAL  reduce using rule 177 (statement -> expression_statement .)
    SCHAR           reduce using rule 177 (statement -> expression_statement .)
    LRPAREN         reduce using rule 177 (statement -> expression_statement .)
    ELSE            reduce using rule 177 (statement -> expression_statement .)


state 77

    (178) statement -> selection_statement .

    RCPAREN         reduce using rule 178 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 178 (statement -> selection_statement .)
    CASE            reduce using rule 178 (statement -> selection_statement .)
    DEFAULT         reduce using rule 178 (statement -> selection_statement .)
    LCPAREN         reduce using rule 178 (statement -> selection_statement .)
    SEMICOLON       reduce using rule 178 (statement -> selection_statement .)
    IF              reduce using rule 178 (statement -> selection_statement .)
    SWITCH          reduce using rule 178 (statement -> selection_statement .)
    WHILE           reduce using rule 178 (statement -> selection_statement .)
    DO              reduce using rule 178 (statement -> selection_statement .)
    FOR             reduce using rule 178 (statement -> selection_statement .)
    GOTO            reduce using rule 178 (statement -> selection_statement .)
    CONTINUE        reduce using rule 178 (statement -> selection_statement .)
    BREAK           reduce using rule 178 (statement -> selection_statement .)
    RETURN          reduce using rule 178 (statement -> selection_statement .)
    INC_OP          reduce using rule 178 (statement -> selection_statement .)
    DEC_OP          reduce using rule 178 (statement -> selection_statement .)
    SIZEOF          reduce using rule 178 (statement -> selection_statement .)
    BANDOP          reduce using rule 178 (statement -> selection_statement .)
    MULTOP          reduce using rule 178 (statement -> selection_statement .)
    PLUSOP          reduce using rule 178 (statement -> selection_statement .)
    MINUSOP         reduce using rule 178 (statement -> selection_statement .)
    BNOP            reduce using rule 178 (statement -> selection_statement .)
    NOTSYM          reduce using rule 178 (statement -> selection_statement .)
    NUMBER          reduce using rule 178 (statement -> selection_statement .)
    STRING_LITERAL  reduce using rule 178 (statement -> selection_statement .)
    SCHAR           reduce using rule 178 (statement -> selection_statement .)
    LRPAREN         reduce using rule 178 (statement -> selection_statement .)
    ELSE            reduce using rule 178 (statement -> selection_statement .)


state 78

    (179) statement -> iteration_statement .

    RCPAREN         reduce using rule 179 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 179 (statement -> iteration_statement .)
    CASE            reduce using rule 179 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 179 (statement -> iteration_statement .)
    LCPAREN         reduce using rule 179 (statement -> iteration_statement .)
    SEMICOLON       reduce using rule 179 (statement -> iteration_statement .)
    IF              reduce using rule 179 (statement -> iteration_statement .)
    SWITCH          reduce using rule 179 (statement -> iteration_statement .)
    WHILE           reduce using rule 179 (statement -> iteration_statement .)
    DO              reduce using rule 179 (statement -> iteration_statement .)
    FOR             reduce using rule 179 (statement -> iteration_statement .)
    GOTO            reduce using rule 179 (statement -> iteration_statement .)
    CONTINUE        reduce using rule 179 (statement -> iteration_statement .)
    BREAK           reduce using rule 179 (statement -> iteration_statement .)
    RETURN          reduce using rule 179 (statement -> iteration_statement .)
    INC_OP          reduce using rule 179 (statement -> iteration_statement .)
    DEC_OP          reduce using rule 179 (statement -> iteration_statement .)
    SIZEOF          reduce using rule 179 (statement -> iteration_statement .)
    BANDOP          reduce using rule 179 (statement -> iteration_statement .)
    MULTOP          reduce using rule 179 (statement -> iteration_statement .)
    PLUSOP          reduce using rule 179 (statement -> iteration_statement .)
    MINUSOP         reduce using rule 179 (statement -> iteration_statement .)
    BNOP            reduce using rule 179 (statement -> iteration_statement .)
    NOTSYM          reduce using rule 179 (statement -> iteration_statement .)
    NUMBER          reduce using rule 179 (statement -> iteration_statement .)
    STRING_LITERAL  reduce using rule 179 (statement -> iteration_statement .)
    SCHAR           reduce using rule 179 (statement -> iteration_statement .)
    LRPAREN         reduce using rule 179 (statement -> iteration_statement .)
    ELSE            reduce using rule 179 (statement -> iteration_statement .)


state 79

    (180) statement -> jump_statement .

    RCPAREN         reduce using rule 180 (statement -> jump_statement .)
    IDENTIFIER      reduce using rule 180 (statement -> jump_statement .)
    CASE            reduce using rule 180 (statement -> jump_statement .)
    DEFAULT         reduce using rule 180 (statement -> jump_statement .)
    LCPAREN         reduce using rule 180 (statement -> jump_statement .)
    SEMICOLON       reduce using rule 180 (statement -> jump_statement .)
    IF              reduce using rule 180 (statement -> jump_statement .)
    SWITCH          reduce using rule 180 (statement -> jump_statement .)
    WHILE           reduce using rule 180 (statement -> jump_statement .)
    DO              reduce using rule 180 (statement -> jump_statement .)
    FOR             reduce using rule 180 (statement -> jump_statement .)
    GOTO            reduce using rule 180 (statement -> jump_statement .)
    CONTINUE        reduce using rule 180 (statement -> jump_statement .)
    BREAK           reduce using rule 180 (statement -> jump_statement .)
    RETURN          reduce using rule 180 (statement -> jump_statement .)
    INC_OP          reduce using rule 180 (statement -> jump_statement .)
    DEC_OP          reduce using rule 180 (statement -> jump_statement .)
    SIZEOF          reduce using rule 180 (statement -> jump_statement .)
    BANDOP          reduce using rule 180 (statement -> jump_statement .)
    MULTOP          reduce using rule 180 (statement -> jump_statement .)
    PLUSOP          reduce using rule 180 (statement -> jump_statement .)
    MINUSOP         reduce using rule 180 (statement -> jump_statement .)
    BNOP            reduce using rule 180 (statement -> jump_statement .)
    NOTSYM          reduce using rule 180 (statement -> jump_statement .)
    NUMBER          reduce using rule 180 (statement -> jump_statement .)
    STRING_LITERAL  reduce using rule 180 (statement -> jump_statement .)
    SCHAR           reduce using rule 180 (statement -> jump_statement .)
    LRPAREN         reduce using rule 180 (statement -> jump_statement .)
    ELSE            reduce using rule 180 (statement -> jump_statement .)


state 80

    (192) expression_statement -> SEMICOLON .

    RCPAREN         reduce using rule 192 (expression_statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 192 (expression_statement -> SEMICOLON .)
    CASE            reduce using rule 192 (expression_statement -> SEMICOLON .)
    DEFAULT         reduce using rule 192 (expression_statement -> SEMICOLON .)
    LCPAREN         reduce using rule 192 (expression_statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 192 (expression_statement -> SEMICOLON .)
    IF              reduce using rule 192 (expression_statement -> SEMICOLON .)
    SWITCH          reduce using rule 192 (expression_statement -> SEMICOLON .)
    WHILE           reduce using rule 192 (expression_statement -> SEMICOLON .)
    DO              reduce using rule 192 (expression_statement -> SEMICOLON .)
    FOR             reduce using rule 192 (expression_statement -> SEMICOLON .)
    GOTO            reduce using rule 192 (expression_statement -> SEMICOLON .)
    CONTINUE        reduce using rule 192 (expression_statement -> SEMICOLON .)
    BREAK           reduce using rule 192 (expression_statement -> SEMICOLON .)
    RETURN          reduce using rule 192 (expression_statement -> SEMICOLON .)
    INC_OP          reduce using rule 192 (expression_statement -> SEMICOLON .)
    DEC_OP          reduce using rule 192 (expression_statement -> SEMICOLON .)
    SIZEOF          reduce using rule 192 (expression_statement -> SEMICOLON .)
    BANDOP          reduce using rule 192 (expression_statement -> SEMICOLON .)
    MULTOP          reduce using rule 192 (expression_statement -> SEMICOLON .)
    PLUSOP          reduce using rule 192 (expression_statement -> SEMICOLON .)
    MINUSOP         reduce using rule 192 (expression_statement -> SEMICOLON .)
    BNOP            reduce using rule 192 (expression_statement -> SEMICOLON .)
    NOTSYM          reduce using rule 192 (expression_statement -> SEMICOLON .)
    NUMBER          reduce using rule 192 (expression_statement -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 192 (expression_statement -> SEMICOLON .)
    SCHAR           reduce using rule 192 (expression_statement -> SEMICOLON .)
    LRPAREN         reduce using rule 192 (expression_statement -> SEMICOLON .)
    ELSE            reduce using rule 192 (expression_statement -> SEMICOLON .)
    RRPAREN         reduce using rule 192 (expression_statement -> SEMICOLON .)


state 81

    (181) labeled_statement -> IDENTIFIER . COLON statement
    (2) primary_expression -> IDENTIFIER .

    COLON           shift and go to state 160
    LSPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LRPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DOT             reduce using rule 2 (primary_expression -> IDENTIFIER .)
    PTR_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    INC_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DEC_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    EQUAL           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 2 (primary_expression -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MULTOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DIVOP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MODOP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    PLUSOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MINUSOP         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LEFT_OP         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RIGHT_OP        reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LTCOMP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    GTCOMP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    GE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    EQ_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    NE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    BANDOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    XOROP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    BOROP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    AND_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    QUESMARK        reduce using rule 2 (primary_expression -> IDENTIFIER .)
    OR_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 2 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 2 (primary_expression -> IDENTIFIER .)


state 82

    (182) labeled_statement -> CASE . constant_expression COLON statement
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 161
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 83

    (183) labeled_statement -> DEFAULT . COLON statement

    COLON           shift and go to state 162


state 84

    (193) expression_statement -> expression . SEMICOLON
    (75) expression -> expression . COMMA assignment_expression

    SEMICOLON       shift and go to state 163
    COMMA           shift and go to state 164


state 85

    (194) selection_statement -> IF . LRPAREN expression RRPAREN statement
    (195) selection_statement -> IF . LRPAREN expression RRPAREN statement ELSE statement

    LRPAREN         shift and go to state 165


state 86

    (6) primary_expression -> LRPAREN . expression RRPAREN
    (30) cast_expression -> LRPAREN . type_name RRPAREN cast_expression
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (156) type_name -> . specifier_qualifier_list
    (157) type_name -> . specifier_qualifier_list abstract_declarator
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    ENUM            shift and go to state 35
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    expression                     shift and go to state 166
    type_name                      shift and go to state 167
    cast_expression                shift and go to state 103
    assignment_expression          shift and go to state 95
    specifier_qualifier_list       shift and go to state 168
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    struct_or_union                shift and go to state 34
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 87

    (196) selection_statement -> SWITCH . LRPAREN expression RRPAREN statement

    LRPAREN         shift and go to state 169


state 88

    (197) iteration_statement -> WHILE . LRPAREN expression RRPAREN statement

    LRPAREN         shift and go to state 170


state 89

    (198) iteration_statement -> DO . statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 171
    expression                     shift and go to state 84
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 90

    (199) iteration_statement -> FOR . LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> FOR . LRPAREN expression_statement expression_statement expression RRPAREN statement

    LRPAREN         shift and go to state 172


state 91

    (201) jump_statement -> GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 173


state 92

    (202) jump_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 174


state 93

    (203) jump_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 175


state 94

    (204) jump_statement -> RETURN . SEMICOLON
    (205) jump_statement -> RETURN . expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    SEMICOLON       shift and go to state 176
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 177
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 95

    (74) expression -> assignment_expression .

    SEMICOLON       reduce using rule 74 (expression -> assignment_expression .)
    COMMA           reduce using rule 74 (expression -> assignment_expression .)
    RRPAREN         reduce using rule 74 (expression -> assignment_expression .)
    COLON           reduce using rule 74 (expression -> assignment_expression .)
    RSPAREN         reduce using rule 74 (expression -> assignment_expression .)


state 96

    (61) assignment_expression -> conditional_expression .

    SEMICOLON       reduce using rule 61 (assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 61 (assignment_expression -> conditional_expression .)
    RRPAREN         reduce using rule 61 (assignment_expression -> conditional_expression .)
    RCPAREN         reduce using rule 61 (assignment_expression -> conditional_expression .)
    COLON           reduce using rule 61 (assignment_expression -> conditional_expression .)
    RSPAREN         reduce using rule 61 (assignment_expression -> conditional_expression .)


state 97

    (62) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (29) cast_expression -> unary_expression .
    (63) assignment_operator -> . EQUAL
    (64) assignment_operator -> . MUL_ASSIGN
    (65) assignment_operator -> . DIV_ASSIGN
    (66) assignment_operator -> . MOD_ASSIGN
    (67) assignment_operator -> . ADD_ASSIGN
    (68) assignment_operator -> . SUB_ASSIGN
    (69) assignment_operator -> . LEFT_ASSIGN
    (70) assignment_operator -> . RIGHT_ASSIGN
    (71) assignment_operator -> . AND_ASSIGN
    (72) assignment_operator -> . XOR_ASSIGN
    (73) assignment_operator -> . OR_ASSIGN

    MULTOP          reduce using rule 29 (cast_expression -> unary_expression .)
    DIVOP           reduce using rule 29 (cast_expression -> unary_expression .)
    MODOP           reduce using rule 29 (cast_expression -> unary_expression .)
    PLUSOP          reduce using rule 29 (cast_expression -> unary_expression .)
    MINUSOP         reduce using rule 29 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 29 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 29 (cast_expression -> unary_expression .)
    LTCOMP          reduce using rule 29 (cast_expression -> unary_expression .)
    GTCOMP          reduce using rule 29 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    BANDOP          reduce using rule 29 (cast_expression -> unary_expression .)
    XOROP           reduce using rule 29 (cast_expression -> unary_expression .)
    BOROP           reduce using rule 29 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 29 (cast_expression -> unary_expression .)
    QUESMARK        reduce using rule 29 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    SEMICOLON       reduce using rule 29 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 29 (cast_expression -> unary_expression .)
    RRPAREN         reduce using rule 29 (cast_expression -> unary_expression .)
    RCPAREN         reduce using rule 29 (cast_expression -> unary_expression .)
    COLON           reduce using rule 29 (cast_expression -> unary_expression .)
    RSPAREN         reduce using rule 29 (cast_expression -> unary_expression .)
    EQUAL           shift and go to state 179
    MUL_ASSIGN      shift and go to state 180
    DIV_ASSIGN      shift and go to state 181
    MOD_ASSIGN      shift and go to state 182
    ADD_ASSIGN      shift and go to state 183
    SUB_ASSIGN      shift and go to state 184
    LEFT_ASSIGN     shift and go to state 185
    RIGHT_ASSIGN    shift and go to state 186
    AND_ASSIGN      shift and go to state 187
    XOR_ASSIGN      shift and go to state 188
    OR_ASSIGN       shift and go to state 189

    assignment_operator            shift and go to state 178

state 98

    (59) conditional_expression -> logical_or_expression .
    (60) conditional_expression -> logical_or_expression . QUESMARK expression COLON conditional_expression
    (58) logical_or_expression -> logical_or_expression . OR_OP logical_and_expression

    SEMICOLON       reduce using rule 59 (conditional_expression -> logical_or_expression .)
    COMMA           reduce using rule 59 (conditional_expression -> logical_or_expression .)
    RSPAREN         reduce using rule 59 (conditional_expression -> logical_or_expression .)
    COLON           reduce using rule 59 (conditional_expression -> logical_or_expression .)
    RRPAREN         reduce using rule 59 (conditional_expression -> logical_or_expression .)
    RCPAREN         reduce using rule 59 (conditional_expression -> logical_or_expression .)
    QUESMARK        shift and go to state 190
    OR_OP           shift and go to state 191


state 99

    (17) unary_expression -> postfix_expression .
    (8) postfix_expression -> postfix_expression . LSPAREN expression RSPAREN
    (9) postfix_expression -> postfix_expression . LRPAREN RRPAREN
    (10) postfix_expression -> postfix_expression . LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> postfix_expression . DOT IDENTIFIER
    (12) postfix_expression -> postfix_expression . PTR_OP IDENTIFIER
    (13) postfix_expression -> postfix_expression . INC_OP
    (14) postfix_expression -> postfix_expression . DEC_OP

    EQUAL           reduce using rule 17 (unary_expression -> postfix_expression .)
    MUL_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    DIV_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    MOD_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    ADD_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    SUB_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    LEFT_ASSIGN     reduce using rule 17 (unary_expression -> postfix_expression .)
    RIGHT_ASSIGN    reduce using rule 17 (unary_expression -> postfix_expression .)
    AND_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    XOR_ASSIGN      reduce using rule 17 (unary_expression -> postfix_expression .)
    OR_ASSIGN       reduce using rule 17 (unary_expression -> postfix_expression .)
    MULTOP          reduce using rule 17 (unary_expression -> postfix_expression .)
    DIVOP           reduce using rule 17 (unary_expression -> postfix_expression .)
    MODOP           reduce using rule 17 (unary_expression -> postfix_expression .)
    PLUSOP          reduce using rule 17 (unary_expression -> postfix_expression .)
    MINUSOP         reduce using rule 17 (unary_expression -> postfix_expression .)
    LEFT_OP         reduce using rule 17 (unary_expression -> postfix_expression .)
    RIGHT_OP        reduce using rule 17 (unary_expression -> postfix_expression .)
    LTCOMP          reduce using rule 17 (unary_expression -> postfix_expression .)
    GTCOMP          reduce using rule 17 (unary_expression -> postfix_expression .)
    LE_OP           reduce using rule 17 (unary_expression -> postfix_expression .)
    GE_OP           reduce using rule 17 (unary_expression -> postfix_expression .)
    EQ_OP           reduce using rule 17 (unary_expression -> postfix_expression .)
    NE_OP           reduce using rule 17 (unary_expression -> postfix_expression .)
    BANDOP          reduce using rule 17 (unary_expression -> postfix_expression .)
    XOROP           reduce using rule 17 (unary_expression -> postfix_expression .)
    BOROP           reduce using rule 17 (unary_expression -> postfix_expression .)
    AND_OP          reduce using rule 17 (unary_expression -> postfix_expression .)
    QUESMARK        reduce using rule 17 (unary_expression -> postfix_expression .)
    OR_OP           reduce using rule 17 (unary_expression -> postfix_expression .)
    SEMICOLON       reduce using rule 17 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 17 (unary_expression -> postfix_expression .)
    RSPAREN         reduce using rule 17 (unary_expression -> postfix_expression .)
    COLON           reduce using rule 17 (unary_expression -> postfix_expression .)
    RRPAREN         reduce using rule 17 (unary_expression -> postfix_expression .)
    RCPAREN         reduce using rule 17 (unary_expression -> postfix_expression .)
    LSPAREN         shift and go to state 192
    LRPAREN         shift and go to state 193
    DOT             shift and go to state 194
    PTR_OP          shift and go to state 195
    INC_OP          shift and go to state 196
    DEC_OP          shift and go to state 197


state 100

    (18) unary_expression -> INC_OP . unary_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 199

    unary_expression               shift and go to state 198
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 101

    (19) unary_expression -> DEC_OP . unary_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 199

    unary_expression               shift and go to state 200
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 102

    (20) unary_expression -> unary_operator . cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 201
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    primary_expression             shift and go to state 106

state 103

    (31) multiplicative_expression -> cast_expression .

    MULTOP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    DIVOP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    MODOP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    PLUSOP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    MINUSOP         reduce using rule 31 (multiplicative_expression -> cast_expression .)
    LEFT_OP         reduce using rule 31 (multiplicative_expression -> cast_expression .)
    RIGHT_OP        reduce using rule 31 (multiplicative_expression -> cast_expression .)
    LTCOMP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    GTCOMP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    LE_OP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    GE_OP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    EQ_OP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    NE_OP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    BANDOP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    XOROP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    BOROP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    AND_OP          reduce using rule 31 (multiplicative_expression -> cast_expression .)
    QUESMARK        reduce using rule 31 (multiplicative_expression -> cast_expression .)
    OR_OP           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    SEMICOLON       reduce using rule 31 (multiplicative_expression -> cast_expression .)
    COMMA           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    RSPAREN         reduce using rule 31 (multiplicative_expression -> cast_expression .)
    COLON           reduce using rule 31 (multiplicative_expression -> cast_expression .)
    RRPAREN         reduce using rule 31 (multiplicative_expression -> cast_expression .)
    RCPAREN         reduce using rule 31 (multiplicative_expression -> cast_expression .)


state 104

    (21) unary_expression -> SIZEOF . unary_expression
    (22) unary_expression -> SIZEOF . LRPAREN type_name RRPAREN
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 203
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    unary_expression               shift and go to state 202
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 105

    (57) logical_or_expression -> logical_and_expression .
    (56) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QUESMARK        reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    OR_OP           reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    SEMICOLON       reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    COMMA           reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    RSPAREN         reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    COLON           reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    RRPAREN         reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    RCPAREN         reduce using rule 57 (logical_or_expression -> logical_and_expression .)
    AND_OP          shift and go to state 204


state 106

    (7) postfix_expression -> primary_expression .

    LSPAREN         reduce using rule 7 (postfix_expression -> primary_expression .)
    LRPAREN         reduce using rule 7 (postfix_expression -> primary_expression .)
    DOT             reduce using rule 7 (postfix_expression -> primary_expression .)
    PTR_OP          reduce using rule 7 (postfix_expression -> primary_expression .)
    INC_OP          reduce using rule 7 (postfix_expression -> primary_expression .)
    DEC_OP          reduce using rule 7 (postfix_expression -> primary_expression .)
    EQUAL           reduce using rule 7 (postfix_expression -> primary_expression .)
    MUL_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    DIV_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    MOD_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    ADD_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    SUB_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    LEFT_ASSIGN     reduce using rule 7 (postfix_expression -> primary_expression .)
    RIGHT_ASSIGN    reduce using rule 7 (postfix_expression -> primary_expression .)
    AND_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    XOR_ASSIGN      reduce using rule 7 (postfix_expression -> primary_expression .)
    OR_ASSIGN       reduce using rule 7 (postfix_expression -> primary_expression .)
    MULTOP          reduce using rule 7 (postfix_expression -> primary_expression .)
    DIVOP           reduce using rule 7 (postfix_expression -> primary_expression .)
    MODOP           reduce using rule 7 (postfix_expression -> primary_expression .)
    PLUSOP          reduce using rule 7 (postfix_expression -> primary_expression .)
    MINUSOP         reduce using rule 7 (postfix_expression -> primary_expression .)
    LEFT_OP         reduce using rule 7 (postfix_expression -> primary_expression .)
    RIGHT_OP        reduce using rule 7 (postfix_expression -> primary_expression .)
    LTCOMP          reduce using rule 7 (postfix_expression -> primary_expression .)
    GTCOMP          reduce using rule 7 (postfix_expression -> primary_expression .)
    LE_OP           reduce using rule 7 (postfix_expression -> primary_expression .)
    GE_OP           reduce using rule 7 (postfix_expression -> primary_expression .)
    EQ_OP           reduce using rule 7 (postfix_expression -> primary_expression .)
    NE_OP           reduce using rule 7 (postfix_expression -> primary_expression .)
    BANDOP          reduce using rule 7 (postfix_expression -> primary_expression .)
    XOROP           reduce using rule 7 (postfix_expression -> primary_expression .)
    BOROP           reduce using rule 7 (postfix_expression -> primary_expression .)
    AND_OP          reduce using rule 7 (postfix_expression -> primary_expression .)
    QUESMARK        reduce using rule 7 (postfix_expression -> primary_expression .)
    OR_OP           reduce using rule 7 (postfix_expression -> primary_expression .)
    SEMICOLON       reduce using rule 7 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 7 (postfix_expression -> primary_expression .)
    RSPAREN         reduce using rule 7 (postfix_expression -> primary_expression .)
    COLON           reduce using rule 7 (postfix_expression -> primary_expression .)
    RRPAREN         reduce using rule 7 (postfix_expression -> primary_expression .)
    RCPAREN         reduce using rule 7 (postfix_expression -> primary_expression .)


state 107

    (23) unary_operator -> BANDOP .

    LRPAREN         reduce using rule 23 (unary_operator -> BANDOP .)
    INC_OP          reduce using rule 23 (unary_operator -> BANDOP .)
    DEC_OP          reduce using rule 23 (unary_operator -> BANDOP .)
    SIZEOF          reduce using rule 23 (unary_operator -> BANDOP .)
    BANDOP          reduce using rule 23 (unary_operator -> BANDOP .)
    MULTOP          reduce using rule 23 (unary_operator -> BANDOP .)
    PLUSOP          reduce using rule 23 (unary_operator -> BANDOP .)
    MINUSOP         reduce using rule 23 (unary_operator -> BANDOP .)
    BNOP            reduce using rule 23 (unary_operator -> BANDOP .)
    NOTSYM          reduce using rule 23 (unary_operator -> BANDOP .)
    IDENTIFIER      reduce using rule 23 (unary_operator -> BANDOP .)
    NUMBER          reduce using rule 23 (unary_operator -> BANDOP .)
    STRING_LITERAL  reduce using rule 23 (unary_operator -> BANDOP .)
    SCHAR           reduce using rule 23 (unary_operator -> BANDOP .)


state 108

    (24) unary_operator -> MULTOP .

    LRPAREN         reduce using rule 24 (unary_operator -> MULTOP .)
    INC_OP          reduce using rule 24 (unary_operator -> MULTOP .)
    DEC_OP          reduce using rule 24 (unary_operator -> MULTOP .)
    SIZEOF          reduce using rule 24 (unary_operator -> MULTOP .)
    BANDOP          reduce using rule 24 (unary_operator -> MULTOP .)
    MULTOP          reduce using rule 24 (unary_operator -> MULTOP .)
    PLUSOP          reduce using rule 24 (unary_operator -> MULTOP .)
    MINUSOP         reduce using rule 24 (unary_operator -> MULTOP .)
    BNOP            reduce using rule 24 (unary_operator -> MULTOP .)
    NOTSYM          reduce using rule 24 (unary_operator -> MULTOP .)
    IDENTIFIER      reduce using rule 24 (unary_operator -> MULTOP .)
    NUMBER          reduce using rule 24 (unary_operator -> MULTOP .)
    STRING_LITERAL  reduce using rule 24 (unary_operator -> MULTOP .)
    SCHAR           reduce using rule 24 (unary_operator -> MULTOP .)


state 109

    (25) unary_operator -> PLUSOP .

    LRPAREN         reduce using rule 25 (unary_operator -> PLUSOP .)
    INC_OP          reduce using rule 25 (unary_operator -> PLUSOP .)
    DEC_OP          reduce using rule 25 (unary_operator -> PLUSOP .)
    SIZEOF          reduce using rule 25 (unary_operator -> PLUSOP .)
    BANDOP          reduce using rule 25 (unary_operator -> PLUSOP .)
    MULTOP          reduce using rule 25 (unary_operator -> PLUSOP .)
    PLUSOP          reduce using rule 25 (unary_operator -> PLUSOP .)
    MINUSOP         reduce using rule 25 (unary_operator -> PLUSOP .)
    BNOP            reduce using rule 25 (unary_operator -> PLUSOP .)
    NOTSYM          reduce using rule 25 (unary_operator -> PLUSOP .)
    IDENTIFIER      reduce using rule 25 (unary_operator -> PLUSOP .)
    NUMBER          reduce using rule 25 (unary_operator -> PLUSOP .)
    STRING_LITERAL  reduce using rule 25 (unary_operator -> PLUSOP .)
    SCHAR           reduce using rule 25 (unary_operator -> PLUSOP .)


state 110

    (26) unary_operator -> MINUSOP .

    LRPAREN         reduce using rule 26 (unary_operator -> MINUSOP .)
    INC_OP          reduce using rule 26 (unary_operator -> MINUSOP .)
    DEC_OP          reduce using rule 26 (unary_operator -> MINUSOP .)
    SIZEOF          reduce using rule 26 (unary_operator -> MINUSOP .)
    BANDOP          reduce using rule 26 (unary_operator -> MINUSOP .)
    MULTOP          reduce using rule 26 (unary_operator -> MINUSOP .)
    PLUSOP          reduce using rule 26 (unary_operator -> MINUSOP .)
    MINUSOP         reduce using rule 26 (unary_operator -> MINUSOP .)
    BNOP            reduce using rule 26 (unary_operator -> MINUSOP .)
    NOTSYM          reduce using rule 26 (unary_operator -> MINUSOP .)
    IDENTIFIER      reduce using rule 26 (unary_operator -> MINUSOP .)
    NUMBER          reduce using rule 26 (unary_operator -> MINUSOP .)
    STRING_LITERAL  reduce using rule 26 (unary_operator -> MINUSOP .)
    SCHAR           reduce using rule 26 (unary_operator -> MINUSOP .)


state 111

    (27) unary_operator -> BNOP .

    LRPAREN         reduce using rule 27 (unary_operator -> BNOP .)
    INC_OP          reduce using rule 27 (unary_operator -> BNOP .)
    DEC_OP          reduce using rule 27 (unary_operator -> BNOP .)
    SIZEOF          reduce using rule 27 (unary_operator -> BNOP .)
    BANDOP          reduce using rule 27 (unary_operator -> BNOP .)
    MULTOP          reduce using rule 27 (unary_operator -> BNOP .)
    PLUSOP          reduce using rule 27 (unary_operator -> BNOP .)
    MINUSOP         reduce using rule 27 (unary_operator -> BNOP .)
    BNOP            reduce using rule 27 (unary_operator -> BNOP .)
    NOTSYM          reduce using rule 27 (unary_operator -> BNOP .)
    IDENTIFIER      reduce using rule 27 (unary_operator -> BNOP .)
    NUMBER          reduce using rule 27 (unary_operator -> BNOP .)
    STRING_LITERAL  reduce using rule 27 (unary_operator -> BNOP .)
    SCHAR           reduce using rule 27 (unary_operator -> BNOP .)


state 112

    (28) unary_operator -> NOTSYM .

    LRPAREN         reduce using rule 28 (unary_operator -> NOTSYM .)
    INC_OP          reduce using rule 28 (unary_operator -> NOTSYM .)
    DEC_OP          reduce using rule 28 (unary_operator -> NOTSYM .)
    SIZEOF          reduce using rule 28 (unary_operator -> NOTSYM .)
    BANDOP          reduce using rule 28 (unary_operator -> NOTSYM .)
    MULTOP          reduce using rule 28 (unary_operator -> NOTSYM .)
    PLUSOP          reduce using rule 28 (unary_operator -> NOTSYM .)
    MINUSOP         reduce using rule 28 (unary_operator -> NOTSYM .)
    BNOP            reduce using rule 28 (unary_operator -> NOTSYM .)
    NOTSYM          reduce using rule 28 (unary_operator -> NOTSYM .)
    IDENTIFIER      reduce using rule 28 (unary_operator -> NOTSYM .)
    NUMBER          reduce using rule 28 (unary_operator -> NOTSYM .)
    STRING_LITERAL  reduce using rule 28 (unary_operator -> NOTSYM .)
    SCHAR           reduce using rule 28 (unary_operator -> NOTSYM .)


state 113

    (55) logical_and_expression -> inclusive_or_expression .
    (54) inclusive_or_expression -> inclusive_or_expression . BOROP exclusive_or_expression

    AND_OP          reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    QUESMARK        reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    OR_OP           reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    SEMICOLON       reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    RSPAREN         reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    COLON           reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    RRPAREN         reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    RCPAREN         reduce using rule 55 (logical_and_expression -> inclusive_or_expression .)
    BOROP           shift and go to state 205


state 114

    (3) primary_expression -> NUMBER .

    LSPAREN         reduce using rule 3 (primary_expression -> NUMBER .)
    LRPAREN         reduce using rule 3 (primary_expression -> NUMBER .)
    DOT             reduce using rule 3 (primary_expression -> NUMBER .)
    PTR_OP          reduce using rule 3 (primary_expression -> NUMBER .)
    INC_OP          reduce using rule 3 (primary_expression -> NUMBER .)
    DEC_OP          reduce using rule 3 (primary_expression -> NUMBER .)
    EQUAL           reduce using rule 3 (primary_expression -> NUMBER .)
    MUL_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    DIV_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    MOD_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    ADD_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    SUB_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    LEFT_ASSIGN     reduce using rule 3 (primary_expression -> NUMBER .)
    RIGHT_ASSIGN    reduce using rule 3 (primary_expression -> NUMBER .)
    AND_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    XOR_ASSIGN      reduce using rule 3 (primary_expression -> NUMBER .)
    OR_ASSIGN       reduce using rule 3 (primary_expression -> NUMBER .)
    MULTOP          reduce using rule 3 (primary_expression -> NUMBER .)
    DIVOP           reduce using rule 3 (primary_expression -> NUMBER .)
    MODOP           reduce using rule 3 (primary_expression -> NUMBER .)
    PLUSOP          reduce using rule 3 (primary_expression -> NUMBER .)
    MINUSOP         reduce using rule 3 (primary_expression -> NUMBER .)
    LEFT_OP         reduce using rule 3 (primary_expression -> NUMBER .)
    RIGHT_OP        reduce using rule 3 (primary_expression -> NUMBER .)
    LTCOMP          reduce using rule 3 (primary_expression -> NUMBER .)
    GTCOMP          reduce using rule 3 (primary_expression -> NUMBER .)
    LE_OP           reduce using rule 3 (primary_expression -> NUMBER .)
    GE_OP           reduce using rule 3 (primary_expression -> NUMBER .)
    EQ_OP           reduce using rule 3 (primary_expression -> NUMBER .)
    NE_OP           reduce using rule 3 (primary_expression -> NUMBER .)
    BANDOP          reduce using rule 3 (primary_expression -> NUMBER .)
    XOROP           reduce using rule 3 (primary_expression -> NUMBER .)
    BOROP           reduce using rule 3 (primary_expression -> NUMBER .)
    AND_OP          reduce using rule 3 (primary_expression -> NUMBER .)
    QUESMARK        reduce using rule 3 (primary_expression -> NUMBER .)
    OR_OP           reduce using rule 3 (primary_expression -> NUMBER .)
    SEMICOLON       reduce using rule 3 (primary_expression -> NUMBER .)
    COMMA           reduce using rule 3 (primary_expression -> NUMBER .)
    RSPAREN         reduce using rule 3 (primary_expression -> NUMBER .)
    COLON           reduce using rule 3 (primary_expression -> NUMBER .)
    RRPAREN         reduce using rule 3 (primary_expression -> NUMBER .)
    RCPAREN         reduce using rule 3 (primary_expression -> NUMBER .)


state 115

    (4) primary_expression -> STRING_LITERAL .

    LSPAREN         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    LRPAREN         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    DOT             reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    PTR_OP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    INC_OP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    DEC_OP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    EQUAL           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    MUL_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    DIV_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    MOD_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    ADD_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    SUB_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    LEFT_ASSIGN     reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    RIGHT_ASSIGN    reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    AND_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    XOR_ASSIGN      reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    OR_ASSIGN       reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    MULTOP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    DIVOP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    MODOP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    PLUSOP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    MINUSOP         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    LEFT_OP         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    RIGHT_OP        reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    LTCOMP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    GTCOMP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    LE_OP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    GE_OP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    EQ_OP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    NE_OP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    BANDOP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    XOROP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    BOROP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    AND_OP          reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    QUESMARK        reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    OR_OP           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    COMMA           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    RSPAREN         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    COLON           reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    RRPAREN         reduce using rule 4 (primary_expression -> STRING_LITERAL .)
    RCPAREN         reduce using rule 4 (primary_expression -> STRING_LITERAL .)


state 116

    (5) primary_expression -> SCHAR .

    LSPAREN         reduce using rule 5 (primary_expression -> SCHAR .)
    LRPAREN         reduce using rule 5 (primary_expression -> SCHAR .)
    DOT             reduce using rule 5 (primary_expression -> SCHAR .)
    PTR_OP          reduce using rule 5 (primary_expression -> SCHAR .)
    INC_OP          reduce using rule 5 (primary_expression -> SCHAR .)
    DEC_OP          reduce using rule 5 (primary_expression -> SCHAR .)
    EQUAL           reduce using rule 5 (primary_expression -> SCHAR .)
    MUL_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    DIV_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    MOD_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    ADD_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    SUB_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    LEFT_ASSIGN     reduce using rule 5 (primary_expression -> SCHAR .)
    RIGHT_ASSIGN    reduce using rule 5 (primary_expression -> SCHAR .)
    AND_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    XOR_ASSIGN      reduce using rule 5 (primary_expression -> SCHAR .)
    OR_ASSIGN       reduce using rule 5 (primary_expression -> SCHAR .)
    MULTOP          reduce using rule 5 (primary_expression -> SCHAR .)
    DIVOP           reduce using rule 5 (primary_expression -> SCHAR .)
    MODOP           reduce using rule 5 (primary_expression -> SCHAR .)
    PLUSOP          reduce using rule 5 (primary_expression -> SCHAR .)
    MINUSOP         reduce using rule 5 (primary_expression -> SCHAR .)
    LEFT_OP         reduce using rule 5 (primary_expression -> SCHAR .)
    RIGHT_OP        reduce using rule 5 (primary_expression -> SCHAR .)
    LTCOMP          reduce using rule 5 (primary_expression -> SCHAR .)
    GTCOMP          reduce using rule 5 (primary_expression -> SCHAR .)
    LE_OP           reduce using rule 5 (primary_expression -> SCHAR .)
    GE_OP           reduce using rule 5 (primary_expression -> SCHAR .)
    EQ_OP           reduce using rule 5 (primary_expression -> SCHAR .)
    NE_OP           reduce using rule 5 (primary_expression -> SCHAR .)
    BANDOP          reduce using rule 5 (primary_expression -> SCHAR .)
    XOROP           reduce using rule 5 (primary_expression -> SCHAR .)
    BOROP           reduce using rule 5 (primary_expression -> SCHAR .)
    AND_OP          reduce using rule 5 (primary_expression -> SCHAR .)
    QUESMARK        reduce using rule 5 (primary_expression -> SCHAR .)
    OR_OP           reduce using rule 5 (primary_expression -> SCHAR .)
    SEMICOLON       reduce using rule 5 (primary_expression -> SCHAR .)
    COMMA           reduce using rule 5 (primary_expression -> SCHAR .)
    RSPAREN         reduce using rule 5 (primary_expression -> SCHAR .)
    COLON           reduce using rule 5 (primary_expression -> SCHAR .)
    RRPAREN         reduce using rule 5 (primary_expression -> SCHAR .)
    RCPAREN         reduce using rule 5 (primary_expression -> SCHAR .)


state 117

    (53) inclusive_or_expression -> exclusive_or_expression .
    (52) exclusive_or_expression -> exclusive_or_expression . XOROP and_expression

    BOROP           reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    AND_OP          reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    QUESMARK        reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    OR_OP           reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    SEMICOLON       reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    RSPAREN         reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    COLON           reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    RRPAREN         reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    RCPAREN         reduce using rule 53 (inclusive_or_expression -> exclusive_or_expression .)
    XOROP           shift and go to state 206


state 118

    (51) exclusive_or_expression -> and_expression .
    (50) and_expression -> and_expression . BANDOP equality_expression

    XOROP           reduce using rule 51 (exclusive_or_expression -> and_expression .)
    BOROP           reduce using rule 51 (exclusive_or_expression -> and_expression .)
    AND_OP          reduce using rule 51 (exclusive_or_expression -> and_expression .)
    QUESMARK        reduce using rule 51 (exclusive_or_expression -> and_expression .)
    OR_OP           reduce using rule 51 (exclusive_or_expression -> and_expression .)
    SEMICOLON       reduce using rule 51 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 51 (exclusive_or_expression -> and_expression .)
    RSPAREN         reduce using rule 51 (exclusive_or_expression -> and_expression .)
    COLON           reduce using rule 51 (exclusive_or_expression -> and_expression .)
    RRPAREN         reduce using rule 51 (exclusive_or_expression -> and_expression .)
    RCPAREN         reduce using rule 51 (exclusive_or_expression -> and_expression .)
    BANDOP          shift and go to state 207


state 119

    (49) and_expression -> equality_expression .
    (47) equality_expression -> equality_expression . EQ_OP relational_expression
    (48) equality_expression -> equality_expression . NE_OP relational_expression

    BANDOP          reduce using rule 49 (and_expression -> equality_expression .)
    XOROP           reduce using rule 49 (and_expression -> equality_expression .)
    BOROP           reduce using rule 49 (and_expression -> equality_expression .)
    AND_OP          reduce using rule 49 (and_expression -> equality_expression .)
    QUESMARK        reduce using rule 49 (and_expression -> equality_expression .)
    OR_OP           reduce using rule 49 (and_expression -> equality_expression .)
    SEMICOLON       reduce using rule 49 (and_expression -> equality_expression .)
    COMMA           reduce using rule 49 (and_expression -> equality_expression .)
    RSPAREN         reduce using rule 49 (and_expression -> equality_expression .)
    COLON           reduce using rule 49 (and_expression -> equality_expression .)
    RRPAREN         reduce using rule 49 (and_expression -> equality_expression .)
    RCPAREN         reduce using rule 49 (and_expression -> equality_expression .)
    EQ_OP           shift and go to state 208
    NE_OP           shift and go to state 209


state 120

    (46) equality_expression -> relational_expression .
    (42) relational_expression -> relational_expression . LTCOMP shift_expression
    (43) relational_expression -> relational_expression . GTCOMP shift_expression
    (44) relational_expression -> relational_expression . LE_OP shift_expression
    (45) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 46 (equality_expression -> relational_expression .)
    NE_OP           reduce using rule 46 (equality_expression -> relational_expression .)
    BANDOP          reduce using rule 46 (equality_expression -> relational_expression .)
    XOROP           reduce using rule 46 (equality_expression -> relational_expression .)
    BOROP           reduce using rule 46 (equality_expression -> relational_expression .)
    AND_OP          reduce using rule 46 (equality_expression -> relational_expression .)
    QUESMARK        reduce using rule 46 (equality_expression -> relational_expression .)
    OR_OP           reduce using rule 46 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 46 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 46 (equality_expression -> relational_expression .)
    RSPAREN         reduce using rule 46 (equality_expression -> relational_expression .)
    COLON           reduce using rule 46 (equality_expression -> relational_expression .)
    RRPAREN         reduce using rule 46 (equality_expression -> relational_expression .)
    RCPAREN         reduce using rule 46 (equality_expression -> relational_expression .)
    LTCOMP          shift and go to state 210
    GTCOMP          shift and go to state 211
    LE_OP           shift and go to state 212
    GE_OP           shift and go to state 213


state 121

    (41) relational_expression -> shift_expression .
    (39) shift_expression -> shift_expression . LEFT_OP additive_expression
    (40) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LTCOMP          reduce using rule 41 (relational_expression -> shift_expression .)
    GTCOMP          reduce using rule 41 (relational_expression -> shift_expression .)
    LE_OP           reduce using rule 41 (relational_expression -> shift_expression .)
    GE_OP           reduce using rule 41 (relational_expression -> shift_expression .)
    EQ_OP           reduce using rule 41 (relational_expression -> shift_expression .)
    NE_OP           reduce using rule 41 (relational_expression -> shift_expression .)
    BANDOP          reduce using rule 41 (relational_expression -> shift_expression .)
    XOROP           reduce using rule 41 (relational_expression -> shift_expression .)
    BOROP           reduce using rule 41 (relational_expression -> shift_expression .)
    AND_OP          reduce using rule 41 (relational_expression -> shift_expression .)
    QUESMARK        reduce using rule 41 (relational_expression -> shift_expression .)
    OR_OP           reduce using rule 41 (relational_expression -> shift_expression .)
    SEMICOLON       reduce using rule 41 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 41 (relational_expression -> shift_expression .)
    RSPAREN         reduce using rule 41 (relational_expression -> shift_expression .)
    COLON           reduce using rule 41 (relational_expression -> shift_expression .)
    RRPAREN         reduce using rule 41 (relational_expression -> shift_expression .)
    RCPAREN         reduce using rule 41 (relational_expression -> shift_expression .)
    LEFT_OP         shift and go to state 214
    RIGHT_OP        shift and go to state 215


state 122

    (38) shift_expression -> additive_expression .
    (36) additive_expression -> additive_expression . PLUSOP multiplicative_expression
    (37) additive_expression -> additive_expression . MINUSOP multiplicative_expression

    LEFT_OP         reduce using rule 38 (shift_expression -> additive_expression .)
    RIGHT_OP        reduce using rule 38 (shift_expression -> additive_expression .)
    LTCOMP          reduce using rule 38 (shift_expression -> additive_expression .)
    GTCOMP          reduce using rule 38 (shift_expression -> additive_expression .)
    LE_OP           reduce using rule 38 (shift_expression -> additive_expression .)
    GE_OP           reduce using rule 38 (shift_expression -> additive_expression .)
    EQ_OP           reduce using rule 38 (shift_expression -> additive_expression .)
    NE_OP           reduce using rule 38 (shift_expression -> additive_expression .)
    BANDOP          reduce using rule 38 (shift_expression -> additive_expression .)
    XOROP           reduce using rule 38 (shift_expression -> additive_expression .)
    BOROP           reduce using rule 38 (shift_expression -> additive_expression .)
    AND_OP          reduce using rule 38 (shift_expression -> additive_expression .)
    QUESMARK        reduce using rule 38 (shift_expression -> additive_expression .)
    OR_OP           reduce using rule 38 (shift_expression -> additive_expression .)
    SEMICOLON       reduce using rule 38 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 38 (shift_expression -> additive_expression .)
    RSPAREN         reduce using rule 38 (shift_expression -> additive_expression .)
    COLON           reduce using rule 38 (shift_expression -> additive_expression .)
    RRPAREN         reduce using rule 38 (shift_expression -> additive_expression .)
    RCPAREN         reduce using rule 38 (shift_expression -> additive_expression .)
    PLUSOP          shift and go to state 216
    MINUSOP         shift and go to state 217


state 123

    (35) additive_expression -> multiplicative_expression .
    (32) multiplicative_expression -> multiplicative_expression . MULTOP cast_expression
    (33) multiplicative_expression -> multiplicative_expression . DIVOP cast_expression
    (34) multiplicative_expression -> multiplicative_expression . MODOP cast_expression

    PLUSOP          reduce using rule 35 (additive_expression -> multiplicative_expression .)
    MINUSOP         reduce using rule 35 (additive_expression -> multiplicative_expression .)
    LEFT_OP         reduce using rule 35 (additive_expression -> multiplicative_expression .)
    RIGHT_OP        reduce using rule 35 (additive_expression -> multiplicative_expression .)
    LTCOMP          reduce using rule 35 (additive_expression -> multiplicative_expression .)
    GTCOMP          reduce using rule 35 (additive_expression -> multiplicative_expression .)
    LE_OP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    GE_OP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    EQ_OP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    NE_OP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    BANDOP          reduce using rule 35 (additive_expression -> multiplicative_expression .)
    XOROP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    BOROP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    AND_OP          reduce using rule 35 (additive_expression -> multiplicative_expression .)
    QUESMARK        reduce using rule 35 (additive_expression -> multiplicative_expression .)
    OR_OP           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 35 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    RSPAREN         reduce using rule 35 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 35 (additive_expression -> multiplicative_expression .)
    RRPAREN         reduce using rule 35 (additive_expression -> multiplicative_expression .)
    RCPAREN         reduce using rule 35 (additive_expression -> multiplicative_expression .)
    MULTOP          shift and go to state 218
    DIVOP           shift and go to state 219
    MODOP           shift and go to state 220


state 124

    (87) init_declarator -> declarator .
    (88) init_declarator -> declarator . EQUAL initializer

    SEMICOLON       reduce using rule 87 (init_declarator -> declarator .)
    COMMA           reduce using rule 87 (init_declarator -> declarator .)
    EQUAL           shift and go to state 65


state 125

    (136) direct_declarator -> direct_declarator LSPAREN constant_expression . RSPAREN

    RSPAREN         shift and go to state 221


state 126

    (137) direct_declarator -> direct_declarator LSPAREN RSPAREN .

    LSPAREN         reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    LRPAREN         reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    LCPAREN         reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    TYPEDEF         reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    EXTERN          reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    STATIC          reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    AUTO            reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    REGISTER        reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    VOID            reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    CHAR            reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    SHORT           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    INT             reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    LONG            reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    FLOAT           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    DOUBLE          reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    SIGNED          reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    UNSIGNED        reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    CONST           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    VOLATILE        reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    ENUM            reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    STRUCT          reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    UNION           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    CLASS           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    EQUAL           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    SEMICOLON       reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    COMMA           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    RRPAREN         reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)
    COLON           reduce using rule 137 (direct_declarator -> direct_declarator LSPAREN RSPAREN .)


state 127

    (76) constant_expression -> conditional_expression .

    RSPAREN         reduce using rule 76 (constant_expression -> conditional_expression .)
    COLON           reduce using rule 76 (constant_expression -> conditional_expression .)
    SEMICOLON       reduce using rule 76 (constant_expression -> conditional_expression .)
    COMMA           reduce using rule 76 (constant_expression -> conditional_expression .)
    RCPAREN         reduce using rule 76 (constant_expression -> conditional_expression .)


state 128

    (29) cast_expression -> unary_expression .

    MULTOP          reduce using rule 29 (cast_expression -> unary_expression .)
    DIVOP           reduce using rule 29 (cast_expression -> unary_expression .)
    MODOP           reduce using rule 29 (cast_expression -> unary_expression .)
    PLUSOP          reduce using rule 29 (cast_expression -> unary_expression .)
    MINUSOP         reduce using rule 29 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 29 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 29 (cast_expression -> unary_expression .)
    LTCOMP          reduce using rule 29 (cast_expression -> unary_expression .)
    GTCOMP          reduce using rule 29 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    BANDOP          reduce using rule 29 (cast_expression -> unary_expression .)
    XOROP           reduce using rule 29 (cast_expression -> unary_expression .)
    BOROP           reduce using rule 29 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 29 (cast_expression -> unary_expression .)
    QUESMARK        reduce using rule 29 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 29 (cast_expression -> unary_expression .)
    RSPAREN         reduce using rule 29 (cast_expression -> unary_expression .)
    COLON           reduce using rule 29 (cast_expression -> unary_expression .)
    EQUAL           reduce using rule 29 (cast_expression -> unary_expression .)
    MUL_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    DIV_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    MOD_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    ADD_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    SUB_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    LEFT_ASSIGN     reduce using rule 29 (cast_expression -> unary_expression .)
    RIGHT_ASSIGN    reduce using rule 29 (cast_expression -> unary_expression .)
    AND_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    XOR_ASSIGN      reduce using rule 29 (cast_expression -> unary_expression .)
    OR_ASSIGN       reduce using rule 29 (cast_expression -> unary_expression .)
    SEMICOLON       reduce using rule 29 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 29 (cast_expression -> unary_expression .)
    RRPAREN         reduce using rule 29 (cast_expression -> unary_expression .)
    RCPAREN         reduce using rule 29 (cast_expression -> unary_expression .)


state 129

    (30) cast_expression -> LRPAREN . type_name RRPAREN cast_expression
    (6) primary_expression -> LRPAREN . expression RRPAREN
    (156) type_name -> . specifier_qualifier_list
    (157) type_name -> . specifier_qualifier_list abstract_declarator
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    ENUM            shift and go to state 35
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    type_name                      shift and go to state 167
    cast_expression                shift and go to state 103
    expression                     shift and go to state 166
    specifier_qualifier_list       shift and go to state 168
    assignment_expression          shift and go to state 95
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    struct_or_union                shift and go to state 34
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 130

    (2) primary_expression -> IDENTIFIER .

    LSPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LRPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DOT             reduce using rule 2 (primary_expression -> IDENTIFIER .)
    PTR_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    INC_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DEC_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MULTOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DIVOP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MODOP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    PLUSOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MINUSOP         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LEFT_OP         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RIGHT_OP        reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LTCOMP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    GTCOMP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    GE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    EQ_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    NE_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    BANDOP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    XOROP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    BOROP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    AND_OP          reduce using rule 2 (primary_expression -> IDENTIFIER .)
    QUESMARK        reduce using rule 2 (primary_expression -> IDENTIFIER .)
    OR_OP           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RSPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    EQUAL           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 2 (primary_expression -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 2 (primary_expression -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 2 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 2 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    COLON           reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RRPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)
    RCPAREN         reduce using rule 2 (primary_expression -> IDENTIFIER .)


state 131

    (138) direct_declarator -> direct_declarator LRPAREN parameter_type_list . RRPAREN

    RRPAREN         shift and go to state 222


state 132

    (140) direct_declarator -> direct_declarator LRPAREN RRPAREN .

    LSPAREN         reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    LRPAREN         reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    LCPAREN         reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    TYPEDEF         reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    EXTERN          reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    STATIC          reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    AUTO            reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    REGISTER        reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    VOID            reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    CHAR            reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    SHORT           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    INT             reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    LONG            reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    FLOAT           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    DOUBLE          reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    SIGNED          reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    UNSIGNED        reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    CONST           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    VOLATILE        reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    ENUM            reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    STRUCT          reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    UNION           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    CLASS           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    EQUAL           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    SEMICOLON       reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    COMMA           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    RRPAREN         reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)
    COLON           reduce using rule 140 (direct_declarator -> direct_declarator LRPAREN RRPAREN .)


state 133

    (139) direct_declarator -> direct_declarator LRPAREN identifier_list . RRPAREN
    (155) identifier_list -> identifier_list . COMMA IDENTIFIER

    RRPAREN         shift and go to state 223
    COMMA           shift and go to state 224


state 134

    (147) parameter_type_list -> parameter_list .
    (148) parameter_type_list -> parameter_list . COMMA ELLIPSIS
    (150) parameter_list -> parameter_list . COMMA parameter_declaration

    RRPAREN         reduce using rule 147 (parameter_type_list -> parameter_list .)
    COMMA           shift and go to state 225


state 135

    (154) identifier_list -> IDENTIFIER .

    RRPAREN         reduce using rule 154 (identifier_list -> IDENTIFIER .)
    COMMA           reduce using rule 154 (identifier_list -> IDENTIFIER .)


state 136

    (149) parameter_list -> parameter_declaration .

    COMMA           reduce using rule 149 (parameter_list -> parameter_declaration .)
    RRPAREN         reduce using rule 149 (parameter_list -> parameter_declaration .)


state 137

    (151) parameter_declaration -> declaration_specifiers . declarator
    (152) parameter_declaration -> declaration_specifiers . abstract_declarator
    (153) parameter_declaration -> declaration_specifiers .
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (158) abstract_declarator -> . pointer
    (159) abstract_declarator -> . direct_abstract_declarator
    (160) abstract_declarator -> . pointer direct_abstract_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN

    COMMA           reduce using rule 153 (parameter_declaration -> declaration_specifiers .)
    RRPAREN         reduce using rule 153 (parameter_declaration -> declaration_specifiers .)
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 230
    LSPAREN         shift and go to state 231

    declarator                     shift and go to state 226
    abstract_declarator            shift and go to state 227
    pointer                        shift and go to state 228
    direct_declarator              shift and go to state 12
    direct_abstract_declarator     shift and go to state 229

state 138

    (144) pointer -> MULTOP type_qualifier_list pointer .

    IDENTIFIER      reduce using rule 144 (pointer -> MULTOP type_qualifier_list pointer .)
    LRPAREN         reduce using rule 144 (pointer -> MULTOP type_qualifier_list pointer .)
    LSPAREN         reduce using rule 144 (pointer -> MULTOP type_qualifier_list pointer .)
    COMMA           reduce using rule 144 (pointer -> MULTOP type_qualifier_list pointer .)
    RRPAREN         reduce using rule 144 (pointer -> MULTOP type_qualifier_list pointer .)


state 139

    (146) type_qualifier_list -> type_qualifier_list type_qualifier .

    MULTOP          reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CONST           reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    VOLATILE        reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    IDENTIFIER      reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LRPAREN         reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LSPAREN         reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    COMMA           reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    RRPAREN         reduce using rule 146 (type_qualifier_list -> type_qualifier_list type_qualifier .)


state 140

    (135) direct_declarator -> LRPAREN declarator RRPAREN .

    LSPAREN         reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    LRPAREN         reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    LCPAREN         reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    TYPEDEF         reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    EXTERN          reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    STATIC          reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    AUTO            reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    REGISTER        reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    VOID            reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    CHAR            reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    SHORT           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    INT             reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    LONG            reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    FLOAT           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    DOUBLE          reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    SIGNED          reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    UNSIGNED        reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    CONST           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    VOLATILE        reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    ENUM            reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    STRUCT          reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    UNION           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    CLASS           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    EQUAL           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    SEMICOLON       reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    COMMA           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    RRPAREN         reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)
    COLON           reduce using rule 135 (direct_declarator -> LRPAREN declarator RRPAREN .)


state 141

    (105) struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN . struct_declaration_list RCPAREN
    (111) struct_declaration_list -> . struct_declaration
    (112) struct_declaration_list -> . struct_declaration_list struct_declaration
    (113) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMICOLON
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    struct_or_union                shift and go to state 34
    struct_declaration_list        shift and go to state 232
    struct_declaration             shift and go to state 143
    specifier_qualifier_list       shift and go to state 144
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 142

    (106) struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list . RCPAREN
    (112) struct_declaration_list -> struct_declaration_list . struct_declaration
    (113) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMICOLON
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RCPAREN         shift and go to state 233
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    struct_or_union                shift and go to state 34
    struct_declaration             shift and go to state 234
    specifier_qualifier_list       shift and go to state 144
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 143

    (111) struct_declaration_list -> struct_declaration .

    RCPAREN         reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    VOID            reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    CHAR            reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    SHORT           reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    INT             reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    LONG            reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    FLOAT           reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    DOUBLE          reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    SIGNED          reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    UNSIGNED        reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    CONST           reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    VOLATILE        reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    ENUM            reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    STRUCT          reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    UNION           reduce using rule 111 (struct_declaration_list -> struct_declaration .)
    CLASS           reduce using rule 111 (struct_declaration_list -> struct_declaration .)


state 144

    (113) struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMICOLON
    (118) struct_declarator_list -> . struct_declarator
    (119) struct_declarator_list -> . struct_declarator_list COMMA struct_declarator
    (120) struct_declarator -> . declarator
    (121) struct_declarator -> . COLON constant_expression
    (122) struct_declarator -> . declarator COLON constant_expression
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    COLON           shift and go to state 238
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    struct_declarator_list         shift and go to state 235
    struct_declarator              shift and go to state 236
    declarator                     shift and go to state 237
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12

state 145

    (114) specifier_qualifier_list -> type_specifier . specifier_qualifier_list
    (115) specifier_qualifier_list -> type_specifier .
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    COLON           reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    MULTOP          reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    IDENTIFIER      reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    LRPAREN         reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    LSPAREN         reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    RRPAREN         reduce using rule 115 (specifier_qualifier_list -> type_specifier .)
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    type_specifier                 shift and go to state 145
    specifier_qualifier_list       shift and go to state 239
    type_qualifier                 shift and go to state 146
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 146

    (116) specifier_qualifier_list -> type_qualifier . specifier_qualifier_list
    (117) specifier_qualifier_list -> type_qualifier .
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    COLON           reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    MULTOP          reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    LRPAREN         reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    LSPAREN         reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    RRPAREN         reduce using rule 117 (specifier_qualifier_list -> type_qualifier .)
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    type_qualifier                 shift and go to state 146
    specifier_qualifier_list       shift and go to state 240
    type_specifier                 shift and go to state 145
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 147

    (123) enum_specifier -> ENUM LCPAREN enumerator_list . RCPAREN
    (127) enumerator_list -> enumerator_list . COMMA enumerator

    RCPAREN         shift and go to state 241
    COMMA           shift and go to state 242


state 148

    (126) enumerator_list -> enumerator .

    RCPAREN         reduce using rule 126 (enumerator_list -> enumerator .)
    COMMA           reduce using rule 126 (enumerator_list -> enumerator .)


state 149

    (128) enumerator -> IDENTIFIER .
    (129) enumerator -> IDENTIFIER . EQUAL constant_expression

    RCPAREN         reduce using rule 128 (enumerator -> IDENTIFIER .)
    COMMA           reduce using rule 128 (enumerator -> IDENTIFIER .)
    EQUAL           shift and go to state 243


state 150

    (124) enum_specifier -> ENUM IDENTIFIER LCPAREN . enumerator_list RCPAREN
    (126) enumerator_list -> . enumerator
    (127) enumerator_list -> . enumerator_list COMMA enumerator
    (128) enumerator -> . IDENTIFIER
    (129) enumerator -> . IDENTIFIER EQUAL constant_expression

    IDENTIFIER      shift and go to state 149

    enumerator_list                shift and go to state 244
    enumerator                     shift and go to state 148

state 151

    (210) function_definition -> declaration_specifiers declarator declaration_list compound_statement .

    TYPEDEF         reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STATIC          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    AUTO            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOID            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CHAR            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SHORT           reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    INT             reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LONG            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CONST           reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    MULTOP          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LRPAREN         reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ENUM            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNION           reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CLASS           reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    $end            reduce using rule 210 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)


state 152

    (88) init_declarator -> declarator EQUAL initializer .

    SEMICOLON       reduce using rule 88 (init_declarator -> declarator EQUAL initializer .)
    COMMA           reduce using rule 88 (init_declarator -> declarator EQUAL initializer .)


state 153

    (170) initializer -> assignment_expression .

    SEMICOLON       reduce using rule 170 (initializer -> assignment_expression .)
    COMMA           reduce using rule 170 (initializer -> assignment_expression .)
    RCPAREN         reduce using rule 170 (initializer -> assignment_expression .)


state 154

    (171) initializer -> LCPAREN . initializer_list RCPAREN
    (172) initializer -> LCPAREN . initializer_list COMMA RCPAREN
    (173) initializer_list -> . initializer
    (174) initializer_list -> . initializer_list COMMA initializer
    (170) initializer -> . assignment_expression
    (171) initializer -> . LCPAREN initializer_list RCPAREN
    (172) initializer -> . LCPAREN initializer_list COMMA RCPAREN
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    LCPAREN         shift and go to state 154
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    initializer_list               shift and go to state 245
    initializer                    shift and go to state 246
    assignment_expression          shift and go to state 153
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 155

    (86) init_declarator_list -> init_declarator_list COMMA init_declarator .

    SEMICOLON       reduce using rule 86 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    COMMA           reduce using rule 86 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 156

    (185) compound_statement -> LCPAREN statement_list RCPAREN .

    TYPEDEF         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    EXTERN          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    STATIC          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    AUTO            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    REGISTER        reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    VOID            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    CHAR            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SHORT           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    INT             reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    LONG            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    FLOAT           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    DOUBLE          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SIGNED          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    UNSIGNED        reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    CONST           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    VOLATILE        reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    MULTOP          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    IDENTIFIER      reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    LRPAREN         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    ENUM            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    STRUCT          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    UNION           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    CLASS           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    $end            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    RCPAREN         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    CASE            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    DEFAULT         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    LCPAREN         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SEMICOLON       reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    IF              reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SWITCH          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    WHILE           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    DO              reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    FOR             reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    GOTO            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    CONTINUE        reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    BREAK           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    RETURN          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    INC_OP          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    DEC_OP          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SIZEOF          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    BANDOP          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    PLUSOP          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    MINUSOP         reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    BNOP            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    NOTSYM          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    NUMBER          reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    STRING_LITERAL  reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    SCHAR           reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)
    ELSE            reduce using rule 185 (compound_statement -> LCPAREN statement_list RCPAREN .)


state 157

    (191) statement_list -> statement_list statement .

    RCPAREN         reduce using rule 191 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 191 (statement_list -> statement_list statement .)
    CASE            reduce using rule 191 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 191 (statement_list -> statement_list statement .)
    LCPAREN         reduce using rule 191 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 191 (statement_list -> statement_list statement .)
    IF              reduce using rule 191 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 191 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 191 (statement_list -> statement_list statement .)
    DO              reduce using rule 191 (statement_list -> statement_list statement .)
    FOR             reduce using rule 191 (statement_list -> statement_list statement .)
    GOTO            reduce using rule 191 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 191 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 191 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 191 (statement_list -> statement_list statement .)
    INC_OP          reduce using rule 191 (statement_list -> statement_list statement .)
    DEC_OP          reduce using rule 191 (statement_list -> statement_list statement .)
    SIZEOF          reduce using rule 191 (statement_list -> statement_list statement .)
    BANDOP          reduce using rule 191 (statement_list -> statement_list statement .)
    MULTOP          reduce using rule 191 (statement_list -> statement_list statement .)
    PLUSOP          reduce using rule 191 (statement_list -> statement_list statement .)
    MINUSOP         reduce using rule 191 (statement_list -> statement_list statement .)
    BNOP            reduce using rule 191 (statement_list -> statement_list statement .)
    NOTSYM          reduce using rule 191 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 191 (statement_list -> statement_list statement .)
    STRING_LITERAL  reduce using rule 191 (statement_list -> statement_list statement .)
    SCHAR           reduce using rule 191 (statement_list -> statement_list statement .)
    LRPAREN         reduce using rule 191 (statement_list -> statement_list statement .)


state 158

    (186) compound_statement -> LCPAREN declaration_list RCPAREN .

    TYPEDEF         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    EXTERN          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    STATIC          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    AUTO            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    REGISTER        reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    VOID            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    CHAR            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SHORT           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    INT             reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    LONG            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    FLOAT           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    DOUBLE          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SIGNED          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    UNSIGNED        reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    CONST           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    VOLATILE        reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    MULTOP          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    IDENTIFIER      reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    LRPAREN         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    ENUM            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    STRUCT          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    UNION           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    CLASS           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    $end            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    RCPAREN         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    CASE            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    DEFAULT         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    LCPAREN         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SEMICOLON       reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    IF              reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SWITCH          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    WHILE           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    DO              reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    FOR             reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    GOTO            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    CONTINUE        reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    BREAK           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    RETURN          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    INC_OP          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    DEC_OP          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SIZEOF          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    BANDOP          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    PLUSOP          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    MINUSOP         reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    BNOP            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    NOTSYM          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    NUMBER          reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    STRING_LITERAL  reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    SCHAR           reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)
    ELSE            reduce using rule 186 (compound_statement -> LCPAREN declaration_list RCPAREN .)


state 159

    (187) compound_statement -> LCPAREN declaration_list statement_list . RCPAREN
    (191) statement_list -> statement_list . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RCPAREN         shift and go to state 247
    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 157
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 160

    (181) labeled_statement -> IDENTIFIER COLON . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 248
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 161

    (182) labeled_statement -> CASE constant_expression . COLON statement

    COLON           shift and go to state 249


state 162

    (183) labeled_statement -> DEFAULT COLON . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 250
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 163

    (193) expression_statement -> expression SEMICOLON .

    RCPAREN         reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    CASE            reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    DEFAULT         reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    LCPAREN         reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    SWITCH          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    DO              reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    GOTO            reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    CONTINUE        reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    BREAK           reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    INC_OP          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    DEC_OP          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    SIZEOF          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    BANDOP          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    MULTOP          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    PLUSOP          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    MINUSOP         reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    BNOP            reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    NOTSYM          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    SCHAR           reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    LRPAREN         reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 193 (expression_statement -> expression SEMICOLON .)
    RRPAREN         reduce using rule 193 (expression_statement -> expression SEMICOLON .)


state 164

    (75) expression -> expression COMMA . assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    assignment_expression          shift and go to state 251
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 165

    (194) selection_statement -> IF LRPAREN . expression RRPAREN statement
    (195) selection_statement -> IF LRPAREN . expression RRPAREN statement ELSE statement
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 252
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 166

    (6) primary_expression -> LRPAREN expression . RRPAREN
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 253
    COMMA           shift and go to state 164


state 167

    (30) cast_expression -> LRPAREN type_name . RRPAREN cast_expression

    RRPAREN         shift and go to state 254


state 168

    (156) type_name -> specifier_qualifier_list .
    (157) type_name -> specifier_qualifier_list . abstract_declarator
    (158) abstract_declarator -> . pointer
    (159) abstract_declarator -> . direct_abstract_declarator
    (160) abstract_declarator -> . pointer direct_abstract_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN

    RRPAREN         reduce using rule 156 (type_name -> specifier_qualifier_list .)
    MULTOP          shift and go to state 31
    LRPAREN         shift and go to state 257
    LSPAREN         shift and go to state 231

    abstract_declarator            shift and go to state 255
    pointer                        shift and go to state 256
    direct_abstract_declarator     shift and go to state 229

state 169

    (196) selection_statement -> SWITCH LRPAREN . expression RRPAREN statement
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 258
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 170

    (197) iteration_statement -> WHILE LRPAREN . expression RRPAREN statement
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 259
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 171

    (198) iteration_statement -> DO statement . WHILE LRPAREN expression RRPAREN SEMICOLON

    WHILE           shift and go to state 260


state 172

    (199) iteration_statement -> FOR LRPAREN . expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> FOR LRPAREN . expression_statement expression_statement expression RRPAREN statement
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    SEMICOLON       shift and go to state 80
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression_statement           shift and go to state 261
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 173

    (201) jump_statement -> GOTO IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 262


state 174

    (202) jump_statement -> CONTINUE SEMICOLON .

    RCPAREN         reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    IDENTIFIER      reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    CASE            reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    DEFAULT         reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    LCPAREN         reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    SEMICOLON       reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    SWITCH          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    DO              reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    GOTO            reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    INC_OP          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    DEC_OP          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    SIZEOF          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    BANDOP          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    MULTOP          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    PLUSOP          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    MINUSOP         reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    BNOP            reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    NOTSYM          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    NUMBER          reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    STRING_LITERAL  reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    SCHAR           reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    LRPAREN         reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 202 (jump_statement -> CONTINUE SEMICOLON .)


state 175

    (203) jump_statement -> BREAK SEMICOLON .

    RCPAREN         reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    CASE            reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    LCPAREN         reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    DO              reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    GOTO            reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    INC_OP          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    DEC_OP          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    SIZEOF          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    BANDOP          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    MULTOP          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    PLUSOP          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    MINUSOP         reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    BNOP            reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    NOTSYM          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    STRING_LITERAL  reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    SCHAR           reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    LRPAREN         reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 203 (jump_statement -> BREAK SEMICOLON .)


state 176

    (204) jump_statement -> RETURN SEMICOLON .

    RCPAREN         reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    CASE            reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    LCPAREN         reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    DO              reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    GOTO            reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    INC_OP          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    DEC_OP          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    SIZEOF          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    BANDOP          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    MULTOP          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    PLUSOP          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    MINUSOP         reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    BNOP            reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    NOTSYM          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    STRING_LITERAL  reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    SCHAR           reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    LRPAREN         reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 204 (jump_statement -> RETURN SEMICOLON .)


state 177

    (205) jump_statement -> RETURN expression . SEMICOLON
    (75) expression -> expression . COMMA assignment_expression

    SEMICOLON       shift and go to state 263
    COMMA           shift and go to state 164


state 178

    (62) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    unary_expression               shift and go to state 97
    assignment_expression          shift and go to state 264
    conditional_expression         shift and go to state 96
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 179

    (63) assignment_operator -> EQUAL .

    INC_OP          reduce using rule 63 (assignment_operator -> EQUAL .)
    DEC_OP          reduce using rule 63 (assignment_operator -> EQUAL .)
    SIZEOF          reduce using rule 63 (assignment_operator -> EQUAL .)
    BANDOP          reduce using rule 63 (assignment_operator -> EQUAL .)
    MULTOP          reduce using rule 63 (assignment_operator -> EQUAL .)
    PLUSOP          reduce using rule 63 (assignment_operator -> EQUAL .)
    MINUSOP         reduce using rule 63 (assignment_operator -> EQUAL .)
    BNOP            reduce using rule 63 (assignment_operator -> EQUAL .)
    NOTSYM          reduce using rule 63 (assignment_operator -> EQUAL .)
    IDENTIFIER      reduce using rule 63 (assignment_operator -> EQUAL .)
    NUMBER          reduce using rule 63 (assignment_operator -> EQUAL .)
    STRING_LITERAL  reduce using rule 63 (assignment_operator -> EQUAL .)
    SCHAR           reduce using rule 63 (assignment_operator -> EQUAL .)
    LRPAREN         reduce using rule 63 (assignment_operator -> EQUAL .)


state 180

    (64) assignment_operator -> MUL_ASSIGN .

    INC_OP          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    DEC_OP          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    SIZEOF          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    BANDOP          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    MULTOP          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    PLUSOP          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    MINUSOP         reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    BNOP            reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    NOTSYM          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    IDENTIFIER      reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    NUMBER          reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    SCHAR           reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)
    LRPAREN         reduce using rule 64 (assignment_operator -> MUL_ASSIGN .)


state 181

    (65) assignment_operator -> DIV_ASSIGN .

    INC_OP          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    DEC_OP          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    SIZEOF          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    BANDOP          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    MULTOP          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    PLUSOP          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    MINUSOP         reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    BNOP            reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    NOTSYM          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    IDENTIFIER      reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    NUMBER          reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    STRING_LITERAL  reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    SCHAR           reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)
    LRPAREN         reduce using rule 65 (assignment_operator -> DIV_ASSIGN .)


state 182

    (66) assignment_operator -> MOD_ASSIGN .

    INC_OP          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    DEC_OP          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    SIZEOF          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    BANDOP          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    MULTOP          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    PLUSOP          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    MINUSOP         reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    BNOP            reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    NOTSYM          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    NUMBER          reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    STRING_LITERAL  reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    SCHAR           reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)
    LRPAREN         reduce using rule 66 (assignment_operator -> MOD_ASSIGN .)


state 183

    (67) assignment_operator -> ADD_ASSIGN .

    INC_OP          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    DEC_OP          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    SIZEOF          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    BANDOP          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    MULTOP          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    PLUSOP          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    MINUSOP         reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    BNOP            reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    NOTSYM          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    IDENTIFIER      reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    NUMBER          reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    SCHAR           reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)
    LRPAREN         reduce using rule 67 (assignment_operator -> ADD_ASSIGN .)


state 184

    (68) assignment_operator -> SUB_ASSIGN .

    INC_OP          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    DEC_OP          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    SIZEOF          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    BANDOP          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    MULTOP          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    PLUSOP          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    MINUSOP         reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    BNOP            reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    NOTSYM          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    IDENTIFIER      reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    NUMBER          reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    SCHAR           reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)
    LRPAREN         reduce using rule 68 (assignment_operator -> SUB_ASSIGN .)


state 185

    (69) assignment_operator -> LEFT_ASSIGN .

    INC_OP          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    DEC_OP          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    SIZEOF          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    BANDOP          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    MULTOP          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    PLUSOP          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    MINUSOP         reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    BNOP            reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    NOTSYM          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    IDENTIFIER      reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    NUMBER          reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    SCHAR           reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)
    LRPAREN         reduce using rule 69 (assignment_operator -> LEFT_ASSIGN .)


state 186

    (70) assignment_operator -> RIGHT_ASSIGN .

    INC_OP          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    DEC_OP          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    SIZEOF          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    BANDOP          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    MULTOP          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    PLUSOP          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    MINUSOP         reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    BNOP            reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    NOTSYM          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    IDENTIFIER      reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    NUMBER          reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    STRING_LITERAL  reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    SCHAR           reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)
    LRPAREN         reduce using rule 70 (assignment_operator -> RIGHT_ASSIGN .)


state 187

    (71) assignment_operator -> AND_ASSIGN .

    INC_OP          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    DEC_OP          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    SIZEOF          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    BANDOP          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    MULTOP          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    PLUSOP          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    MINUSOP         reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    BNOP            reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    NOTSYM          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    NUMBER          reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    SCHAR           reduce using rule 71 (assignment_operator -> AND_ASSIGN .)
    LRPAREN         reduce using rule 71 (assignment_operator -> AND_ASSIGN .)


state 188

    (72) assignment_operator -> XOR_ASSIGN .

    INC_OP          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    DEC_OP          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    SIZEOF          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    BANDOP          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    MULTOP          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    PLUSOP          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    MINUSOP         reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    BNOP            reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    NOTSYM          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    NUMBER          reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    SCHAR           reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)
    LRPAREN         reduce using rule 72 (assignment_operator -> XOR_ASSIGN .)


state 189

    (73) assignment_operator -> OR_ASSIGN .

    INC_OP          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    DEC_OP          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    SIZEOF          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    BANDOP          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    MULTOP          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    PLUSOP          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    MINUSOP         reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    BNOP            reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    NOTSYM          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    NUMBER          reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    SCHAR           reduce using rule 73 (assignment_operator -> OR_ASSIGN .)
    LRPAREN         reduce using rule 73 (assignment_operator -> OR_ASSIGN .)


state 190

    (60) conditional_expression -> logical_or_expression QUESMARK . expression COLON conditional_expression
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    logical_or_expression          shift and go to state 98
    expression                     shift and go to state 265
    conditional_expression         shift and go to state 96
    assignment_expression          shift and go to state 95
    unary_expression               shift and go to state 97
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 191

    (58) logical_or_expression -> logical_or_expression OR_OP . logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    logical_and_expression         shift and go to state 266
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 192

    (8) postfix_expression -> postfix_expression LSPAREN . expression RSPAREN
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    postfix_expression             shift and go to state 99
    expression                     shift and go to state 267
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 193

    (9) postfix_expression -> postfix_expression LRPAREN . RRPAREN
    (10) postfix_expression -> postfix_expression LRPAREN . argument_expression_list RRPAREN
    (15) argument_expression_list -> . assignment_expression
    (16) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RRPAREN         shift and go to state 268
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    postfix_expression             shift and go to state 99
    argument_expression_list       shift and go to state 269
    assignment_expression          shift and go to state 270
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 194

    (11) postfix_expression -> postfix_expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 271


state 195

    (12) postfix_expression -> postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER      shift and go to state 272


state 196

    (13) postfix_expression -> postfix_expression INC_OP .

    LSPAREN         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    LRPAREN         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    DOT             reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    PTR_OP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    INC_OP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    DEC_OP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    EQUAL           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    MUL_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    DIV_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    MOD_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    ADD_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    SUB_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_ASSIGN     reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_ASSIGN    reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    AND_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    XOR_ASSIGN      reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    OR_ASSIGN       reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    MULTOP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    DIVOP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    MODOP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    PLUSOP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    MINUSOP         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_OP         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_OP        reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    LTCOMP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    GTCOMP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    LE_OP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    GE_OP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    EQ_OP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    NE_OP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    BANDOP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    XOROP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    BOROP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    AND_OP          reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    QUESMARK        reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    OR_OP           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    SEMICOLON       reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    COMMA           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    RSPAREN         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    COLON           reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    RRPAREN         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)
    RCPAREN         reduce using rule 13 (postfix_expression -> postfix_expression INC_OP .)


state 197

    (14) postfix_expression -> postfix_expression DEC_OP .

    LSPAREN         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    LRPAREN         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    DOT             reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    PTR_OP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    INC_OP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    DEC_OP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    EQUAL           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    MUL_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    DIV_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    MOD_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    ADD_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    SUB_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_ASSIGN     reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_ASSIGN    reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    AND_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    XOR_ASSIGN      reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    OR_ASSIGN       reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    MULTOP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    DIVOP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    MODOP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    PLUSOP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    MINUSOP         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_OP         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_OP        reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    LTCOMP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    GTCOMP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    LE_OP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    GE_OP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    EQ_OP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    NE_OP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    BANDOP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    XOROP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    BOROP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    AND_OP          reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    QUESMARK        reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    OR_OP           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    SEMICOLON       reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    COMMA           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    RSPAREN         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    COLON           reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    RRPAREN         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)
    RCPAREN         reduce using rule 14 (postfix_expression -> postfix_expression DEC_OP .)


state 198

    (18) unary_expression -> INC_OP unary_expression .

    EQUAL           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    MULTOP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    DIVOP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    MODOP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    PLUSOP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    MINUSOP         reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    LEFT_OP         reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    RIGHT_OP        reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    LTCOMP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    GTCOMP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    LE_OP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    GE_OP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    EQ_OP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    NE_OP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    BANDOP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    XOROP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    BOROP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    AND_OP          reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    QUESMARK        reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    OR_OP           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    SEMICOLON       reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    COMMA           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    RSPAREN         reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    COLON           reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    RRPAREN         reduce using rule 18 (unary_expression -> INC_OP unary_expression .)
    RCPAREN         reduce using rule 18 (unary_expression -> INC_OP unary_expression .)


state 199

    (6) primary_expression -> LRPAREN . expression RRPAREN
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 166
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 200

    (19) unary_expression -> DEC_OP unary_expression .

    EQUAL           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    MULTOP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    DIVOP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    MODOP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    PLUSOP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    MINUSOP         reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    LEFT_OP         reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_OP        reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    LTCOMP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    GTCOMP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    LE_OP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    GE_OP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    EQ_OP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    NE_OP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    BANDOP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    XOROP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    BOROP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    AND_OP          reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    QUESMARK        reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    OR_OP           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    SEMICOLON       reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    COMMA           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    RSPAREN         reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    COLON           reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    RRPAREN         reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)
    RCPAREN         reduce using rule 19 (unary_expression -> DEC_OP unary_expression .)


state 201

    (20) unary_expression -> unary_operator cast_expression .

    EQUAL           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    MUL_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    DIV_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    MOD_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    ADD_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    SUB_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    LEFT_ASSIGN     reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    RIGHT_ASSIGN    reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    AND_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    XOR_ASSIGN      reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    OR_ASSIGN       reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    MULTOP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    DIVOP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    MODOP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    PLUSOP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    MINUSOP         reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    LEFT_OP         reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    RIGHT_OP        reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    LTCOMP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    GTCOMP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    LE_OP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    GE_OP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    EQ_OP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    NE_OP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    BANDOP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    XOROP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    BOROP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    AND_OP          reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    QUESMARK        reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    OR_OP           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    SEMICOLON       reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    RSPAREN         reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    COLON           reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    RRPAREN         reduce using rule 20 (unary_expression -> unary_operator cast_expression .)
    RCPAREN         reduce using rule 20 (unary_expression -> unary_operator cast_expression .)


state 202

    (21) unary_expression -> SIZEOF unary_expression .

    EQUAL           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    MUL_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    DIV_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    MOD_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    ADD_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    SUB_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    LEFT_ASSIGN     reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_ASSIGN    reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    AND_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    XOR_ASSIGN      reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    OR_ASSIGN       reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    MULTOP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    DIVOP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    MODOP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    PLUSOP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    MINUSOP         reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    LEFT_OP         reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_OP        reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    LTCOMP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    GTCOMP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    LE_OP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    GE_OP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    EQ_OP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    NE_OP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    BANDOP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    XOROP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    BOROP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    AND_OP          reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    QUESMARK        reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    OR_OP           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    SEMICOLON       reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    COMMA           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    RSPAREN         reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    COLON           reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    RRPAREN         reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)
    RCPAREN         reduce using rule 21 (unary_expression -> SIZEOF unary_expression .)


state 203

    (22) unary_expression -> SIZEOF LRPAREN . type_name RRPAREN
    (6) primary_expression -> LRPAREN . expression RRPAREN
    (156) type_name -> . specifier_qualifier_list
    (157) type_name -> . specifier_qualifier_list abstract_declarator
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    ENUM            shift and go to state 35
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    type_name                      shift and go to state 273
    expression                     shift and go to state 166
    specifier_qualifier_list       shift and go to state 168
    assignment_expression          shift and go to state 95
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    struct_or_union                shift and go to state 34
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 204

    (56) logical_and_expression -> logical_and_expression AND_OP . inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    inclusive_or_expression        shift and go to state 274
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 205

    (54) inclusive_or_expression -> inclusive_or_expression BOROP . exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    exclusive_or_expression        shift and go to state 275
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 206

    (52) exclusive_or_expression -> exclusive_or_expression XOROP . and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    and_expression                 shift and go to state 276
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 207

    (50) and_expression -> and_expression BANDOP . equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    equality_expression            shift and go to state 277
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 208

    (47) equality_expression -> equality_expression EQ_OP . relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    relational_expression          shift and go to state 278
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 209

    (48) equality_expression -> equality_expression NE_OP . relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    relational_expression          shift and go to state 279
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 210

    (42) relational_expression -> relational_expression LTCOMP . shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    shift_expression               shift and go to state 280
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 211

    (43) relational_expression -> relational_expression GTCOMP . shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    shift_expression               shift and go to state 281
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 212

    (44) relational_expression -> relational_expression LE_OP . shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    shift_expression               shift and go to state 282
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 213

    (45) relational_expression -> relational_expression GE_OP . shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    shift_expression               shift and go to state 283
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 214

    (39) shift_expression -> shift_expression LEFT_OP . additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    additive_expression            shift and go to state 284
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 215

    (40) shift_expression -> shift_expression RIGHT_OP . additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    additive_expression            shift and go to state 285
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 216

    (36) additive_expression -> additive_expression PLUSOP . multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    multiplicative_expression      shift and go to state 286
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 217

    (37) additive_expression -> additive_expression MINUSOP . multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    multiplicative_expression      shift and go to state 287
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 218

    (32) multiplicative_expression -> multiplicative_expression MULTOP . cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    cast_expression                shift and go to state 288
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 219

    (33) multiplicative_expression -> multiplicative_expression DIVOP . cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    cast_expression                shift and go to state 289
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 220

    (34) multiplicative_expression -> multiplicative_expression MODOP . cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    cast_expression                shift and go to state 290
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 221

    (136) direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .

    LSPAREN         reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    LRPAREN         reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    LCPAREN         reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    TYPEDEF         reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    EXTERN          reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    STATIC          reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    AUTO            reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    REGISTER        reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    VOID            reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    CHAR            reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    SHORT           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    INT             reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    LONG            reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    FLOAT           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    DOUBLE          reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    SIGNED          reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    UNSIGNED        reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    CONST           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    VOLATILE        reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    ENUM            reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    STRUCT          reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    UNION           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    CLASS           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    EQUAL           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    SEMICOLON       reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    COMMA           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    RRPAREN         reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)
    COLON           reduce using rule 136 (direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN .)


state 222

    (138) direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .

    LSPAREN         reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    LRPAREN         reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    LCPAREN         reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    TYPEDEF         reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    EXTERN          reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    STATIC          reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    AUTO            reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    REGISTER        reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    VOID            reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    CHAR            reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    SHORT           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    INT             reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    LONG            reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    FLOAT           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    DOUBLE          reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    SIGNED          reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    UNSIGNED        reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    CONST           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    VOLATILE        reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    ENUM            reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    STRUCT          reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    UNION           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    CLASS           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    EQUAL           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    SEMICOLON       reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    COMMA           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    RRPAREN         reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)
    COLON           reduce using rule 138 (direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN .)


state 223

    (139) direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .

    LSPAREN         reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    LRPAREN         reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    LCPAREN         reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    TYPEDEF         reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    EXTERN          reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    STATIC          reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    AUTO            reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    REGISTER        reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    VOID            reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    CHAR            reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    SHORT           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    INT             reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    LONG            reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    FLOAT           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    DOUBLE          reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    SIGNED          reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    UNSIGNED        reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    CONST           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    VOLATILE        reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    ENUM            reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    STRUCT          reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    UNION           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    CLASS           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    EQUAL           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    SEMICOLON       reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    COMMA           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    RRPAREN         reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)
    COLON           reduce using rule 139 (direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN .)


state 224

    (155) identifier_list -> identifier_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 291


state 225

    (148) parameter_type_list -> parameter_list COMMA . ELLIPSIS
    (150) parameter_list -> parameter_list COMMA . parameter_declaration
    (151) parameter_declaration -> . declaration_specifiers declarator
    (152) parameter_declaration -> . declaration_specifiers abstract_declarator
    (153) parameter_declaration -> . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    ELLIPSIS        shift and go to state 292
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    parameter_declaration          shift and go to state 293
    declaration_specifiers         shift and go to state 137
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 226

    (151) parameter_declaration -> declaration_specifiers declarator .

    COMMA           reduce using rule 151 (parameter_declaration -> declaration_specifiers declarator .)
    RRPAREN         reduce using rule 151 (parameter_declaration -> declaration_specifiers declarator .)


state 227

    (152) parameter_declaration -> declaration_specifiers abstract_declarator .

    COMMA           reduce using rule 152 (parameter_declaration -> declaration_specifiers abstract_declarator .)
    RRPAREN         reduce using rule 152 (parameter_declaration -> declaration_specifiers abstract_declarator .)


state 228

    (132) declarator -> pointer . direct_declarator
    (158) abstract_declarator -> pointer .
    (160) abstract_declarator -> pointer . direct_abstract_declarator
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN

    COMMA           reduce using rule 158 (abstract_declarator -> pointer .)
    RRPAREN         reduce using rule 158 (abstract_declarator -> pointer .)
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 230
    LSPAREN         shift and go to state 231

    direct_declarator              shift and go to state 52
    direct_abstract_declarator     shift and go to state 294

state 229

    (159) abstract_declarator -> direct_abstract_declarator .
    (164) direct_abstract_declarator -> direct_abstract_declarator . LSPAREN RSPAREN
    (165) direct_abstract_declarator -> direct_abstract_declarator . LSPAREN constant_expression RSPAREN
    (168) direct_abstract_declarator -> direct_abstract_declarator . LRPAREN RRPAREN
    (169) direct_abstract_declarator -> direct_abstract_declarator . LRPAREN parameter_type_list RRPAREN

    COMMA           reduce using rule 159 (abstract_declarator -> direct_abstract_declarator .)
    RRPAREN         reduce using rule 159 (abstract_declarator -> direct_abstract_declarator .)
    LSPAREN         shift and go to state 295
    LRPAREN         shift and go to state 296


state 230

    (135) direct_declarator -> LRPAREN . declarator RRPAREN
    (161) direct_abstract_declarator -> LRPAREN . abstract_declarator RRPAREN
    (166) direct_abstract_declarator -> LRPAREN . RRPAREN
    (167) direct_abstract_declarator -> LRPAREN . parameter_type_list RRPAREN
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (158) abstract_declarator -> . pointer
    (159) abstract_declarator -> . direct_abstract_declarator
    (160) abstract_declarator -> . pointer direct_abstract_declarator
    (147) parameter_type_list -> . parameter_list
    (148) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN
    (149) parameter_list -> . parameter_declaration
    (150) parameter_list -> . parameter_list COMMA parameter_declaration
    (151) parameter_declaration -> . declaration_specifiers declarator
    (152) parameter_declaration -> . declaration_specifiers abstract_declarator
    (153) parameter_declaration -> . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RRPAREN         shift and go to state 297
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 230
    LSPAREN         shift and go to state 231
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    declarator                     shift and go to state 58
    abstract_declarator            shift and go to state 298
    parameter_type_list            shift and go to state 299
    pointer                        shift and go to state 228
    direct_declarator              shift and go to state 12
    direct_abstract_declarator     shift and go to state 229
    parameter_list                 shift and go to state 134
    parameter_declaration          shift and go to state 136
    declaration_specifiers         shift and go to state 137
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 231

    (162) direct_abstract_declarator -> LSPAREN . RSPAREN
    (163) direct_abstract_declarator -> LSPAREN . constant_expression RSPAREN
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    RSPAREN         shift and go to state 300
    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 301
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 232

    (105) struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list . RCPAREN
    (112) struct_declaration_list -> struct_declaration_list . struct_declaration
    (113) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMICOLON
    (114) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (115) specifier_qualifier_list -> . type_specifier
    (116) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (117) specifier_qualifier_list -> . type_qualifier
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RCPAREN         shift and go to state 302
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    struct_or_union                shift and go to state 34
    struct_declaration             shift and go to state 234
    specifier_qualifier_list       shift and go to state 144
    type_specifier                 shift and go to state 145
    type_qualifier                 shift and go to state 146
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28

state 233

    (106) struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .

    TYPEDEF         reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    EXTERN          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    STATIC          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    AUTO            reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    REGISTER        reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    VOID            reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    CHAR            reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    SHORT           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    INT             reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    LONG            reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    FLOAT           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    DOUBLE          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    SIGNED          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    UNSIGNED        reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    CONST           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    VOLATILE        reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    ENUM            reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    STRUCT          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    UNION           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    CLASS           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    SEMICOLON       reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    MULTOP          reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    IDENTIFIER      reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    LRPAREN         reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    LSPAREN         reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    COMMA           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    RRPAREN         reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)
    COLON           reduce using rule 106 (struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN .)


state 234

    (112) struct_declaration_list -> struct_declaration_list struct_declaration .

    RCPAREN         reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOID            reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CHAR            reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SHORT           reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    INT             reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    LONG            reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    FLOAT           reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    DOUBLE          reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SIGNED          reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNSIGNED        reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CONST           reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOLATILE        reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    ENUM            reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    STRUCT          reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNION           reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CLASS           reduce using rule 112 (struct_declaration_list -> struct_declaration_list struct_declaration .)


state 235

    (113) struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMICOLON
    (119) struct_declarator_list -> struct_declarator_list . COMMA struct_declarator

    SEMICOLON       shift and go to state 303
    COMMA           shift and go to state 304


state 236

    (118) struct_declarator_list -> struct_declarator .

    SEMICOLON       reduce using rule 118 (struct_declarator_list -> struct_declarator .)
    COMMA           reduce using rule 118 (struct_declarator_list -> struct_declarator .)


state 237

    (120) struct_declarator -> declarator .
    (122) struct_declarator -> declarator . COLON constant_expression

    SEMICOLON       reduce using rule 120 (struct_declarator -> declarator .)
    COMMA           reduce using rule 120 (struct_declarator -> declarator .)
    COLON           shift and go to state 305


state 238

    (121) struct_declarator -> COLON . constant_expression
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 306
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 239

    (114) specifier_qualifier_list -> type_specifier specifier_qualifier_list .

    COLON           reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    MULTOP          reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    LRPAREN         reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    LSPAREN         reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    RRPAREN         reduce using rule 114 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)


state 240

    (116) specifier_qualifier_list -> type_qualifier specifier_qualifier_list .

    COLON           reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    MULTOP          reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    LRPAREN         reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    LSPAREN         reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    RRPAREN         reduce using rule 116 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)


state 241

    (123) enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .

    TYPEDEF         reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    EXTERN          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    STATIC          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    AUTO            reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    REGISTER        reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    VOID            reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    CHAR            reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    SHORT           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    INT             reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    LONG            reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    FLOAT           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    DOUBLE          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    SIGNED          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    UNSIGNED        reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    CONST           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    VOLATILE        reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    ENUM            reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    STRUCT          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    UNION           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    CLASS           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    SEMICOLON       reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    MULTOP          reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    IDENTIFIER      reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    LRPAREN         reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    LSPAREN         reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    COMMA           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    RRPAREN         reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)
    COLON           reduce using rule 123 (enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN .)


state 242

    (127) enumerator_list -> enumerator_list COMMA . enumerator
    (128) enumerator -> . IDENTIFIER
    (129) enumerator -> . IDENTIFIER EQUAL constant_expression

    IDENTIFIER      shift and go to state 149

    enumerator                     shift and go to state 307

state 243

    (129) enumerator -> IDENTIFIER EQUAL . constant_expression
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 308
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 244

    (124) enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list . RCPAREN
    (127) enumerator_list -> enumerator_list . COMMA enumerator

    RCPAREN         shift and go to state 309
    COMMA           shift and go to state 242


state 245

    (171) initializer -> LCPAREN initializer_list . RCPAREN
    (172) initializer -> LCPAREN initializer_list . COMMA RCPAREN
    (174) initializer_list -> initializer_list . COMMA initializer

    RCPAREN         shift and go to state 310
    COMMA           shift and go to state 311


state 246

    (173) initializer_list -> initializer .

    RCPAREN         reduce using rule 173 (initializer_list -> initializer .)
    COMMA           reduce using rule 173 (initializer_list -> initializer .)


state 247

    (187) compound_statement -> LCPAREN declaration_list statement_list RCPAREN .

    TYPEDEF         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    EXTERN          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    STATIC          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    AUTO            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    REGISTER        reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    VOID            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    CHAR            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SHORT           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    INT             reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    LONG            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    FLOAT           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    DOUBLE          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SIGNED          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    UNSIGNED        reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    CONST           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    VOLATILE        reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    MULTOP          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    IDENTIFIER      reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    LRPAREN         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    ENUM            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    STRUCT          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    UNION           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    CLASS           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    $end            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    RCPAREN         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    CASE            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    DEFAULT         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    LCPAREN         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SEMICOLON       reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    IF              reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SWITCH          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    WHILE           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    DO              reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    FOR             reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    GOTO            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    CONTINUE        reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    BREAK           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    RETURN          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    INC_OP          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    DEC_OP          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SIZEOF          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    BANDOP          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    PLUSOP          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    MINUSOP         reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    BNOP            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    NOTSYM          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    NUMBER          reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    STRING_LITERAL  reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    SCHAR           reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)
    ELSE            reduce using rule 187 (compound_statement -> LCPAREN declaration_list statement_list RCPAREN .)


state 248

    (181) labeled_statement -> IDENTIFIER COLON statement .

    RCPAREN         reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    IDENTIFIER      reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    CASE            reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    DEFAULT         reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    LCPAREN         reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    SEMICOLON       reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    IF              reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    SWITCH          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    WHILE           reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    DO              reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    FOR             reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    GOTO            reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    CONTINUE        reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    BREAK           reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    RETURN          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    INC_OP          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    DEC_OP          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    SIZEOF          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    BANDOP          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    MULTOP          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    PLUSOP          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    MINUSOP         reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    BNOP            reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    NOTSYM          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    NUMBER          reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    STRING_LITERAL  reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    SCHAR           reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    LRPAREN         reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)
    ELSE            reduce using rule 181 (labeled_statement -> IDENTIFIER COLON statement .)


state 249

    (182) labeled_statement -> CASE constant_expression COLON . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    statement                      shift and go to state 312
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 250

    (183) labeled_statement -> DEFAULT COLON statement .

    RCPAREN         reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    IDENTIFIER      reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    CASE            reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    DEFAULT         reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    LCPAREN         reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    SEMICOLON       reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    IF              reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    SWITCH          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    WHILE           reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    DO              reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    FOR             reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    GOTO            reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    CONTINUE        reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    BREAK           reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    RETURN          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    INC_OP          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    DEC_OP          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    SIZEOF          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    BANDOP          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    MULTOP          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    PLUSOP          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    MINUSOP         reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    BNOP            reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    NOTSYM          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    NUMBER          reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    STRING_LITERAL  reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    SCHAR           reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    LRPAREN         reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)
    ELSE            reduce using rule 183 (labeled_statement -> DEFAULT COLON statement .)


state 251

    (75) expression -> expression COMMA assignment_expression .

    SEMICOLON       reduce using rule 75 (expression -> expression COMMA assignment_expression .)
    COMMA           reduce using rule 75 (expression -> expression COMMA assignment_expression .)
    RRPAREN         reduce using rule 75 (expression -> expression COMMA assignment_expression .)
    COLON           reduce using rule 75 (expression -> expression COMMA assignment_expression .)
    RSPAREN         reduce using rule 75 (expression -> expression COMMA assignment_expression .)


state 252

    (194) selection_statement -> IF LRPAREN expression . RRPAREN statement
    (195) selection_statement -> IF LRPAREN expression . RRPAREN statement ELSE statement
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 313
    COMMA           shift and go to state 164


state 253

    (6) primary_expression -> LRPAREN expression RRPAREN .

    LSPAREN         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    LRPAREN         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    DOT             reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    PTR_OP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    INC_OP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    DEC_OP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    EQUAL           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    MUL_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    DIV_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    MOD_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    ADD_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    SUB_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    LEFT_ASSIGN     reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    RIGHT_ASSIGN    reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    AND_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    XOR_ASSIGN      reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    OR_ASSIGN       reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    MULTOP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    DIVOP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    MODOP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    PLUSOP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    MINUSOP         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    LEFT_OP         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    RIGHT_OP        reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    LTCOMP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    GTCOMP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    LE_OP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    GE_OP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    EQ_OP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    NE_OP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    BANDOP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    XOROP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    BOROP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    AND_OP          reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    QUESMARK        reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    OR_OP           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    SEMICOLON       reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    COMMA           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    RSPAREN         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    COLON           reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    RRPAREN         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)
    RCPAREN         reduce using rule 6 (primary_expression -> LRPAREN expression RRPAREN .)


state 254

    (30) cast_expression -> LRPAREN type_name RRPAREN . cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    cast_expression                shift and go to state 314
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 255

    (157) type_name -> specifier_qualifier_list abstract_declarator .

    RRPAREN         reduce using rule 157 (type_name -> specifier_qualifier_list abstract_declarator .)


state 256

    (158) abstract_declarator -> pointer .
    (160) abstract_declarator -> pointer . direct_abstract_declarator
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN

    RRPAREN         reduce using rule 158 (abstract_declarator -> pointer .)
    LRPAREN         shift and go to state 257
    LSPAREN         shift and go to state 231

    direct_abstract_declarator     shift and go to state 294

state 257

    (161) direct_abstract_declarator -> LRPAREN . abstract_declarator RRPAREN
    (166) direct_abstract_declarator -> LRPAREN . RRPAREN
    (167) direct_abstract_declarator -> LRPAREN . parameter_type_list RRPAREN
    (158) abstract_declarator -> . pointer
    (159) abstract_declarator -> . direct_abstract_declarator
    (160) abstract_declarator -> . pointer direct_abstract_declarator
    (147) parameter_type_list -> . parameter_list
    (148) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (161) direct_abstract_declarator -> . LRPAREN abstract_declarator RRPAREN
    (162) direct_abstract_declarator -> . LSPAREN RSPAREN
    (163) direct_abstract_declarator -> . LSPAREN constant_expression RSPAREN
    (164) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN RSPAREN
    (165) direct_abstract_declarator -> . direct_abstract_declarator LSPAREN constant_expression RSPAREN
    (166) direct_abstract_declarator -> . LRPAREN RRPAREN
    (167) direct_abstract_declarator -> . LRPAREN parameter_type_list RRPAREN
    (168) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN RRPAREN
    (169) direct_abstract_declarator -> . direct_abstract_declarator LRPAREN parameter_type_list RRPAREN
    (149) parameter_list -> . parameter_declaration
    (150) parameter_list -> . parameter_list COMMA parameter_declaration
    (151) parameter_declaration -> . declaration_specifiers declarator
    (152) parameter_declaration -> . declaration_specifiers abstract_declarator
    (153) parameter_declaration -> . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RRPAREN         shift and go to state 297
    MULTOP          shift and go to state 31
    LRPAREN         shift and go to state 257
    LSPAREN         shift and go to state 231
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    abstract_declarator            shift and go to state 298
    parameter_type_list            shift and go to state 299
    pointer                        shift and go to state 256
    direct_abstract_declarator     shift and go to state 229
    parameter_list                 shift and go to state 134
    parameter_declaration          shift and go to state 136
    declaration_specifiers         shift and go to state 137
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 258

    (196) selection_statement -> SWITCH LRPAREN expression . RRPAREN statement
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 315
    COMMA           shift and go to state 164


state 259

    (197) iteration_statement -> WHILE LRPAREN expression . RRPAREN statement
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 316
    COMMA           shift and go to state 164


state 260

    (198) iteration_statement -> DO statement WHILE . LRPAREN expression RRPAREN SEMICOLON

    LRPAREN         shift and go to state 317


state 261

    (199) iteration_statement -> FOR LRPAREN expression_statement . expression_statement RRPAREN statement
    (200) iteration_statement -> FOR LRPAREN expression_statement . expression_statement expression RRPAREN statement
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    SEMICOLON       shift and go to state 80
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression_statement           shift and go to state 318
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 262

    (201) jump_statement -> GOTO IDENTIFIER SEMICOLON .

    RCPAREN         reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    LCPAREN         reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    IF              reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    DO              reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    GOTO            reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    INC_OP          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    DEC_OP          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    SIZEOF          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    BANDOP          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    MULTOP          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    PLUSOP          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    MINUSOP         reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    BNOP            reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    NOTSYM          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    STRING_LITERAL  reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    SCHAR           reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    LRPAREN         reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 201 (jump_statement -> GOTO IDENTIFIER SEMICOLON .)


state 263

    (205) jump_statement -> RETURN expression SEMICOLON .

    RCPAREN         reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    LCPAREN         reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    SEMICOLON       reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    GOTO            reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    INC_OP          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    DEC_OP          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    SIZEOF          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    BANDOP          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    MULTOP          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    PLUSOP          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    MINUSOP         reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    BNOP            reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    NOTSYM          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    SCHAR           reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    LRPAREN         reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 205 (jump_statement -> RETURN expression SEMICOLON .)


state 264

    (62) assignment_expression -> unary_expression assignment_operator assignment_expression .

    SEMICOLON       reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COMMA           reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RRPAREN         reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RCPAREN         reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COLON           reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RSPAREN         reduce using rule 62 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 265

    (60) conditional_expression -> logical_or_expression QUESMARK expression . COLON conditional_expression
    (75) expression -> expression . COMMA assignment_expression

    COLON           shift and go to state 319
    COMMA           shift and go to state 164


state 266

    (58) logical_or_expression -> logical_or_expression OR_OP logical_and_expression .
    (56) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QUESMARK        reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    OR_OP           reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    SEMICOLON       reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COMMA           reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    RSPAREN         reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COLON           reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    RRPAREN         reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    RCPAREN         reduce using rule 58 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    AND_OP          shift and go to state 204


state 267

    (8) postfix_expression -> postfix_expression LSPAREN expression . RSPAREN
    (75) expression -> expression . COMMA assignment_expression

    RSPAREN         shift and go to state 320
    COMMA           shift and go to state 164


state 268

    (9) postfix_expression -> postfix_expression LRPAREN RRPAREN .

    LSPAREN         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    LRPAREN         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    DOT             reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    PTR_OP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    INC_OP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    DEC_OP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    EQUAL           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    MUL_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    DIV_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    MOD_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    ADD_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    SUB_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    LEFT_ASSIGN     reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    RIGHT_ASSIGN    reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    AND_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    XOR_ASSIGN      reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    OR_ASSIGN       reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    MULTOP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    DIVOP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    MODOP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    PLUSOP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    MINUSOP         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    LEFT_OP         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    RIGHT_OP        reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    LTCOMP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    GTCOMP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    LE_OP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    GE_OP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    EQ_OP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    NE_OP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    BANDOP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    XOROP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    BOROP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    AND_OP          reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    QUESMARK        reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    OR_OP           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    SEMICOLON       reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    COMMA           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    RSPAREN         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    COLON           reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    RRPAREN         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)
    RCPAREN         reduce using rule 9 (postfix_expression -> postfix_expression LRPAREN RRPAREN .)


state 269

    (10) postfix_expression -> postfix_expression LRPAREN argument_expression_list . RRPAREN
    (16) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RRPAREN         shift and go to state 321
    COMMA           shift and go to state 322


state 270

    (15) argument_expression_list -> assignment_expression .

    RRPAREN         reduce using rule 15 (argument_expression_list -> assignment_expression .)
    COMMA           reduce using rule 15 (argument_expression_list -> assignment_expression .)


state 271

    (11) postfix_expression -> postfix_expression DOT IDENTIFIER .

    LSPAREN         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LRPAREN         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    DOT             reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    PTR_OP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    INC_OP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    DEC_OP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    EQUAL           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MULTOP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    DIVOP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MODOP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    PLUSOP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MINUSOP         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LEFT_OP         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RIGHT_OP        reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LTCOMP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    GTCOMP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LE_OP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    GE_OP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    EQ_OP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    NE_OP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    BANDOP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    XOROP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    BOROP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    AND_OP          reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    QUESMARK        reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    OR_OP           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    COMMA           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RSPAREN         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    COLON           reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RRPAREN         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RCPAREN         reduce using rule 11 (postfix_expression -> postfix_expression DOT IDENTIFIER .)


state 272

    (12) postfix_expression -> postfix_expression PTR_OP IDENTIFIER .

    LSPAREN         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    LRPAREN         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    DOT             reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    PTR_OP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    INC_OP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    DEC_OP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    EQUAL           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    AND_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    OR_ASSIGN       reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    MULTOP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    DIVOP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    MODOP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    PLUSOP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    MINUSOP         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    LEFT_OP         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    RIGHT_OP        reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    LTCOMP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    GTCOMP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    LE_OP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    GE_OP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    EQ_OP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    NE_OP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    BANDOP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    XOROP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    BOROP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    AND_OP          reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    QUESMARK        reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    OR_OP           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    SEMICOLON       reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    COMMA           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    RSPAREN         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    COLON           reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    RRPAREN         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)
    RCPAREN         reduce using rule 12 (postfix_expression -> postfix_expression PTR_OP IDENTIFIER .)


state 273

    (22) unary_expression -> SIZEOF LRPAREN type_name . RRPAREN

    RRPAREN         shift and go to state 323


state 274

    (56) logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .
    (54) inclusive_or_expression -> inclusive_or_expression . BOROP exclusive_or_expression

    AND_OP          reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    QUESMARK        reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    OR_OP           reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    SEMICOLON       reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COMMA           reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    RSPAREN         reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COLON           reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    RRPAREN         reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    RCPAREN         reduce using rule 56 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    BOROP           shift and go to state 205


state 275

    (54) inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .
    (52) exclusive_or_expression -> exclusive_or_expression . XOROP and_expression

    BOROP           reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    AND_OP          reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    QUESMARK        reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    OR_OP           reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    SEMICOLON       reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    COMMA           reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    RSPAREN         reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    COLON           reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    RRPAREN         reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    RCPAREN         reduce using rule 54 (inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression .)
    XOROP           shift and go to state 206


state 276

    (52) exclusive_or_expression -> exclusive_or_expression XOROP and_expression .
    (50) and_expression -> and_expression . BANDOP equality_expression

    XOROP           reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    BOROP           reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    AND_OP          reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    QUESMARK        reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    OR_OP           reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    SEMICOLON       reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    COMMA           reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    RSPAREN         reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    COLON           reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    RRPAREN         reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    RCPAREN         reduce using rule 52 (exclusive_or_expression -> exclusive_or_expression XOROP and_expression .)
    BANDOP          shift and go to state 207


state 277

    (50) and_expression -> and_expression BANDOP equality_expression .
    (47) equality_expression -> equality_expression . EQ_OP relational_expression
    (48) equality_expression -> equality_expression . NE_OP relational_expression

    BANDOP          reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    XOROP           reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    BOROP           reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    AND_OP          reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    QUESMARK        reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    OR_OP           reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    SEMICOLON       reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    COMMA           reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    RSPAREN         reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    COLON           reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    RRPAREN         reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    RCPAREN         reduce using rule 50 (and_expression -> and_expression BANDOP equality_expression .)
    EQ_OP           shift and go to state 208
    NE_OP           shift and go to state 209


state 278

    (47) equality_expression -> equality_expression EQ_OP relational_expression .
    (42) relational_expression -> relational_expression . LTCOMP shift_expression
    (43) relational_expression -> relational_expression . GTCOMP shift_expression
    (44) relational_expression -> relational_expression . LE_OP shift_expression
    (45) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    NE_OP           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    BANDOP          reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    XOROP           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    BOROP           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    AND_OP          reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    QUESMARK        reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    OR_OP           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    SEMICOLON       reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COMMA           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    RSPAREN         reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COLON           reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    RRPAREN         reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    RCPAREN         reduce using rule 47 (equality_expression -> equality_expression EQ_OP relational_expression .)
    LTCOMP          shift and go to state 210
    GTCOMP          shift and go to state 211
    LE_OP           shift and go to state 212
    GE_OP           shift and go to state 213


state 279

    (48) equality_expression -> equality_expression NE_OP relational_expression .
    (42) relational_expression -> relational_expression . LTCOMP shift_expression
    (43) relational_expression -> relational_expression . GTCOMP shift_expression
    (44) relational_expression -> relational_expression . LE_OP shift_expression
    (45) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    NE_OP           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    BANDOP          reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    XOROP           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    BOROP           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    AND_OP          reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    QUESMARK        reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    OR_OP           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    SEMICOLON       reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    COMMA           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    RSPAREN         reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    COLON           reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    RRPAREN         reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    RCPAREN         reduce using rule 48 (equality_expression -> equality_expression NE_OP relational_expression .)
    LTCOMP          shift and go to state 210
    GTCOMP          shift and go to state 211
    LE_OP           shift and go to state 212
    GE_OP           shift and go to state 213


state 280

    (42) relational_expression -> relational_expression LTCOMP shift_expression .
    (39) shift_expression -> shift_expression . LEFT_OP additive_expression
    (40) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LTCOMP          reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    GTCOMP          reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    LE_OP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    GE_OP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    EQ_OP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    NE_OP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    BANDOP          reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    XOROP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    BOROP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    AND_OP          reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    QUESMARK        reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    OR_OP           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    SEMICOLON       reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    COMMA           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    RSPAREN         reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    COLON           reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    RRPAREN         reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    RCPAREN         reduce using rule 42 (relational_expression -> relational_expression LTCOMP shift_expression .)
    LEFT_OP         shift and go to state 214
    RIGHT_OP        shift and go to state 215


state 281

    (43) relational_expression -> relational_expression GTCOMP shift_expression .
    (39) shift_expression -> shift_expression . LEFT_OP additive_expression
    (40) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LTCOMP          reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    GTCOMP          reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    LE_OP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    GE_OP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    EQ_OP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    NE_OP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    BANDOP          reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    XOROP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    BOROP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    AND_OP          reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    QUESMARK        reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    OR_OP           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    SEMICOLON       reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    COMMA           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    RSPAREN         reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    COLON           reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    RRPAREN         reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    RCPAREN         reduce using rule 43 (relational_expression -> relational_expression GTCOMP shift_expression .)
    LEFT_OP         shift and go to state 214
    RIGHT_OP        shift and go to state 215


state 282

    (44) relational_expression -> relational_expression LE_OP shift_expression .
    (39) shift_expression -> shift_expression . LEFT_OP additive_expression
    (40) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LTCOMP          reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    GTCOMP          reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    LE_OP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    GE_OP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    EQ_OP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    NE_OP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    BANDOP          reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    XOROP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    BOROP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    AND_OP          reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    QUESMARK        reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    OR_OP           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    SEMICOLON       reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    COMMA           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    RSPAREN         reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    COLON           reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    RRPAREN         reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    RCPAREN         reduce using rule 44 (relational_expression -> relational_expression LE_OP shift_expression .)
    LEFT_OP         shift and go to state 214
    RIGHT_OP        shift and go to state 215


state 283

    (45) relational_expression -> relational_expression GE_OP shift_expression .
    (39) shift_expression -> shift_expression . LEFT_OP additive_expression
    (40) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LTCOMP          reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    GTCOMP          reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    LE_OP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    GE_OP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    EQ_OP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    NE_OP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    BANDOP          reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    XOROP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    BOROP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    AND_OP          reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    QUESMARK        reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    OR_OP           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    SEMICOLON       reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    COMMA           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    RSPAREN         reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    COLON           reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    RRPAREN         reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    RCPAREN         reduce using rule 45 (relational_expression -> relational_expression GE_OP shift_expression .)
    LEFT_OP         shift and go to state 214
    RIGHT_OP        shift and go to state 215


state 284

    (39) shift_expression -> shift_expression LEFT_OP additive_expression .
    (36) additive_expression -> additive_expression . PLUSOP multiplicative_expression
    (37) additive_expression -> additive_expression . MINUSOP multiplicative_expression

    LEFT_OP         reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RIGHT_OP        reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LTCOMP          reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GTCOMP          reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LE_OP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GE_OP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    EQ_OP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    NE_OP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    BANDOP          reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    XOROP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    BOROP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    AND_OP          reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    QUESMARK        reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    OR_OP           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    SEMICOLON       reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COMMA           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RSPAREN         reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COLON           reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RRPAREN         reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RCPAREN         reduce using rule 39 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    PLUSOP          shift and go to state 216
    MINUSOP         shift and go to state 217


state 285

    (40) shift_expression -> shift_expression RIGHT_OP additive_expression .
    (36) additive_expression -> additive_expression . PLUSOP multiplicative_expression
    (37) additive_expression -> additive_expression . MINUSOP multiplicative_expression

    LEFT_OP         reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RIGHT_OP        reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LTCOMP          reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GTCOMP          reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LE_OP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GE_OP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    EQ_OP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    NE_OP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    BANDOP          reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    XOROP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    BOROP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    AND_OP          reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    QUESMARK        reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    OR_OP           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    SEMICOLON       reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COMMA           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RSPAREN         reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COLON           reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RRPAREN         reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RCPAREN         reduce using rule 40 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    PLUSOP          shift and go to state 216
    MINUSOP         shift and go to state 217


state 286

    (36) additive_expression -> additive_expression PLUSOP multiplicative_expression .
    (32) multiplicative_expression -> multiplicative_expression . MULTOP cast_expression
    (33) multiplicative_expression -> multiplicative_expression . DIVOP cast_expression
    (34) multiplicative_expression -> multiplicative_expression . MODOP cast_expression

    PLUSOP          reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    MINUSOP         reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    LEFT_OP         reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    RIGHT_OP        reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    LTCOMP          reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    GTCOMP          reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    LE_OP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    GE_OP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    EQ_OP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    NE_OP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    BANDOP          reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    XOROP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    BOROP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    AND_OP          reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    QUESMARK        reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    OR_OP           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    SEMICOLON       reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    COMMA           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    RSPAREN         reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    COLON           reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    RRPAREN         reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    RCPAREN         reduce using rule 36 (additive_expression -> additive_expression PLUSOP multiplicative_expression .)
    MULTOP          shift and go to state 218
    DIVOP           shift and go to state 219
    MODOP           shift and go to state 220


state 287

    (37) additive_expression -> additive_expression MINUSOP multiplicative_expression .
    (32) multiplicative_expression -> multiplicative_expression . MULTOP cast_expression
    (33) multiplicative_expression -> multiplicative_expression . DIVOP cast_expression
    (34) multiplicative_expression -> multiplicative_expression . MODOP cast_expression

    PLUSOP          reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    MINUSOP         reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    LEFT_OP         reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    RIGHT_OP        reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    LTCOMP          reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    GTCOMP          reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    LE_OP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    GE_OP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    EQ_OP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    NE_OP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    BANDOP          reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    XOROP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    BOROP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    AND_OP          reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    QUESMARK        reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    OR_OP           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    SEMICOLON       reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    COMMA           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    RSPAREN         reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    COLON           reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    RRPAREN         reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    RCPAREN         reduce using rule 37 (additive_expression -> additive_expression MINUSOP multiplicative_expression .)
    MULTOP          shift and go to state 218
    DIVOP           shift and go to state 219
    MODOP           shift and go to state 220


state 288

    (32) multiplicative_expression -> multiplicative_expression MULTOP cast_expression .

    MULTOP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    DIVOP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    MODOP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    PLUSOP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    MINUSOP         reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    LEFT_OP         reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    RIGHT_OP        reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    LTCOMP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    GTCOMP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    LE_OP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    GE_OP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    EQ_OP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    NE_OP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    BANDOP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    XOROP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    BOROP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    AND_OP          reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    QUESMARK        reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    OR_OP           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    SEMICOLON       reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    COMMA           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    RSPAREN         reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    COLON           reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    RRPAREN         reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)
    RCPAREN         reduce using rule 32 (multiplicative_expression -> multiplicative_expression MULTOP cast_expression .)


state 289

    (33) multiplicative_expression -> multiplicative_expression DIVOP cast_expression .

    MULTOP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    DIVOP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    MODOP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    PLUSOP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    MINUSOP         reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    LEFT_OP         reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    RIGHT_OP        reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    LTCOMP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    GTCOMP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    LE_OP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    GE_OP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    EQ_OP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    NE_OP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    BANDOP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    XOROP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    BOROP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    AND_OP          reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    QUESMARK        reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    OR_OP           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    SEMICOLON       reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    COMMA           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    RSPAREN         reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    COLON           reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    RRPAREN         reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)
    RCPAREN         reduce using rule 33 (multiplicative_expression -> multiplicative_expression DIVOP cast_expression .)


state 290

    (34) multiplicative_expression -> multiplicative_expression MODOP cast_expression .

    MULTOP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    DIVOP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    MODOP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    PLUSOP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    MINUSOP         reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    LEFT_OP         reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    RIGHT_OP        reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    LTCOMP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    GTCOMP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    LE_OP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    GE_OP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    EQ_OP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    NE_OP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    BANDOP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    XOROP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    BOROP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    AND_OP          reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    QUESMARK        reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    OR_OP           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    SEMICOLON       reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    COMMA           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    RSPAREN         reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    COLON           reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    RRPAREN         reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)
    RCPAREN         reduce using rule 34 (multiplicative_expression -> multiplicative_expression MODOP cast_expression .)


state 291

    (155) identifier_list -> identifier_list COMMA IDENTIFIER .

    RRPAREN         reduce using rule 155 (identifier_list -> identifier_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 155 (identifier_list -> identifier_list COMMA IDENTIFIER .)


state 292

    (148) parameter_type_list -> parameter_list COMMA ELLIPSIS .

    RRPAREN         reduce using rule 148 (parameter_type_list -> parameter_list COMMA ELLIPSIS .)


state 293

    (150) parameter_list -> parameter_list COMMA parameter_declaration .

    COMMA           reduce using rule 150 (parameter_list -> parameter_list COMMA parameter_declaration .)
    RRPAREN         reduce using rule 150 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 294

    (160) abstract_declarator -> pointer direct_abstract_declarator .
    (164) direct_abstract_declarator -> direct_abstract_declarator . LSPAREN RSPAREN
    (165) direct_abstract_declarator -> direct_abstract_declarator . LSPAREN constant_expression RSPAREN
    (168) direct_abstract_declarator -> direct_abstract_declarator . LRPAREN RRPAREN
    (169) direct_abstract_declarator -> direct_abstract_declarator . LRPAREN parameter_type_list RRPAREN

    COMMA           reduce using rule 160 (abstract_declarator -> pointer direct_abstract_declarator .)
    RRPAREN         reduce using rule 160 (abstract_declarator -> pointer direct_abstract_declarator .)
    LSPAREN         shift and go to state 295
    LRPAREN         shift and go to state 296


state 295

    (164) direct_abstract_declarator -> direct_abstract_declarator LSPAREN . RSPAREN
    (165) direct_abstract_declarator -> direct_abstract_declarator LSPAREN . constant_expression RSPAREN
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    RSPAREN         shift and go to state 324
    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 325
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 296

    (168) direct_abstract_declarator -> direct_abstract_declarator LRPAREN . RRPAREN
    (169) direct_abstract_declarator -> direct_abstract_declarator LRPAREN . parameter_type_list RRPAREN
    (147) parameter_type_list -> . parameter_list
    (148) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (149) parameter_list -> . parameter_declaration
    (150) parameter_list -> . parameter_list COMMA parameter_declaration
    (151) parameter_declaration -> . declaration_specifiers declarator
    (152) parameter_declaration -> . declaration_specifiers abstract_declarator
    (153) parameter_declaration -> . declaration_specifiers
    (79) declaration_specifiers -> . storage_class_specifier
    (80) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (81) declaration_specifiers -> . type_specifier
    (82) declaration_specifiers -> . type_specifier declaration_specifiers
    (83) declaration_specifiers -> . type_qualifier
    (84) declaration_specifiers -> . type_qualifier declaration_specifiers
    (89) storage_class_specifier -> . TYPEDEF
    (90) storage_class_specifier -> . EXTERN
    (91) storage_class_specifier -> . STATIC
    (92) storage_class_specifier -> . AUTO
    (93) storage_class_specifier -> . REGISTER
    (94) type_specifier -> . VOID
    (95) type_specifier -> . CHAR
    (96) type_specifier -> . SHORT
    (97) type_specifier -> . INT
    (98) type_specifier -> . LONG
    (99) type_specifier -> . FLOAT
    (100) type_specifier -> . DOUBLE
    (101) type_specifier -> . SIGNED
    (102) type_specifier -> . UNSIGNED
    (103) type_specifier -> . struct_or_union_specifier
    (104) type_specifier -> . enum_specifier
    (130) type_qualifier -> . CONST
    (131) type_qualifier -> . VOLATILE
    (105) struct_or_union_specifier -> . struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN
    (106) struct_or_union_specifier -> . struct_or_union LCPAREN struct_declaration_list RCPAREN
    (107) struct_or_union_specifier -> . struct_or_union IDENTIFIER
    (123) enum_specifier -> . ENUM LCPAREN enumerator_list RCPAREN
    (124) enum_specifier -> . ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN
    (125) enum_specifier -> . ENUM IDENTIFIER
    (108) struct_or_union -> . STRUCT
    (109) struct_or_union -> . UNION
    (110) struct_or_union -> . CLASS

    RRPAREN         shift and go to state 326
    TYPEDEF         shift and go to state 13
    EXTERN          shift and go to state 14
    STATIC          shift and go to state 15
    AUTO            shift and go to state 16
    REGISTER        shift and go to state 17
    VOID            shift and go to state 18
    CHAR            shift and go to state 19
    SHORT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    FLOAT           shift and go to state 23
    DOUBLE          shift and go to state 24
    SIGNED          shift and go to state 25
    UNSIGNED        shift and go to state 26
    CONST           shift and go to state 29
    VOLATILE        shift and go to state 30
    ENUM            shift and go to state 35
    STRUCT          shift and go to state 36
    UNION           shift and go to state 37
    CLASS           shift and go to state 38

    parameter_type_list            shift and go to state 327
    parameter_list                 shift and go to state 134
    parameter_declaration          shift and go to state 136
    declaration_specifiers         shift and go to state 137
    storage_class_specifier        shift and go to state 8
    type_specifier                 shift and go to state 9
    type_qualifier                 shift and go to state 10
    struct_or_union_specifier      shift and go to state 27
    enum_specifier                 shift and go to state 28
    struct_or_union                shift and go to state 34

state 297

    (166) direct_abstract_declarator -> LRPAREN RRPAREN .

    LSPAREN         reduce using rule 166 (direct_abstract_declarator -> LRPAREN RRPAREN .)
    LRPAREN         reduce using rule 166 (direct_abstract_declarator -> LRPAREN RRPAREN .)
    COMMA           reduce using rule 166 (direct_abstract_declarator -> LRPAREN RRPAREN .)
    RRPAREN         reduce using rule 166 (direct_abstract_declarator -> LRPAREN RRPAREN .)


state 298

    (161) direct_abstract_declarator -> LRPAREN abstract_declarator . RRPAREN

    RRPAREN         shift and go to state 328


state 299

    (167) direct_abstract_declarator -> LRPAREN parameter_type_list . RRPAREN

    RRPAREN         shift and go to state 329


state 300

    (162) direct_abstract_declarator -> LSPAREN RSPAREN .

    LSPAREN         reduce using rule 162 (direct_abstract_declarator -> LSPAREN RSPAREN .)
    LRPAREN         reduce using rule 162 (direct_abstract_declarator -> LSPAREN RSPAREN .)
    COMMA           reduce using rule 162 (direct_abstract_declarator -> LSPAREN RSPAREN .)
    RRPAREN         reduce using rule 162 (direct_abstract_declarator -> LSPAREN RSPAREN .)


state 301

    (163) direct_abstract_declarator -> LSPAREN constant_expression . RSPAREN

    RSPAREN         shift and go to state 330


state 302

    (105) struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .

    TYPEDEF         reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    EXTERN          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    STATIC          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    AUTO            reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    REGISTER        reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    VOID            reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    CHAR            reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    SHORT           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    INT             reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    LONG            reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    FLOAT           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    DOUBLE          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    SIGNED          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    UNSIGNED        reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    CONST           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    VOLATILE        reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    ENUM            reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    STRUCT          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    UNION           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    CLASS           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    SEMICOLON       reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    MULTOP          reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    IDENTIFIER      reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    LRPAREN         reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    LSPAREN         reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    COMMA           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    RRPAREN         reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)
    COLON           reduce using rule 105 (struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN .)


state 303

    (113) struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .

    RCPAREN         reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    VOID            reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    CHAR            reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    SHORT           reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    INT             reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    LONG            reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    FLOAT           reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    DOUBLE          reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    SIGNED          reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    UNSIGNED        reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    CONST           reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    VOLATILE        reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    ENUM            reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    STRUCT          reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    UNION           reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)
    CLASS           reduce using rule 113 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON .)


state 304

    (119) struct_declarator_list -> struct_declarator_list COMMA . struct_declarator
    (120) struct_declarator -> . declarator
    (121) struct_declarator -> . COLON constant_expression
    (122) struct_declarator -> . declarator COLON constant_expression
    (132) declarator -> . pointer direct_declarator
    (133) declarator -> . direct_declarator
    (141) pointer -> . MULTOP
    (142) pointer -> . MULTOP type_qualifier_list
    (143) pointer -> . MULTOP pointer
    (144) pointer -> . MULTOP type_qualifier_list pointer
    (134) direct_declarator -> . IDENTIFIER
    (135) direct_declarator -> . LRPAREN declarator RRPAREN
    (136) direct_declarator -> . direct_declarator LSPAREN constant_expression RSPAREN
    (137) direct_declarator -> . direct_declarator LSPAREN RSPAREN
    (138) direct_declarator -> . direct_declarator LRPAREN parameter_type_list RRPAREN
    (139) direct_declarator -> . direct_declarator LRPAREN identifier_list RRPAREN
    (140) direct_declarator -> . direct_declarator LRPAREN RRPAREN

    COLON           shift and go to state 238
    MULTOP          shift and go to state 31
    IDENTIFIER      shift and go to state 32
    LRPAREN         shift and go to state 33

    struct_declarator              shift and go to state 331
    declarator                     shift and go to state 237
    pointer                        shift and go to state 11
    direct_declarator              shift and go to state 12

state 305

    (122) struct_declarator -> declarator COLON . constant_expression
    (76) constant_expression -> . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    constant_expression            shift and go to state 332
    conditional_expression         shift and go to state 127
    logical_or_expression          shift and go to state 98
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 306

    (121) struct_declarator -> COLON constant_expression .

    SEMICOLON       reduce using rule 121 (struct_declarator -> COLON constant_expression .)
    COMMA           reduce using rule 121 (struct_declarator -> COLON constant_expression .)


state 307

    (127) enumerator_list -> enumerator_list COMMA enumerator .

    RCPAREN         reduce using rule 127 (enumerator_list -> enumerator_list COMMA enumerator .)
    COMMA           reduce using rule 127 (enumerator_list -> enumerator_list COMMA enumerator .)


state 308

    (129) enumerator -> IDENTIFIER EQUAL constant_expression .

    RCPAREN         reduce using rule 129 (enumerator -> IDENTIFIER EQUAL constant_expression .)
    COMMA           reduce using rule 129 (enumerator -> IDENTIFIER EQUAL constant_expression .)


state 309

    (124) enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .

    TYPEDEF         reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    EXTERN          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    STATIC          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    AUTO            reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    REGISTER        reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    VOID            reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    CHAR            reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    SHORT           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    INT             reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    LONG            reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    FLOAT           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    DOUBLE          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    SIGNED          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    UNSIGNED        reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    CONST           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    VOLATILE        reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    ENUM            reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    STRUCT          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    UNION           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    CLASS           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    SEMICOLON       reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    MULTOP          reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    IDENTIFIER      reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    LRPAREN         reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    LSPAREN         reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    COMMA           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    RRPAREN         reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)
    COLON           reduce using rule 124 (enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN .)


state 310

    (171) initializer -> LCPAREN initializer_list RCPAREN .

    SEMICOLON       reduce using rule 171 (initializer -> LCPAREN initializer_list RCPAREN .)
    COMMA           reduce using rule 171 (initializer -> LCPAREN initializer_list RCPAREN .)
    RCPAREN         reduce using rule 171 (initializer -> LCPAREN initializer_list RCPAREN .)


state 311

    (172) initializer -> LCPAREN initializer_list COMMA . RCPAREN
    (174) initializer_list -> initializer_list COMMA . initializer
    (170) initializer -> . assignment_expression
    (171) initializer -> . LCPAREN initializer_list RCPAREN
    (172) initializer -> . LCPAREN initializer_list COMMA RCPAREN
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RCPAREN         shift and go to state 333
    LCPAREN         shift and go to state 154
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    initializer                    shift and go to state 334
    assignment_expression          shift and go to state 153
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 312

    (182) labeled_statement -> CASE constant_expression COLON statement .

    RCPAREN         reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    IDENTIFIER      reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    CASE            reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    DEFAULT         reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    LCPAREN         reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    SEMICOLON       reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    IF              reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    SWITCH          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    WHILE           reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    DO              reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    FOR             reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    GOTO            reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    CONTINUE        reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    BREAK           reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    RETURN          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    INC_OP          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    DEC_OP          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    SIZEOF          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    BANDOP          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    MULTOP          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUSOP          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUSOP         reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    BNOP            reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    NOTSYM          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    NUMBER          reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    STRING_LITERAL  reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    SCHAR           reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    LRPAREN         reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)
    ELSE            reduce using rule 182 (labeled_statement -> CASE constant_expression COLON statement .)


state 313

    (194) selection_statement -> IF LRPAREN expression RRPAREN . statement
    (195) selection_statement -> IF LRPAREN expression RRPAREN . statement ELSE statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 84
    statement                      shift and go to state 335
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 314

    (30) cast_expression -> LRPAREN type_name RRPAREN cast_expression .

    MULTOP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    DIVOP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    MODOP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    PLUSOP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    MINUSOP         reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    LEFT_OP         reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    RIGHT_OP        reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    LTCOMP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    GTCOMP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    LE_OP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    GE_OP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    EQ_OP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    NE_OP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    BANDOP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    XOROP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    BOROP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    AND_OP          reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    QUESMARK        reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    OR_OP           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    SEMICOLON       reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    COMMA           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    RSPAREN         reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    COLON           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    RRPAREN         reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    EQUAL           reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    MUL_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    DIV_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    MOD_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    ADD_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    SUB_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    LEFT_ASSIGN     reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    RIGHT_ASSIGN    reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    AND_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    XOR_ASSIGN      reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    OR_ASSIGN       reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)
    RCPAREN         reduce using rule 30 (cast_expression -> LRPAREN type_name RRPAREN cast_expression .)


state 315

    (196) selection_statement -> SWITCH LRPAREN expression RRPAREN . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 84
    statement                      shift and go to state 336
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 316

    (197) iteration_statement -> WHILE LRPAREN expression RRPAREN . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 84
    statement                      shift and go to state 337
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 317

    (198) iteration_statement -> DO statement WHILE LRPAREN . expression RRPAREN SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 338
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 318

    (199) iteration_statement -> FOR LRPAREN expression_statement expression_statement . RRPAREN statement
    (200) iteration_statement -> FOR LRPAREN expression_statement expression_statement . expression RRPAREN statement
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    RRPAREN         shift and go to state 339
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 340
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 319

    (60) conditional_expression -> logical_or_expression QUESMARK expression COLON . conditional_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN

    LRPAREN         shift and go to state 129
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116

    logical_or_expression          shift and go to state 98
    conditional_expression         shift and go to state 341
    logical_and_expression         shift and go to state 105
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123
    cast_expression                shift and go to state 103
    unary_expression               shift and go to state 128
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    primary_expression             shift and go to state 106

state 320

    (8) postfix_expression -> postfix_expression LSPAREN expression RSPAREN .

    LSPAREN         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    LRPAREN         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    DOT             reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    PTR_OP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    INC_OP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    DEC_OP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    EQUAL           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    MUL_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    DIV_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    MOD_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    ADD_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    SUB_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    LEFT_ASSIGN     reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    RIGHT_ASSIGN    reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    AND_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    XOR_ASSIGN      reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    OR_ASSIGN       reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    MULTOP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    DIVOP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    MODOP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    PLUSOP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    MINUSOP         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    LEFT_OP         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    RIGHT_OP        reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    LTCOMP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    GTCOMP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    LE_OP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    GE_OP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    EQ_OP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    NE_OP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    BANDOP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    XOROP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    BOROP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    AND_OP          reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    QUESMARK        reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    OR_OP           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    SEMICOLON       reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    COMMA           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    RSPAREN         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    COLON           reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    RRPAREN         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)
    RCPAREN         reduce using rule 8 (postfix_expression -> postfix_expression LSPAREN expression RSPAREN .)


state 321

    (10) postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .

    LSPAREN         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    LRPAREN         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    DOT             reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    PTR_OP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    INC_OP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    DEC_OP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    EQUAL           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    MUL_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    DIV_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    MOD_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    ADD_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    SUB_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    LEFT_ASSIGN     reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    RIGHT_ASSIGN    reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    AND_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    XOR_ASSIGN      reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    OR_ASSIGN       reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    MULTOP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    DIVOP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    MODOP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    PLUSOP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    MINUSOP         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    LEFT_OP         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    RIGHT_OP        reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    LTCOMP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    GTCOMP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    LE_OP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    GE_OP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    EQ_OP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    NE_OP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    BANDOP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    XOROP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    BOROP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    AND_OP          reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    QUESMARK        reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    OR_OP           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    SEMICOLON       reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    COMMA           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    RSPAREN         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    COLON           reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    RRPAREN         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)
    RCPAREN         reduce using rule 10 (postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN .)


state 322

    (16) argument_expression_list -> argument_expression_list COMMA . assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    IDENTIFIER      shift and go to state 130
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    assignment_expression          shift and go to state 342
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 323

    (22) unary_expression -> SIZEOF LRPAREN type_name RRPAREN .

    EQUAL           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    MUL_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    DIV_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    MOD_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    ADD_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    SUB_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    LEFT_ASSIGN     reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    RIGHT_ASSIGN    reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    AND_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    XOR_ASSIGN      reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    OR_ASSIGN       reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    MULTOP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    DIVOP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    MODOP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    PLUSOP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    MINUSOP         reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    LEFT_OP         reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    RIGHT_OP        reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    LTCOMP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    GTCOMP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    LE_OP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    GE_OP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    EQ_OP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    NE_OP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    BANDOP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    XOROP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    BOROP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    AND_OP          reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    QUESMARK        reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    OR_OP           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    SEMICOLON       reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    COMMA           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    RSPAREN         reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    COLON           reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    RRPAREN         reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)
    RCPAREN         reduce using rule 22 (unary_expression -> SIZEOF LRPAREN type_name RRPAREN .)


state 324

    (164) direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN .

    LSPAREN         reduce using rule 164 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN .)
    LRPAREN         reduce using rule 164 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN .)
    COMMA           reduce using rule 164 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN .)
    RRPAREN         reduce using rule 164 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN .)


state 325

    (165) direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression . RSPAREN

    RSPAREN         shift and go to state 343


state 326

    (168) direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN .

    LSPAREN         reduce using rule 168 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN .)
    LRPAREN         reduce using rule 168 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN .)
    COMMA           reduce using rule 168 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN .)
    RRPAREN         reduce using rule 168 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN .)


state 327

    (169) direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list . RRPAREN

    RRPAREN         shift and go to state 344


state 328

    (161) direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN .

    LSPAREN         reduce using rule 161 (direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN .)
    LRPAREN         reduce using rule 161 (direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN .)
    COMMA           reduce using rule 161 (direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN .)
    RRPAREN         reduce using rule 161 (direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN .)


state 329

    (167) direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN .

    LSPAREN         reduce using rule 167 (direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN .)
    LRPAREN         reduce using rule 167 (direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN .)
    COMMA           reduce using rule 167 (direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN .)
    RRPAREN         reduce using rule 167 (direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN .)


state 330

    (163) direct_abstract_declarator -> LSPAREN constant_expression RSPAREN .

    LSPAREN         reduce using rule 163 (direct_abstract_declarator -> LSPAREN constant_expression RSPAREN .)
    LRPAREN         reduce using rule 163 (direct_abstract_declarator -> LSPAREN constant_expression RSPAREN .)
    COMMA           reduce using rule 163 (direct_abstract_declarator -> LSPAREN constant_expression RSPAREN .)
    RRPAREN         reduce using rule 163 (direct_abstract_declarator -> LSPAREN constant_expression RSPAREN .)


state 331

    (119) struct_declarator_list -> struct_declarator_list COMMA struct_declarator .

    SEMICOLON       reduce using rule 119 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)
    COMMA           reduce using rule 119 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)


state 332

    (122) struct_declarator -> declarator COLON constant_expression .

    SEMICOLON       reduce using rule 122 (struct_declarator -> declarator COLON constant_expression .)
    COMMA           reduce using rule 122 (struct_declarator -> declarator COLON constant_expression .)


state 333

    (172) initializer -> LCPAREN initializer_list COMMA RCPAREN .

    SEMICOLON       reduce using rule 172 (initializer -> LCPAREN initializer_list COMMA RCPAREN .)
    COMMA           reduce using rule 172 (initializer -> LCPAREN initializer_list COMMA RCPAREN .)
    RCPAREN         reduce using rule 172 (initializer -> LCPAREN initializer_list COMMA RCPAREN .)


state 334

    (174) initializer_list -> initializer_list COMMA initializer .

    RCPAREN         reduce using rule 174 (initializer_list -> initializer_list COMMA initializer .)
    COMMA           reduce using rule 174 (initializer_list -> initializer_list COMMA initializer .)


state 335

    (194) selection_statement -> IF LRPAREN expression RRPAREN statement .
    (195) selection_statement -> IF LRPAREN expression RRPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RCPAREN         reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    IDENTIFIER      reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    CASE            reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    DEFAULT         reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    LCPAREN         reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    SEMICOLON       reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    IF              reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    SWITCH          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    WHILE           reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    DO              reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    FOR             reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    GOTO            reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    CONTINUE        reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    BREAK           reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    RETURN          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    INC_OP          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    DEC_OP          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    SIZEOF          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    BANDOP          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    MULTOP          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    PLUSOP          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    MINUSOP         reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    BNOP            reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    NOTSYM          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    NUMBER          reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    STRING_LITERAL  reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    SCHAR           reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    LRPAREN         reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .)
    ELSE            shift and go to state 345

  ! ELSE            [ reduce using rule 194 (selection_statement -> IF LRPAREN expression RRPAREN statement .) ]


state 336

    (196) selection_statement -> SWITCH LRPAREN expression RRPAREN statement .

    RCPAREN         reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    IDENTIFIER      reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    CASE            reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    DEFAULT         reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    LCPAREN         reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    SEMICOLON       reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    IF              reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    SWITCH          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    WHILE           reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    DO              reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    FOR             reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    GOTO            reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    CONTINUE        reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    BREAK           reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    RETURN          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    INC_OP          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    DEC_OP          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    SIZEOF          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    BANDOP          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    MULTOP          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    PLUSOP          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    MINUSOP         reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    BNOP            reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    NOTSYM          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    NUMBER          reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    STRING_LITERAL  reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    SCHAR           reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    LRPAREN         reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)
    ELSE            reduce using rule 196 (selection_statement -> SWITCH LRPAREN expression RRPAREN statement .)


state 337

    (197) iteration_statement -> WHILE LRPAREN expression RRPAREN statement .

    RCPAREN         reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    IDENTIFIER      reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    CASE            reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    DEFAULT         reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    LCPAREN         reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    SEMICOLON       reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    IF              reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    SWITCH          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    WHILE           reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    DO              reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    FOR             reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    GOTO            reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    CONTINUE        reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    BREAK           reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    RETURN          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    INC_OP          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    DEC_OP          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    SIZEOF          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    BANDOP          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    MULTOP          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    PLUSOP          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    MINUSOP         reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    BNOP            reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    NOTSYM          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    NUMBER          reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    STRING_LITERAL  reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    SCHAR           reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    LRPAREN         reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)
    ELSE            reduce using rule 197 (iteration_statement -> WHILE LRPAREN expression RRPAREN statement .)


state 338

    (198) iteration_statement -> DO statement WHILE LRPAREN expression . RRPAREN SEMICOLON
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 346
    COMMA           shift and go to state 164


state 339

    (199) iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression_statement           shift and go to state 76
    statement                      shift and go to state 347
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    expression                     shift and go to state 84
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 340

    (200) iteration_statement -> FOR LRPAREN expression_statement expression_statement expression . RRPAREN statement
    (75) expression -> expression . COMMA assignment_expression

    RRPAREN         shift and go to state 348
    COMMA           shift and go to state 164


state 341

    (60) conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .

    SEMICOLON       reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)
    COMMA           reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)
    RSPAREN         reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)
    COLON           reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)
    RRPAREN         reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)
    RCPAREN         reduce using rule 60 (conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression .)


state 342

    (16) argument_expression_list -> argument_expression_list COMMA assignment_expression .

    RRPAREN         reduce using rule 16 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)
    COMMA           reduce using rule 16 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)


state 343

    (165) direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN .

    LSPAREN         reduce using rule 165 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN .)
    LRPAREN         reduce using rule 165 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN .)
    COMMA           reduce using rule 165 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN .)
    RRPAREN         reduce using rule 165 (direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN .)


state 344

    (169) direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN .

    LSPAREN         reduce using rule 169 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN .)
    LRPAREN         reduce using rule 169 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN .)
    COMMA           reduce using rule 169 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN .)
    RRPAREN         reduce using rule 169 (direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN .)


state 345

    (195) selection_statement -> IF LRPAREN expression RRPAREN statement ELSE . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression                     shift and go to state 84
    statement                      shift and go to state 349
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    expression_statement           shift and go to state 76
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 346

    (198) iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN . SEMICOLON

    SEMICOLON       shift and go to state 350


state 347

    (199) iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .

    RCPAREN         reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    IDENTIFIER      reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    CASE            reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    DEFAULT         reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    LCPAREN         reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    SEMICOLON       reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    IF              reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    SWITCH          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    WHILE           reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    DO              reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    FOR             reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    GOTO            reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    CONTINUE        reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    BREAK           reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    RETURN          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    INC_OP          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    DEC_OP          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    SIZEOF          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    BANDOP          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    MULTOP          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    PLUSOP          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    MINUSOP         reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    BNOP            reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    NOTSYM          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    NUMBER          reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    STRING_LITERAL  reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    SCHAR           reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    LRPAREN         reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)
    ELSE            reduce using rule 199 (iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement .)


state 348

    (200) iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN . statement
    (175) statement -> . labeled_statement
    (176) statement -> . compound_statement
    (177) statement -> . expression_statement
    (178) statement -> . selection_statement
    (179) statement -> . iteration_statement
    (180) statement -> . jump_statement
    (181) labeled_statement -> . IDENTIFIER COLON statement
    (182) labeled_statement -> . CASE constant_expression COLON statement
    (183) labeled_statement -> . DEFAULT COLON statement
    (184) compound_statement -> . LCPAREN RCPAREN
    (185) compound_statement -> . LCPAREN statement_list RCPAREN
    (186) compound_statement -> . LCPAREN declaration_list RCPAREN
    (187) compound_statement -> . LCPAREN declaration_list statement_list RCPAREN
    (192) expression_statement -> . SEMICOLON
    (193) expression_statement -> . expression SEMICOLON
    (194) selection_statement -> . IF LRPAREN expression RRPAREN statement
    (195) selection_statement -> . IF LRPAREN expression RRPAREN statement ELSE statement
    (196) selection_statement -> . SWITCH LRPAREN expression RRPAREN statement
    (197) iteration_statement -> . WHILE LRPAREN expression RRPAREN statement
    (198) iteration_statement -> . DO statement WHILE LRPAREN expression RRPAREN SEMICOLON
    (199) iteration_statement -> . FOR LRPAREN expression_statement expression_statement RRPAREN statement
    (200) iteration_statement -> . FOR LRPAREN expression_statement expression_statement expression RRPAREN statement
    (201) jump_statement -> . GOTO IDENTIFIER SEMICOLON
    (202) jump_statement -> . CONTINUE SEMICOLON
    (203) jump_statement -> . BREAK SEMICOLON
    (204) jump_statement -> . RETURN SEMICOLON
    (205) jump_statement -> . RETURN expression SEMICOLON
    (74) expression -> . assignment_expression
    (75) expression -> . expression COMMA assignment_expression
    (61) assignment_expression -> . conditional_expression
    (62) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (59) conditional_expression -> . logical_or_expression
    (60) conditional_expression -> . logical_or_expression QUESMARK expression COLON conditional_expression
    (17) unary_expression -> . postfix_expression
    (18) unary_expression -> . INC_OP unary_expression
    (19) unary_expression -> . DEC_OP unary_expression
    (20) unary_expression -> . unary_operator cast_expression
    (21) unary_expression -> . SIZEOF unary_expression
    (22) unary_expression -> . SIZEOF LRPAREN type_name RRPAREN
    (57) logical_or_expression -> . logical_and_expression
    (58) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (7) postfix_expression -> . primary_expression
    (8) postfix_expression -> . postfix_expression LSPAREN expression RSPAREN
    (9) postfix_expression -> . postfix_expression LRPAREN RRPAREN
    (10) postfix_expression -> . postfix_expression LRPAREN argument_expression_list RRPAREN
    (11) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (12) postfix_expression -> . postfix_expression PTR_OP IDENTIFIER
    (13) postfix_expression -> . postfix_expression INC_OP
    (14) postfix_expression -> . postfix_expression DEC_OP
    (23) unary_operator -> . BANDOP
    (24) unary_operator -> . MULTOP
    (25) unary_operator -> . PLUSOP
    (26) unary_operator -> . MINUSOP
    (27) unary_operator -> . BNOP
    (28) unary_operator -> . NOTSYM
    (55) logical_and_expression -> . inclusive_or_expression
    (56) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (2) primary_expression -> . IDENTIFIER
    (3) primary_expression -> . NUMBER
    (4) primary_expression -> . STRING_LITERAL
    (5) primary_expression -> . SCHAR
    (6) primary_expression -> . LRPAREN expression RRPAREN
    (53) inclusive_or_expression -> . exclusive_or_expression
    (54) inclusive_or_expression -> . inclusive_or_expression BOROP exclusive_or_expression
    (51) exclusive_or_expression -> . and_expression
    (52) exclusive_or_expression -> . exclusive_or_expression XOROP and_expression
    (49) and_expression -> . equality_expression
    (50) and_expression -> . and_expression BANDOP equality_expression
    (46) equality_expression -> . relational_expression
    (47) equality_expression -> . equality_expression EQ_OP relational_expression
    (48) equality_expression -> . equality_expression NE_OP relational_expression
    (41) relational_expression -> . shift_expression
    (42) relational_expression -> . relational_expression LTCOMP shift_expression
    (43) relational_expression -> . relational_expression GTCOMP shift_expression
    (44) relational_expression -> . relational_expression LE_OP shift_expression
    (45) relational_expression -> . relational_expression GE_OP shift_expression
    (38) shift_expression -> . additive_expression
    (39) shift_expression -> . shift_expression LEFT_OP additive_expression
    (40) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (35) additive_expression -> . multiplicative_expression
    (36) additive_expression -> . additive_expression PLUSOP multiplicative_expression
    (37) additive_expression -> . additive_expression MINUSOP multiplicative_expression
    (31) multiplicative_expression -> . cast_expression
    (32) multiplicative_expression -> . multiplicative_expression MULTOP cast_expression
    (33) multiplicative_expression -> . multiplicative_expression DIVOP cast_expression
    (34) multiplicative_expression -> . multiplicative_expression MODOP cast_expression
    (29) cast_expression -> . unary_expression
    (30) cast_expression -> . LRPAREN type_name RRPAREN cast_expression

    IDENTIFIER      shift and go to state 81
    CASE            shift and go to state 82
    DEFAULT         shift and go to state 83
    LCPAREN         shift and go to state 47
    SEMICOLON       shift and go to state 80
    IF              shift and go to state 85
    SWITCH          shift and go to state 87
    WHILE           shift and go to state 88
    DO              shift and go to state 89
    FOR             shift and go to state 90
    GOTO            shift and go to state 91
    CONTINUE        shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    INC_OP          shift and go to state 100
    DEC_OP          shift and go to state 101
    SIZEOF          shift and go to state 104
    BANDOP          shift and go to state 107
    MULTOP          shift and go to state 108
    PLUSOP          shift and go to state 109
    MINUSOP         shift and go to state 110
    BNOP            shift and go to state 111
    NOTSYM          shift and go to state 112
    NUMBER          shift and go to state 114
    STRING_LITERAL  shift and go to state 115
    SCHAR           shift and go to state 116
    LRPAREN         shift and go to state 86

    expression_statement           shift and go to state 76
    expression                     shift and go to state 84
    statement                      shift and go to state 351
    labeled_statement              shift and go to state 74
    compound_statement             shift and go to state 75
    selection_statement            shift and go to state 77
    iteration_statement            shift and go to state 78
    jump_statement                 shift and go to state 79
    assignment_expression          shift and go to state 95
    conditional_expression         shift and go to state 96
    unary_expression               shift and go to state 97
    logical_or_expression          shift and go to state 98
    postfix_expression             shift and go to state 99
    unary_operator                 shift and go to state 102
    cast_expression                shift and go to state 103
    logical_and_expression         shift and go to state 105
    primary_expression             shift and go to state 106
    inclusive_or_expression        shift and go to state 113
    exclusive_or_expression        shift and go to state 117
    and_expression                 shift and go to state 118
    equality_expression            shift and go to state 119
    relational_expression          shift and go to state 120
    shift_expression               shift and go to state 121
    additive_expression            shift and go to state 122
    multiplicative_expression      shift and go to state 123

state 349

    (195) selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .

    RCPAREN         reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    CASE            reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    LCPAREN         reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    IF              reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    SWITCH          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    WHILE           reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    DO              reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    FOR             reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    GOTO            reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    BREAK           reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    RETURN          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    INC_OP          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    DEC_OP          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    SIZEOF          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    BANDOP          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    MULTOP          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    PLUSOP          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    MINUSOP         reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    BNOP            reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    NOTSYM          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    NUMBER          reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    SCHAR           reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    LRPAREN         reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)
    ELSE            reduce using rule 195 (selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement .)


state 350

    (198) iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .

    RCPAREN         reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    CASE            reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    DEFAULT         reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    LCPAREN         reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    IF              reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    SWITCH          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    WHILE           reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    DO              reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    FOR             reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    GOTO            reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    CONTINUE        reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    BREAK           reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    RETURN          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    INC_OP          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    DEC_OP          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    SIZEOF          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    BANDOP          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    MULTOP          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    PLUSOP          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    MINUSOP         reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    BNOP            reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    NOTSYM          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    NUMBER          reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    SCHAR           reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    LRPAREN         reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)
    ELSE            reduce using rule 198 (iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON .)


state 351

    (200) iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .

    RCPAREN         reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    IDENTIFIER      reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    CASE            reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    DEFAULT         reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    LCPAREN         reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    SEMICOLON       reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    IF              reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    SWITCH          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    WHILE           reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    DO              reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    FOR             reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    GOTO            reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    CONTINUE        reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    BREAK           reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    RETURN          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    INC_OP          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    DEC_OP          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    SIZEOF          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    BANDOP          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    MULTOP          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    PLUSOP          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    MINUSOP         reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    BNOP            reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    NOTSYM          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    NUMBER          reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    STRING_LITERAL  reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    SCHAR           reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    LRPAREN         reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)
    ELSE            reduce using rule 200 (iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 335 resolved as shift
