
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADD_ASSIGN AND_ASSIGN AND_OP AUTO BANDOP BNOP BOROP BREAK CASE CATCH CHAR CLASS COLON COMMA CONST CONTINUE DEC_OP DEFAULT DELETE DIVOP DIV_ASSIGN DO DOT DOUBLE DQUOTE ELLIPSIS ELSE ENUM EQUAL EQ_OP EXTERN FLOAT FOR GE_OP GOTO GTCOMP HASHTAG IDENTIFIER IF INC_OP INT LCPAREN LEFT_ASSIGN LEFT_OP LE_OP LONG LRPAREN LSPAREN LTCOMP MINUSOP MODOP MOD_ASSIGN MULTOP MUL_ASSIGN NEW NE_OP NOTSYM NUMBER OR_ASSIGN OR_OP PLUSOP PRIVATE PTR_OP PUBLIC QUESMARK RCPAREN REGISTER RETURN RIGHT_ASSIGN RIGHT_OP RRPAREN RSPAREN SCHAR SEMICOLON SHORT SIGNED SIZEOF SQUOTE STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TEMPLATE TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOROP XOR_ASSIGNprogram : translation_unit\n\n    primary_expression : IDENTIFIER\n                         | NUMBER\n                         | STRING_LITERAL\n                         | SCHAR\n                         | LRPAREN expression RRPAREN\n\n    postfix_expression : primary_expression\n                         | postfix_expression LSPAREN expression RSPAREN\n                         | postfix_expression LRPAREN RRPAREN\n                         | postfix_expression LRPAREN argument_expression_list RRPAREN\n                         | postfix_expression DOT IDENTIFIER\n                         | postfix_expression PTR_OP IDENTIFIER\n                         | postfix_expression INC_OP\n                         | postfix_expression DEC_OP\n\n    argument_expression_list : assignment_expression\n                               | argument_expression_list COMMA assignment_expression\n\n    unary_expression : postfix_expression\n                       | INC_OP unary_expression\n                       | DEC_OP unary_expression\n                       | unary_operator cast_expression\n                       | SIZEOF unary_expression\n                       | SIZEOF LRPAREN type_name RRPAREN\n\n    unary_operator : BANDOP\n                     | MULTOP\n                     | PLUSOP\n                     | MINUSOP\n                     | BNOP\n                     | NOTSYM\n\n    cast_expression : unary_expression\n                      | LRPAREN type_name RRPAREN cast_expression\n\n    multiplicative_expression : cast_expression\n                                | multiplicative_expression MULTOP cast_expression\n                                | multiplicative_expression DIVOP cast_expression\n                                | multiplicative_expression MODOP cast_expression\n\n    additive_expression : multiplicative_expression\n                          | additive_expression PLUSOP multiplicative_expression\n                          | additive_expression MINUSOP multiplicative_expression\n\n    shift_expression : additive_expression\n                       | shift_expression LEFT_OP additive_expression\n                       | shift_expression RIGHT_OP additive_expression\n\n    relational_expression : shift_expression\n                            | relational_expression LTCOMP shift_expression\n                            | relational_expression GTCOMP shift_expression\n                            | relational_expression LE_OP shift_expression\n                            | relational_expression GE_OP shift_expression\n\n    equality_expression : relational_expression\n                          | equality_expression EQ_OP relational_expression\n                          | equality_expression NE_OP relational_expression\n\n    and_expression : equality_expression\n                     | and_expression BANDOP equality_expression\n\n    exclusive_or_expression : and_expression\n                              | exclusive_or_expression XOROP and_expression\n\n    inclusive_or_expression : exclusive_or_expression\n                              | inclusive_or_expression BOROP exclusive_or_expression\n\n    logical_and_expression : inclusive_or_expression\n                             | logical_and_expression AND_OP inclusive_or_expression\n\n    logical_or_expression : logical_and_expression\n                            | logical_or_expression OR_OP logical_and_expression\n\n    conditional_expression : logical_or_expression\n                             | logical_or_expression QUESMARK expression COLON conditional_expression\n\n    assignment_expression : conditional_expression\n                            | unary_expression assignment_operator assignment_expression\n\n    assignment_operator : EQUAL\n                          | MUL_ASSIGN\n                          | DIV_ASSIGN\n                          | MOD_ASSIGN\n                          | ADD_ASSIGN\n                          | SUB_ASSIGN\n                          | LEFT_ASSIGN\n                          | RIGHT_ASSIGN\n                          | AND_ASSIGN\n                          | XOR_ASSIGN\n                          | OR_ASSIGN\n\n    expression : assignment_expression\n                 | expression COMMA assignment_expression\n\n    constant_expression : conditional_expression\n\n    declaration : declaration_specifiers SEMICOLON\n                  | declaration_specifiers init_declarator_list SEMICOLON\n\n    declaration_specifiers : storage_class_specifier\n                             | storage_class_specifier declaration_specifiers\n                             | type_specifier\n                             | type_specifier declaration_specifiers\n                             | type_qualifier\n                             | type_qualifier declaration_specifiers\n\n    init_declarator_list : init_declarator\n                           | init_declarator_list COMMA init_declarator\n\n    init_declarator : declarator\n                      | declarator EQUAL initializer\n\n    storage_class_specifier : TYPEDEF\n                              | EXTERN\n                              | STATIC\n                              | AUTO\n                              | REGISTER\n\n    type_specifier : VOID\n                     | CHAR\n                     | SHORT\n                     | INT\n                     | LONG\n                     | FLOAT\n                     | DOUBLE\n                     | SIGNED\n                     | UNSIGNED\n                     | struct_or_union_specifier\n                     | enum_specifier\n    struct_or_union_specifier : struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN\n                                | struct_or_union LCPAREN struct_declaration_list RCPAREN\n                                | struct_or_union IDENTIFIER\n\n    struct_or_union : STRUCT\n                      | UNION\n                      | CLASS\n\n    struct_declaration_list : struct_declaration\n                              | struct_declaration_list struct_declaration\n\n    struct_declaration : specifier_qualifier_list struct_declarator_list SEMICOLON\n    specifier_qualifier_list : type_specifier specifier_qualifier_list\n                               | type_specifier\n                               | type_qualifier specifier_qualifier_list\n                               | type_qualifier\n\n    struct_declarator_list : struct_declarator\n                             | struct_declarator_list COMMA struct_declarator\n\n    struct_declarator : declarator\n                        | COLON constant_expression\n                        | declarator COLON constant_expression\n\n    enum_specifier : ENUM LCPAREN enumerator_list RCPAREN\n                     | ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN\n                     | ENUM IDENTIFIER\n\n    enumerator_list : enumerator\n                      | enumerator_list COMMA enumerator\n\n    enumerator : IDENTIFIER\n                 | IDENTIFIER EQUAL constant_expression\n\n    type_qualifier : CONST\n                     | VOLATILE\n\n    declarator : pointer direct_declarator\n                 | direct_declarator\n\n    direct_declarator : IDENTIFIER\n                        | LRPAREN declarator RRPAREN\n                        | direct_declarator LSPAREN constant_expression RSPAREN\n                        | direct_declarator LSPAREN RSPAREN\n                        | direct_declarator LRPAREN parameter_type_list RRPAREN\n                        | direct_declarator LRPAREN identifier_list RRPAREN\n                        | direct_declarator LRPAREN RRPAREN\n\n    pointer : MULTOP\n              | MULTOP type_qualifier_list\n              | MULTOP pointer\n              | MULTOP type_qualifier_list pointer\n\n    type_qualifier_list : type_qualifier\n                          | type_qualifier_list type_qualifier\n\n    parameter_type_list : parameter_list\n                          | parameter_list COMMA ELLIPSIS\n\n    parameter_list : parameter_declaration\n                     | parameter_list COMMA parameter_declaration\n\n    parameter_declaration : declaration_specifiers declarator\n                            | declaration_specifiers abstract_declarator\n                            | declaration_specifiers\n\n    identifier_list : IDENTIFIER\n                      | identifier_list COMMA IDENTIFIER\n\n    type_name : specifier_qualifier_list\n                | specifier_qualifier_list abstract_declarator\n\n    abstract_declarator : pointer\n                          | direct_abstract_declarator\n                          | pointer direct_abstract_declarator\n\n    direct_abstract_declarator : LRPAREN abstract_declarator RRPAREN\n                                 | LSPAREN RSPAREN\n                                 | LSPAREN constant_expression RSPAREN\n                                 | direct_abstract_declarator LSPAREN RSPAREN\n                                 | direct_abstract_declarator LSPAREN constant_expression RSPAREN\n                                 | LRPAREN RRPAREN\n                                 | LRPAREN parameter_type_list RRPAREN\n                                 | direct_abstract_declarator LRPAREN RRPAREN\n                                 | direct_abstract_declarator LRPAREN parameter_type_list RRPAREN\n\n    initializer : assignment_expression\n                  | LCPAREN initializer_list RCPAREN\n                  | LCPAREN initializer_list COMMA RCPAREN\n\n    initializer_list : initializer\n                       | initializer_list COMMA initializer\n\n    statement : labeled_statement\n                | compound_statement\n                | expression_statement\n                | selection_statement\n                | iteration_statement\n                | jump_statement\n\n    labeled_statement : IDENTIFIER COLON statement\n                        | CASE constant_expression COLON statement\n                        | DEFAULT COLON statement\n\n    compound_statement : LCPAREN RCPAREN\n                         | LCPAREN statement_list RCPAREN\n                         | LCPAREN declaration_list RCPAREN\n                         | LCPAREN declaration_list statement_list RCPAREN\n\n    declaration_list : declaration\n                       | declaration_list declaration\n\n    statement_list : statement\n                     | statement_list statement\n\n    expression_statement : SEMICOLON\n                           | expression SEMICOLON\n\n    selection_statement : IF LRPAREN expression RRPAREN statement\n                          | IF LRPAREN expression RRPAREN statement ELSE statement\n                          | SWITCH LRPAREN expression RRPAREN statement\n\n    iteration_statement : WHILE LRPAREN expression RRPAREN statement\n                          | DO statement WHILE LRPAREN expression RRPAREN SEMICOLON\n                          | FOR LRPAREN expression_statement expression_statement RRPAREN statement\n                          | FOR LRPAREN expression_statement expression_statement expression RRPAREN statement\n\n    jump_statement : GOTO IDENTIFIER SEMICOLON\n                     | CONTINUE SEMICOLON\n                     | BREAK SEMICOLON\n                     | RETURN SEMICOLON\n                     | RETURN expression SEMICOLON\n\n    translation_unit : external_declaration\n                       | translation_unit external_declaration\n\n    external_declaration : function_definition\n                           | declaration\n\n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n                          | declaration_specifiers declarator compound_statement\n                          | declarator declaration_list compound_statement\n                          | declarator compound_statement\n\n    '
    
_lr_action_items = {'TYPEDEF':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,72,126,132,140,151,156,158,221,222,223,225,230,233,241,247,257,296,302,309,],[13,13,-206,-208,-209,13,13,13,13,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,13,-77,13,-213,-188,13,-132,13,-107,-125,13,-211,-78,-212,-189,-184,13,-137,-140,-135,-210,-185,-186,-136,-138,-139,13,13,-106,-123,-187,13,13,-105,-124,]),'EXTERN':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,72,126,132,140,151,156,158,221,222,223,225,230,233,241,247,257,296,302,309,],[14,14,-206,-208,-209,14,14,14,14,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,14,-77,14,-213,-188,14,-132,14,-107,-125,14,-211,-78,-212,-189,-184,14,-137,-140,-135,-210,-185,-186,-136,-138,-139,14,14,-106,-123,-187,14,14,-105,-124,]),'STATIC':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,72,126,132,140,151,156,158,221,222,223,225,230,233,241,247,257,296,302,309,],[15,15,-206,-208,-209,15,15,15,15,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,15,-77,15,-213,-188,15,-132,15,-107,-125,15,-211,-78,-212,-189,-184,15,-137,-140,-135,-210,-185,-186,-136,-138,-139,15,15,-106,-123,-187,15,15,-105,-124,]),'AUTO':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,72,126,132,140,151,156,158,221,222,223,225,230,233,241,247,257,296,302,309,],[16,16,-206,-208,-209,16,16,16,16,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,16,-77,16,-213,-188,16,-132,16,-107,-125,16,-211,-78,-212,-189,-184,16,-137,-140,-135,-210,-185,-186,-136,-138,-139,16,16,-106,-123,-187,16,16,-105,-124,]),'REGISTER':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,72,126,132,140,151,156,158,221,222,223,225,230,233,241,247,257,296,302,309,],[17,17,-206,-208,-209,17,17,17,17,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,17,-77,17,-213,-188,17,-132,17,-107,-125,17,-211,-78,-212,-189,-184,17,-137,-140,-135,-210,-185,-186,-136,-138,-139,17,17,-106,-123,-187,17,17,-105,-124,]),'VOID':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[18,18,-206,-208,-209,18,18,18,18,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,18,-77,18,-213,-188,18,-132,18,-107,18,-125,18,-211,-78,-212,-189,-184,18,18,-137,18,-140,-135,18,18,-111,18,18,-210,-185,-186,18,-136,-138,-139,18,18,18,-106,-112,-123,-187,18,18,-105,-113,-124,]),'CHAR':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[19,19,-206,-208,-209,19,19,19,19,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,19,-77,19,-213,-188,19,-132,19,-107,19,-125,19,-211,-78,-212,-189,-184,19,19,-137,19,-140,-135,19,19,-111,19,19,-210,-185,-186,19,-136,-138,-139,19,19,19,-106,-112,-123,-187,19,19,-105,-113,-124,]),'SHORT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[20,20,-206,-208,-209,20,20,20,20,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,20,-77,20,-213,-188,20,-132,20,-107,20,-125,20,-211,-78,-212,-189,-184,20,20,-137,20,-140,-135,20,20,-111,20,20,-210,-185,-186,20,-136,-138,-139,20,20,20,-106,-112,-123,-187,20,20,-105,-113,-124,]),'INT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[21,21,-206,-208,-209,21,21,21,21,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,21,-77,21,-213,-188,21,-132,21,-107,21,-125,21,-211,-78,-212,-189,-184,21,21,-137,21,-140,-135,21,21,-111,21,21,-210,-185,-186,21,-136,-138,-139,21,21,21,-106,-112,-123,-187,21,21,-105,-113,-124,]),'LONG':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[22,22,-206,-208,-209,22,22,22,22,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,22,-77,22,-213,-188,22,-132,22,-107,22,-125,22,-211,-78,-212,-189,-184,22,22,-137,22,-140,-135,22,22,-111,22,22,-210,-185,-186,22,-136,-138,-139,22,22,22,-106,-112,-123,-187,22,22,-105,-113,-124,]),'FLOAT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[23,23,-206,-208,-209,23,23,23,23,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,23,-77,23,-213,-188,23,-132,23,-107,23,-125,23,-211,-78,-212,-189,-184,23,23,-137,23,-140,-135,23,23,-111,23,23,-210,-185,-186,23,-136,-138,-139,23,23,23,-106,-112,-123,-187,23,23,-105,-113,-124,]),'DOUBLE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[24,24,-206,-208,-209,24,24,24,24,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,24,-77,24,-213,-188,24,-132,24,-107,24,-125,24,-211,-78,-212,-189,-184,24,24,-137,24,-140,-135,24,24,-111,24,24,-210,-185,-186,24,-136,-138,-139,24,24,24,-106,-112,-123,-187,24,24,-105,-113,-124,]),'SIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[25,25,-206,-208,-209,25,25,25,25,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,25,-77,25,-213,-188,25,-132,25,-107,25,-125,25,-211,-78,-212,-189,-184,25,25,-137,25,-140,-135,25,25,-111,25,25,-210,-185,-186,25,-136,-138,-139,25,25,25,-106,-112,-123,-187,25,25,-105,-113,-124,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[26,26,-206,-208,-209,26,26,26,26,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,26,-77,26,-213,-188,26,-132,26,-107,26,-125,26,-211,-78,-212,-189,-184,26,26,-137,26,-140,-135,26,26,-111,26,26,-210,-185,-186,26,-136,-138,-139,26,26,26,-106,-112,-123,-187,26,26,-105,-113,-124,]),'CONST':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,72,86,126,129,132,139,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[29,29,-206,-208,-209,29,29,29,29,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,29,-134,-207,29,-77,29,-213,-188,29,-132,29,29,-145,-107,29,-125,29,-211,-78,-212,-189,-184,29,29,-137,29,-140,-146,-135,29,29,-111,29,29,-210,-185,-186,29,-136,-138,-139,29,29,29,-106,-112,-123,-187,29,29,-105,-113,-124,]),'VOLATILE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,72,86,126,129,132,139,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[30,30,-206,-208,-209,30,30,30,30,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,30,-134,-207,30,-77,30,-213,-188,30,-132,30,30,-145,-107,30,-125,30,-211,-78,-212,-189,-184,30,30,-137,30,-140,-146,-135,30,30,-111,30,30,-210,-185,-186,30,-136,-138,-139,30,30,30,-106,-112,-123,-187,30,30,-105,-113,-124,]),'MULTOP':([0,2,3,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,41,45,46,47,48,49,50,51,53,55,57,59,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,97,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,123,128,129,130,137,139,144,145,146,151,154,156,157,158,159,160,162,163,164,165,168,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,231,233,238,239,240,241,243,247,248,249,250,253,254,257,261,262,263,268,271,272,286,287,288,289,290,295,302,304,305,309,311,312,313,314,315,316,317,318,319,320,321,322,323,335,336,337,339,345,347,348,349,350,351,],[31,31,-206,-208,-209,31,-79,-81,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,31,31,-207,-77,-213,-188,108,31,-80,-82,-84,108,31,-145,-107,-125,-211,108,-78,31,-212,-189,-184,108,108,-190,-175,-176,-177,-178,-179,-180,-192,-2,108,108,108,108,-29,-17,108,108,108,-31,108,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,218,-29,108,-2,31,-146,31,-115,-117,-210,108,-185,-191,-186,108,108,108,-193,108,108,31,108,108,108,-202,-203,-204,108,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,108,108,108,108,-13,-14,-18,108,-19,-20,-21,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,31,108,-106,108,-114,-116,-123,108,-187,-181,108,-183,-6,108,31,108,-201,-205,-9,-11,-12,218,218,-32,-33,-34,108,-105,31,108,-124,108,-182,108,-30,108,108,108,108,108,-8,-10,108,-22,-194,-196,-197,108,108,-199,108,-195,-198,-200,]),'IDENTIFIER':([0,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,53,54,55,56,57,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,91,94,100,101,102,104,107,108,109,110,111,112,129,137,138,139,144,145,146,150,151,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,228,230,231,233,238,239,240,241,242,243,247,248,249,250,254,261,262,263,295,302,304,305,309,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[32,32,-206,-208,-209,32,-79,-81,-83,32,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-141,32,59,62,-108,-109,-110,-207,-77,-213,-188,81,32,-80,-82,-84,130,135,-142,-143,-145,-107,149,-125,-211,130,-78,32,-212,-189,-184,81,81,-190,-175,-176,-177,-178,-179,-180,-192,130,130,81,173,130,130,130,130,130,-23,-24,-25,-26,-27,-28,130,32,-144,-146,32,-115,-117,149,-210,130,-185,-191,-186,81,81,81,-193,130,130,130,130,130,-202,-203,-204,130,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,130,130,130,130,271,272,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,291,32,32,130,-106,130,-114,-116,-123,149,130,-187,-181,81,-183,130,130,-201,-205,130,-105,32,130,-124,130,-182,81,81,81,130,130,130,130,-194,-196,-197,81,81,-199,81,-195,-198,-200,]),'LRPAREN':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,41,45,46,47,48,49,50,51,52,53,55,56,57,59,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,94,99,100,101,102,104,106,107,108,109,110,111,112,114,115,116,126,129,130,132,137,138,139,140,144,145,146,151,154,156,157,158,159,160,162,163,164,165,168,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,229,230,231,233,238,239,240,241,243,247,248,249,250,253,254,256,257,260,261,262,263,268,271,272,294,295,297,300,302,304,305,309,311,312,313,315,316,317,318,319,320,321,322,324,326,328,329,330,335,336,337,339,343,344,345,347,348,349,350,351,],[33,33,-206,-208,-209,33,-79,-81,-83,33,54,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-141,-134,33,-207,-77,-213,-188,86,33,-80,-82,-84,54,129,-142,-143,-145,-107,-125,-211,86,-78,33,-212,-189,-184,86,86,-190,-175,-176,-177,-178,-179,-180,-192,-2,129,165,86,169,170,86,172,86,193,199,199,129,203,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,-137,86,-2,-140,230,-144,-146,-135,33,-115,-117,-210,86,-185,-191,-186,86,86,86,-193,86,86,257,86,86,86,-202,-203,-204,86,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,86,129,86,86,-13,-14,86,86,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-136,-138,-139,230,296,230,129,-106,129,-114,-116,-123,129,-187,-181,86,-183,-6,129,257,257,317,86,-201,-205,-9,-11,-12,296,129,-166,-162,-105,33,129,-124,86,-182,86,86,86,86,86,129,-8,-10,86,-164,-168,-161,-167,-163,-194,-196,-197,86,-165,-169,86,-199,86,-195,-198,-200,]),'ENUM':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[35,35,-206,-208,-209,35,35,35,35,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,35,-77,35,-213,-188,35,-132,35,-107,35,-125,35,-211,-78,-212,-189,-184,35,35,-137,35,-140,-135,35,35,-111,35,35,-210,-185,-186,35,-136,-138,-139,35,35,35,-106,-112,-123,-187,35,35,-105,-113,-124,]),'STRUCT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[36,36,-206,-208,-209,36,36,36,36,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,36,-77,36,-213,-188,36,-132,36,-107,36,-125,36,-211,-78,-212,-189,-184,36,36,-137,36,-140,-135,36,36,-111,36,36,-210,-185,-186,36,-136,-138,-139,36,36,36,-106,-112,-123,-187,36,36,-105,-113,-124,]),'UNION':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[37,37,-206,-208,-209,37,37,37,37,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,37,-77,37,-213,-188,37,-132,37,-107,37,-125,37,-211,-78,-212,-189,-184,37,37,-137,37,-140,-135,37,37,-111,37,37,-210,-185,-186,37,-136,-138,-139,37,37,37,-106,-112,-123,-187,37,37,-105,-113,-124,]),'CLASS':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,72,86,126,129,132,140,141,142,143,145,146,151,156,158,203,221,222,223,225,230,232,233,234,241,247,257,296,302,303,309,],[38,38,-206,-208,-209,38,38,38,38,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-207,38,-77,38,-213,-188,38,-132,38,-107,38,-125,38,-211,-78,-212,-189,-184,38,38,-137,38,-140,-135,38,38,-111,38,38,-210,-185,-186,38,-136,-138,-139,38,38,38,-106,-112,-123,-187,38,38,-105,-113,-124,]),'$end':([1,2,3,4,5,39,41,45,64,66,68,70,151,156,158,247,],[0,-1,-206,-208,-209,-207,-77,-213,-211,-78,-212,-184,-210,-185,-186,-187,]),'SEMICOLON':([6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,40,41,42,43,46,47,48,49,50,51,52,59,62,66,69,70,71,72,73,74,75,76,77,78,79,80,81,84,89,92,93,94,95,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,132,140,152,153,155,156,157,158,159,160,162,163,172,173,174,175,176,177,196,197,198,200,201,202,221,222,223,233,235,236,237,241,247,248,249,250,251,253,261,262,263,264,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,302,306,309,310,312,313,314,315,316,320,321,323,331,332,333,335,336,337,339,341,345,346,347,348,349,350,351,],[41,-79,-81,-83,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-87,-77,66,-85,-188,80,41,-80,-82,-84,-132,-107,-125,-78,-189,-184,80,80,-190,-175,-176,-177,-178,-179,-180,-192,-2,163,80,174,175,176,-74,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-87,-137,-76,-29,-2,-140,-135,-88,-170,-86,-185,-191,-186,80,80,80,-193,80,262,-202,-203,-204,263,-13,-14,-18,-19,-20,-21,-136,-138,-139,-106,303,-118,-120,-123,-187,-181,80,-183,-75,-6,80,-201,-205,-62,-58,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-105,-121,-124,-171,-182,80,-30,80,80,-8,-10,-22,-119,-122,-172,-194,-196,-197,80,-60,80,350,-199,80,-195,-198,-200,]),'LCPAREN':([7,12,32,34,35,36,37,38,40,41,44,46,47,52,59,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,89,126,132,140,154,156,157,158,159,160,162,163,174,175,176,221,222,223,247,248,249,250,262,263,311,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[47,-133,-134,60,61,-108,-109,-110,47,-77,47,-188,47,-132,141,150,47,154,-78,-189,-184,47,47,-190,-175,-176,-177,-178,-179,-180,-192,47,-137,-140,-135,154,-185,-191,-186,47,47,47,-193,-202,-203,-204,-136,-138,-139,-187,-181,47,-183,-201,-205,154,-182,47,47,47,-194,-196,-197,47,47,-199,47,-195,-198,-200,]),'LSPAREN':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,50,51,52,55,56,57,59,62,81,99,106,114,115,116,126,130,132,137,138,139,140,145,146,168,196,197,221,222,223,228,229,230,233,239,240,241,253,256,257,268,271,272,294,297,300,302,309,320,321,324,326,328,329,330,343,344,],[-79,-81,-83,53,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-141,-134,-80,-82,-84,53,-142,-143,-145,-107,-125,-2,192,-7,-3,-4,-5,-137,-2,-140,231,-144,-146,-135,-115,-117,231,-13,-14,-136,-138,-139,231,295,231,-106,-114,-116,-123,-6,231,231,-9,-11,-12,295,-166,-162,-105,-124,-8,-10,-164,-168,-161,-167,-163,-165,-169,]),'COMMA':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,42,43,49,50,51,52,55,56,57,59,62,81,84,95,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,132,133,134,135,136,137,138,139,140,147,148,149,152,153,155,166,177,196,197,198,200,201,202,221,222,223,226,227,228,229,233,235,236,237,241,244,245,246,251,252,253,258,259,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,297,300,302,306,307,308,309,310,314,320,321,323,324,326,328,329,330,331,332,333,334,338,340,341,342,343,344,],[-79,-81,-83,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-141,-134,-87,67,-85,-80,-82,-84,-132,-142,-143,-145,-107,-125,-2,164,-74,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-87,-137,-76,-29,-2,-140,224,225,-154,-149,-153,-144,-146,-135,242,-126,-128,-88,-170,-86,164,164,-13,-14,-18,-19,-20,-21,-136,-138,-139,-151,-152,-158,-159,-106,304,-118,-120,-123,242,311,-173,-75,164,-6,164,164,-62,164,-58,164,-9,322,-15,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-155,-150,-160,-166,-162,-105,-121,-127,-129,-124,-171,-30,-8,-10,-22,-164,-168,-161,-167,-163,-119,-122,-172,-174,164,164,-60,-16,-165,-169,]),'RRPAREN':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,49,50,51,52,54,55,56,57,58,59,62,80,95,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,126,128,130,131,132,133,134,135,136,137,138,139,140,145,146,163,166,167,168,193,196,197,198,200,201,202,221,222,223,226,227,228,229,230,233,239,240,241,251,252,253,255,256,257,258,259,264,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,300,302,309,314,318,320,321,323,324,326,327,328,329,330,338,340,341,342,343,344,],[-79,-81,-83,-133,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-141,-134,-80,-82,-84,-132,132,-142,-143,-145,140,-107,-125,-192,-74,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-137,-29,-2,222,-140,223,-147,-154,-149,-153,-144,-146,-135,-115,-117,-193,253,254,-156,268,-13,-14,-18,-19,-20,-21,-136,-138,-139,-151,-152,-158,-159,297,-106,-114,-116,-123,-75,313,-6,-157,-158,297,315,316,-62,-58,-9,321,-15,-11,-12,323,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-155,-148,-150,-160,326,-166,328,329,-162,-105,-124,-30,339,-8,-10,-22,-164,-168,344,-161,-167,-163,346,348,-60,-16,-165,-169,]),'EQUAL':([12,32,40,52,81,97,99,106,114,115,116,124,126,128,130,132,140,149,196,197,198,200,201,202,221,222,223,253,268,271,272,314,320,321,323,],[-133,-134,65,-132,-2,179,-17,-7,-3,-4,-5,65,-137,-29,-2,-140,-135,243,-13,-14,-18,-19,-20,-21,-136,-138,-139,-6,-9,-11,-12,-30,-8,-10,-22,]),'COLON':([12,18,19,20,21,22,23,24,25,26,27,28,29,30,32,52,59,62,81,83,95,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,126,127,128,130,132,140,144,145,146,161,196,197,198,200,201,202,221,222,223,233,237,239,240,241,251,253,264,265,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,302,304,309,314,320,321,323,341,],[-133,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-130,-131,-134,-132,-107,-125,160,162,-74,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-137,-76,-29,-2,-140,-135,238,-115,-117,249,-13,-14,-18,-19,-20,-21,-136,-138,-139,-106,305,-114,-116,-123,-75,-6,-62,319,-58,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-105,238,-124,-30,-8,-10,-22,-60,]),'RCPAREN':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,127,128,130,142,143,147,148,149,153,156,157,158,159,163,174,175,176,196,197,198,200,201,202,232,234,244,245,246,247,248,250,253,262,263,264,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,303,307,308,310,311,312,314,320,321,323,333,334,335,336,337,341,347,349,350,351,],[-77,-188,70,-78,-189,-184,156,158,-190,-175,-176,-177,-178,-179,-180,-192,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-76,-29,-2,233,-111,241,-126,-128,-170,-185,-191,-186,247,-193,-202,-203,-204,-13,-14,-18,-19,-20,-21,302,-112,309,310,-173,-187,-181,-183,-6,-201,-205,-62,-58,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-113,-127,-129,-171,333,-182,-30,-8,-10,-22,-172,-174,-194,-196,-197,-60,-199,-195,-198,-200,]),'CASE':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,82,-78,-189,-184,82,82,-190,-175,-176,-177,-178,-179,-180,-192,82,-185,-191,-186,82,82,82,-193,-202,-203,-204,-187,-181,82,-183,-201,-205,-182,82,82,82,-194,-196,-197,82,82,-199,82,-195,-198,-200,]),'DEFAULT':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,83,-78,-189,-184,83,83,-190,-175,-176,-177,-178,-179,-180,-192,83,-185,-191,-186,83,83,83,-193,-202,-203,-204,-187,-181,83,-183,-201,-205,-182,83,83,83,-194,-196,-197,83,83,-199,83,-195,-198,-200,]),'IF':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,85,-78,-189,-184,85,85,-190,-175,-176,-177,-178,-179,-180,-192,85,-185,-191,-186,85,85,85,-193,-202,-203,-204,-187,-181,85,-183,-201,-205,-182,85,85,85,-194,-196,-197,85,85,-199,85,-195,-198,-200,]),'SWITCH':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,87,-78,-189,-184,87,87,-190,-175,-176,-177,-178,-179,-180,-192,87,-185,-191,-186,87,87,87,-193,-202,-203,-204,-187,-181,87,-183,-201,-205,-182,87,87,87,-194,-196,-197,87,87,-199,87,-195,-198,-200,]),'WHILE':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,171,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,88,-78,-189,-184,88,88,-190,-175,-176,-177,-178,-179,-180,-192,88,-185,-191,-186,88,88,88,-193,260,-202,-203,-204,-187,-181,88,-183,-201,-205,-182,88,88,88,-194,-196,-197,88,88,-199,88,-195,-198,-200,]),'DO':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,89,-78,-189,-184,89,89,-190,-175,-176,-177,-178,-179,-180,-192,89,-185,-191,-186,89,89,89,-193,-202,-203,-204,-187,-181,89,-183,-201,-205,-182,89,89,89,-194,-196,-197,89,89,-199,89,-195,-198,-200,]),'FOR':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,90,-78,-189,-184,90,90,-190,-175,-176,-177,-178,-179,-180,-192,90,-185,-191,-186,90,90,90,-193,-202,-203,-204,-187,-181,90,-183,-201,-205,-182,90,90,90,-194,-196,-197,90,90,-199,90,-195,-198,-200,]),'GOTO':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,91,-78,-189,-184,91,91,-190,-175,-176,-177,-178,-179,-180,-192,91,-185,-191,-186,91,91,91,-193,-202,-203,-204,-187,-181,91,-183,-201,-205,-182,91,91,91,-194,-196,-197,91,91,-199,91,-195,-198,-200,]),'CONTINUE':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,92,-78,-189,-184,92,92,-190,-175,-176,-177,-178,-179,-180,-192,92,-185,-191,-186,92,92,92,-193,-202,-203,-204,-187,-181,92,-183,-201,-205,-182,92,92,92,-194,-196,-197,92,92,-199,92,-195,-198,-200,]),'BREAK':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,93,-78,-189,-184,93,93,-190,-175,-176,-177,-178,-179,-180,-192,93,-185,-191,-186,93,93,93,-193,-202,-203,-204,-187,-181,93,-183,-201,-205,-182,93,93,93,-194,-196,-197,93,93,-199,93,-195,-198,-200,]),'RETURN':([41,46,47,66,69,70,71,72,73,74,75,76,77,78,79,80,89,156,157,158,159,160,162,163,174,175,176,247,248,249,250,262,263,312,313,315,316,335,336,337,339,345,347,348,349,350,351,],[-77,-188,94,-78,-189,-184,94,94,-190,-175,-176,-177,-178,-179,-180,-192,94,-185,-191,-186,94,94,94,-193,-202,-203,-204,-187,-181,94,-183,-201,-205,-182,94,94,94,-194,-196,-197,94,94,-199,94,-195,-198,-200,]),'INC_OP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,99,100,101,102,104,106,107,108,109,110,111,112,114,115,116,129,130,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,253,254,261,262,263,268,271,272,295,305,311,312,313,315,316,317,318,319,320,321,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,100,100,100,-78,-189,-184,100,100,-190,-175,-176,-177,-178,-179,-180,-192,-2,100,100,100,100,196,100,100,100,100,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,100,-2,100,-185,-191,-186,100,100,100,-193,100,100,100,100,100,-202,-203,-204,100,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,100,100,100,100,-13,-14,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-187,-181,100,-183,-6,100,100,-201,-205,-9,-11,-12,100,100,100,-182,100,100,100,100,100,100,-8,-10,100,-194,-196,-197,100,100,-199,100,-195,-198,-200,]),'DEC_OP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,99,100,101,102,104,106,107,108,109,110,111,112,114,115,116,129,130,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,253,254,261,262,263,268,271,272,295,305,311,312,313,315,316,317,318,319,320,321,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,101,101,101,-78,-189,-184,101,101,-190,-175,-176,-177,-178,-179,-180,-192,-2,101,101,101,101,197,101,101,101,101,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,101,-2,101,-185,-191,-186,101,101,101,-193,101,101,101,101,101,-202,-203,-204,101,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,101,101,101,101,-13,-14,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-187,-181,101,-183,-6,101,101,-201,-205,-9,-11,-12,101,101,101,-182,101,101,101,101,101,101,-8,-10,101,-194,-196,-197,101,101,-199,101,-195,-198,-200,]),'SIZEOF':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,104,104,104,-78,-189,-184,104,104,-190,-175,-176,-177,-178,-179,-180,-192,104,104,104,104,104,104,104,104,-23,-24,-25,-26,-27,-28,104,104,-185,-191,-186,104,104,104,-193,104,104,104,104,104,-202,-203,-204,104,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-187,-181,104,-183,104,104,-201,-205,104,104,104,-182,104,104,104,104,104,104,104,-194,-196,-197,104,104,-199,104,-195,-198,-200,]),'BANDOP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,97,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,118,119,120,121,122,123,128,129,130,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,253,254,261,262,263,268,271,272,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,295,305,311,312,313,314,315,316,317,318,319,320,321,322,323,335,336,337,339,345,347,348,349,350,351,],[-77,-188,107,107,107,-78,-189,-184,107,107,-190,-175,-176,-177,-178,-179,-180,-192,-2,107,107,107,107,-29,-17,107,107,107,-31,107,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,207,-49,-46,-41,-38,-35,-29,107,-2,107,-185,-191,-186,107,107,107,-193,107,107,107,107,107,-202,-203,-204,107,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,107,107,107,107,-13,-14,-18,107,-19,-20,-21,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-187,-181,107,-183,-6,107,107,-201,-205,-9,-11,-12,207,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,107,107,107,-182,107,-30,107,107,107,107,107,-8,-10,107,-22,-194,-196,-197,107,107,-199,107,-195,-198,-200,]),'PLUSOP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,97,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,122,123,128,129,130,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,253,254,261,262,263,268,271,272,284,285,286,287,288,289,290,295,305,311,312,313,314,315,316,317,318,319,320,321,322,323,335,336,337,339,345,347,348,349,350,351,],[-77,-188,109,109,109,-78,-189,-184,109,109,-190,-175,-176,-177,-178,-179,-180,-192,-2,109,109,109,109,-29,-17,109,109,109,-31,109,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,216,-35,-29,109,-2,109,-185,-191,-186,109,109,109,-193,109,109,109,109,109,-202,-203,-204,109,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,109,109,109,109,-13,-14,-18,109,-19,-20,-21,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-187,-181,109,-183,-6,109,109,-201,-205,-9,-11,-12,216,216,-36,-37,-32,-33,-34,109,109,109,-182,109,-30,109,109,109,109,109,-8,-10,109,-22,-194,-196,-197,109,109,-199,109,-195,-198,-200,]),'MINUSOP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,94,97,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,122,123,128,129,130,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,253,254,261,262,263,268,271,272,284,285,286,287,288,289,290,295,305,311,312,313,314,315,316,317,318,319,320,321,322,323,335,336,337,339,345,347,348,349,350,351,],[-77,-188,110,110,110,-78,-189,-184,110,110,-190,-175,-176,-177,-178,-179,-180,-192,-2,110,110,110,110,-29,-17,110,110,110,-31,110,-7,-23,-24,-25,-26,-27,-28,-3,-4,-5,217,-35,-29,110,-2,110,-185,-191,-186,110,110,110,-193,110,110,110,110,110,-202,-203,-204,110,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,110,110,110,110,-13,-14,-18,110,-19,-20,-21,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-187,-181,110,-183,-6,110,110,-201,-205,-9,-11,-12,217,217,-36,-37,-32,-33,-34,110,110,110,-182,110,-30,110,110,110,110,110,-8,-10,110,-22,-194,-196,-197,110,110,-199,110,-195,-198,-200,]),'BNOP':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,111,111,111,-78,-189,-184,111,111,-190,-175,-176,-177,-178,-179,-180,-192,111,111,111,111,111,111,111,111,-23,-24,-25,-26,-27,-28,111,111,-185,-191,-186,111,111,111,-193,111,111,111,111,111,-202,-203,-204,111,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-187,-181,111,-183,111,111,-201,-205,111,111,111,-182,111,111,111,111,111,111,111,-194,-196,-197,111,111,-199,111,-195,-198,-200,]),'NOTSYM':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,112,112,112,-78,-189,-184,112,112,-190,-175,-176,-177,-178,-179,-180,-192,112,112,112,112,112,112,112,112,-23,-24,-25,-26,-27,-28,112,112,-185,-191,-186,112,112,112,-193,112,112,112,112,112,-202,-203,-204,112,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-187,-181,112,-183,112,112,-201,-205,112,112,112,-182,112,112,112,112,112,112,112,-194,-196,-197,112,112,-199,112,-195,-198,-200,]),'NUMBER':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,114,114,114,-78,-189,-184,114,114,-190,-175,-176,-177,-178,-179,-180,-192,114,114,114,114,114,114,114,114,-23,-24,-25,-26,-27,-28,114,114,-185,-191,-186,114,114,114,-193,114,114,114,114,114,-202,-203,-204,114,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-187,-181,114,-183,114,114,-201,-205,114,114,114,-182,114,114,114,114,114,114,114,-194,-196,-197,114,114,-199,114,-195,-198,-200,]),'STRING_LITERAL':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,115,115,115,-78,-189,-184,115,115,-190,-175,-176,-177,-178,-179,-180,-192,115,115,115,115,115,115,115,115,-23,-24,-25,-26,-27,-28,115,115,-185,-191,-186,115,115,115,-193,115,115,115,115,115,-202,-203,-204,115,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-187,-181,115,-183,115,115,-201,-205,115,115,115,-182,115,115,115,115,115,115,115,-194,-196,-197,115,115,-199,115,-195,-198,-200,]),'SCHAR':([41,46,47,53,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,86,89,94,100,101,102,104,107,108,109,110,111,112,129,154,156,157,158,159,160,162,163,164,165,169,170,172,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,247,248,249,250,254,261,262,263,295,305,311,312,313,315,316,317,318,319,322,335,336,337,339,345,347,348,349,350,351,],[-77,-188,116,116,116,-78,-189,-184,116,116,-190,-175,-176,-177,-178,-179,-180,-192,116,116,116,116,116,116,116,116,-23,-24,-25,-26,-27,-28,116,116,-185,-191,-186,116,116,116,-193,116,116,116,116,116,-202,-203,-204,116,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-187,-181,116,-183,116,116,-201,-205,116,116,116,-182,116,116,116,116,116,116,116,-194,-196,-197,116,116,-199,116,-195,-198,-200,]),'RSPAREN':([53,95,96,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,196,197,198,200,201,202,231,251,253,264,266,267,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,295,301,314,320,321,323,325,341,],[126,-74,-61,-29,-59,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,221,-76,-29,-2,-13,-14,-18,-19,-20,-21,300,-75,-6,-62,-58,320,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,324,330,-30,-8,-10,-22,343,-60,]),'ELSE':([70,74,75,76,77,78,79,80,156,158,163,174,175,176,247,248,250,262,263,312,335,336,337,347,349,350,351,],[-184,-175,-176,-177,-178,-179,-180,-192,-185,-186,-193,-202,-203,-204,-187,-181,-183,-201,-205,-182,345,-196,-197,-199,-195,-198,-200,]),'DOT':([81,99,106,114,115,116,130,196,197,253,268,271,272,320,321,],[-2,194,-7,-3,-4,-5,-2,-13,-14,-6,-9,-11,-12,-8,-10,]),'PTR_OP':([81,99,106,114,115,116,130,196,197,253,268,271,272,320,321,],[-2,195,-7,-3,-4,-5,-2,-13,-14,-6,-9,-11,-12,-8,-10,]),'MUL_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,180,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'DIV_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,181,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'MOD_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,182,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'ADD_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,183,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'SUB_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,184,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'LEFT_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,185,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'RIGHT_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,186,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'AND_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,187,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'XOR_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,188,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'OR_ASSIGN':([81,97,99,106,114,115,116,128,130,196,197,198,200,201,202,253,268,271,272,314,320,321,323,],[-2,189,-17,-7,-3,-4,-5,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,-30,-8,-10,-22,]),'DIVOP':([81,97,99,103,106,114,115,116,123,128,130,196,197,198,200,201,202,253,268,271,272,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,219,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,219,219,-32,-33,-34,-30,-8,-10,-22,]),'MODOP':([81,97,99,103,106,114,115,116,123,128,130,196,197,198,200,201,202,253,268,271,272,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,220,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,220,220,-32,-33,-34,-30,-8,-10,-22,]),'LEFT_OP':([81,97,99,103,106,114,115,116,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,214,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,214,214,214,214,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'RIGHT_OP':([81,97,99,103,106,114,115,116,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,215,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,215,215,215,215,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'LTCOMP':([81,97,99,103,106,114,115,116,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,210,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,210,210,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'GTCOMP':([81,97,99,103,106,114,115,116,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,211,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,211,211,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'LE_OP':([81,97,99,103,106,114,115,116,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,212,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,212,212,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'GE_OP':([81,97,99,103,106,114,115,116,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,213,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,213,213,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'EQ_OP':([81,97,99,103,106,114,115,116,119,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,208,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,208,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'NE_OP':([81,97,99,103,106,114,115,116,119,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,209,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,209,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'XOROP':([81,97,99,103,106,114,115,116,117,118,119,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,-3,-4,-5,206,-51,-49,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,206,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'BOROP':([81,97,99,103,106,113,114,115,116,117,118,119,120,121,122,123,128,130,196,197,198,200,201,202,253,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,-7,205,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-9,-11,-12,205,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'AND_OP':([81,97,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,128,130,196,197,198,200,201,202,253,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,-17,-31,204,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,204,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'QUESMARK':([81,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,128,130,196,197,198,200,201,202,253,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,190,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-58,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'OR_OP':([81,97,98,99,103,105,106,113,114,115,116,117,118,119,120,121,122,123,128,130,196,197,198,200,201,202,253,266,268,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,314,320,321,323,],[-2,-29,191,-17,-31,-57,-7,-55,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-2,-13,-14,-18,-19,-20,-21,-6,-58,-9,-11,-12,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-8,-10,-22,]),'ELLIPSIS':([225,],[292,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'translation_unit':([0,],[2,]),'external_declaration':([0,2,],[3,39,]),'function_definition':([0,2,],[4,4,]),'declaration':([0,2,7,40,44,47,63,72,],[5,5,46,46,69,46,69,69,]),'declaration_specifiers':([0,2,7,8,9,10,40,44,47,54,63,72,225,230,257,296,],[6,6,48,49,50,51,48,48,48,137,48,48,137,137,137,137,]),'declarator':([0,2,6,33,48,67,137,144,230,304,],[7,7,40,58,124,124,226,237,58,237,]),'storage_class_specifier':([0,2,7,8,9,10,40,44,47,54,63,72,225,230,257,296,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,72,86,129,141,142,145,146,203,225,230,232,257,296,],[9,9,9,9,9,9,9,9,9,9,145,9,9,145,145,145,145,145,145,145,9,9,145,9,9,]),'type_qualifier':([0,2,7,8,9,10,31,40,44,47,54,55,60,63,72,86,129,141,142,145,146,203,225,230,232,257,296,],[10,10,10,10,10,10,57,10,10,10,10,139,146,10,10,146,146,146,146,146,146,146,10,10,146,10,10,]),'pointer':([0,2,6,31,33,48,55,67,137,144,168,230,257,304,],[11,11,11,56,11,11,138,11,228,11,256,228,256,11,]),'direct_declarator':([0,2,6,11,33,48,67,137,144,228,230,304,],[12,12,12,52,12,12,12,12,12,52,12,12,]),'struct_or_union_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,72,86,129,141,142,145,146,203,225,230,232,257,296,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'enum_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,72,86,129,141,142,145,146,203,225,230,232,257,296,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,2,7,8,9,10,40,44,47,54,60,63,72,86,129,141,142,145,146,203,225,230,232,257,296,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_declarator_list':([6,48,],[42,42,]),'init_declarator':([6,48,67,],[43,43,155,]),'declaration_list':([7,40,47,],[44,63,72,]),'compound_statement':([7,40,44,47,63,71,72,89,159,160,162,249,313,315,316,339,345,348,],[45,64,68,75,151,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'type_qualifier_list':([31,],[55,]),'statement_list':([47,72,],[71,159,]),'statement':([47,71,72,89,159,160,162,249,313,315,316,339,345,348,],[73,157,73,171,157,248,250,312,335,336,337,347,349,351,]),'labeled_statement':([47,71,72,89,159,160,162,249,313,315,316,339,345,348,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'expression_statement':([47,71,72,89,159,160,162,172,249,261,313,315,316,339,345,348,],[76,76,76,76,76,76,76,261,76,318,76,76,76,76,76,76,]),'selection_statement':([47,71,72,89,159,160,162,249,313,315,316,339,345,348,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'iteration_statement':([47,71,72,89,159,160,162,249,313,315,316,339,345,348,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'jump_statement':([47,71,72,89,159,160,162,249,313,315,316,339,345,348,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'expression':([47,71,72,86,89,94,129,159,160,162,165,169,170,172,190,192,199,203,249,261,313,315,316,317,318,339,345,348,],[84,84,84,166,84,177,166,84,84,84,252,258,259,84,265,267,166,166,84,84,84,84,84,338,340,84,84,84,]),'assignment_expression':([47,65,71,72,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,192,193,199,203,249,261,311,313,315,316,317,318,322,339,345,348,],[95,153,95,95,95,95,95,95,153,95,95,95,251,95,95,95,95,264,95,95,270,95,95,95,95,153,95,95,95,95,95,342,95,95,95,]),'conditional_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,192,193,199,203,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[96,127,96,96,96,127,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,127,127,127,96,96,127,127,96,96,96,96,96,96,341,96,96,96,96,]),'unary_expression':([47,53,65,71,72,82,86,89,94,100,101,102,104,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,249,254,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[97,128,97,97,97,128,97,97,97,198,200,128,202,97,97,97,97,97,97,97,97,97,97,97,97,128,97,97,97,97,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,97,128,97,128,128,97,97,97,97,97,97,128,97,97,97,97,]),'logical_or_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,192,193,199,203,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'postfix_expression':([47,53,65,71,72,82,86,89,94,100,101,102,104,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,249,254,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'unary_operator':([47,53,65,71,72,82,86,89,94,100,101,102,104,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,249,254,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'cast_expression':([47,53,65,71,72,82,86,89,94,102,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,249,254,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[103,103,103,103,103,103,103,103,103,201,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,288,289,290,103,103,103,103,314,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'logical_and_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,266,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'primary_expression':([47,53,65,71,72,82,86,89,94,100,101,102,104,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,231,238,243,249,254,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'inclusive_or_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,274,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'exclusive_or_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,275,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'and_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,276,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'equality_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,277,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'relational_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,278,279,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'shift_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,280,281,282,283,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'additive_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,284,285,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'multiplicative_expression':([47,53,65,71,72,82,86,89,94,129,154,159,160,162,164,165,169,170,172,178,190,191,192,193,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,231,238,243,249,261,295,305,311,313,315,316,317,318,319,322,339,345,348,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,286,287,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'constant_expression':([53,82,231,238,243,295,305,],[125,161,301,306,308,325,332,]),'parameter_type_list':([54,230,257,296,],[131,299,299,327,]),'identifier_list':([54,],[133,]),'parameter_list':([54,230,257,296,],[134,134,134,134,]),'parameter_declaration':([54,225,230,257,296,],[136,293,136,136,136,]),'struct_declaration_list':([60,141,],[142,232,]),'struct_declaration':([60,141,142,232,],[143,143,234,234,]),'specifier_qualifier_list':([60,86,129,141,142,145,146,203,232,],[144,168,168,144,144,239,240,168,144,]),'enumerator_list':([61,150,],[147,244,]),'enumerator':([61,150,242,],[148,148,307,]),'initializer':([65,154,311,],[152,246,334,]),'type_name':([86,129,203,],[167,167,273,]),'assignment_operator':([97,],[178,]),'abstract_declarator':([137,168,230,257,],[227,255,298,298,]),'direct_abstract_declarator':([137,168,228,230,256,257,],[229,229,294,229,294,229,]),'struct_declarator_list':([144,],[235,]),'struct_declarator':([144,304,],[236,331,]),'initializer_list':([154,],[245,]),'argument_expression_list':([193,],[269,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser.py',14),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',20),
  ('primary_expression -> NUMBER','primary_expression',1,'p_primary_expression','parser.py',21),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',22),
  ('primary_expression -> SCHAR','primary_expression',1,'p_primary_expression','parser.py',23),
  ('primary_expression -> LRPAREN expression RRPAREN','primary_expression',3,'p_primary_expression','parser.py',24),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',30),
  ('postfix_expression -> postfix_expression LSPAREN expression RSPAREN','postfix_expression',4,'p_postfix_expression','parser.py',31),
  ('postfix_expression -> postfix_expression LRPAREN RRPAREN','postfix_expression',3,'p_postfix_expression','parser.py',32),
  ('postfix_expression -> postfix_expression LRPAREN argument_expression_list RRPAREN','postfix_expression',4,'p_postfix_expression','parser.py',33),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',34),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',35),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','parser.py',36),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','parser.py',37),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',43),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',44),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',50),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',51),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',52),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',53),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',54),
  ('unary_expression -> SIZEOF LRPAREN type_name RRPAREN','unary_expression',4,'p_unary_expression','parser.py',55),
  ('unary_operator -> BANDOP','unary_operator',1,'p_unary_operator','parser.py',61),
  ('unary_operator -> MULTOP','unary_operator',1,'p_unary_operator','parser.py',62),
  ('unary_operator -> PLUSOP','unary_operator',1,'p_unary_operator','parser.py',63),
  ('unary_operator -> MINUSOP','unary_operator',1,'p_unary_operator','parser.py',64),
  ('unary_operator -> BNOP','unary_operator',1,'p_unary_operator','parser.py',65),
  ('unary_operator -> NOTSYM','unary_operator',1,'p_unary_operator','parser.py',66),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',72),
  ('cast_expression -> LRPAREN type_name RRPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',73),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',79),
  ('multiplicative_expression -> multiplicative_expression MULTOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',80),
  ('multiplicative_expression -> multiplicative_expression DIVOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',81),
  ('multiplicative_expression -> multiplicative_expression MODOP cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',82),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',88),
  ('additive_expression -> additive_expression PLUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',89),
  ('additive_expression -> additive_expression MINUSOP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',90),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',96),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',97),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',98),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',104),
  ('relational_expression -> relational_expression LTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',105),
  ('relational_expression -> relational_expression GTCOMP shift_expression','relational_expression',3,'p_relational_expression','parser.py',106),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',107),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',108),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',114),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',115),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',116),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',122),
  ('and_expression -> and_expression BANDOP equality_expression','and_expression',3,'p_and_expression','parser.py',123),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',129),
  ('exclusive_or_expression -> exclusive_or_expression XOROP and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',130),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',136),
  ('inclusive_or_expression -> inclusive_or_expression BOROP exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',137),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',143),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',144),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',150),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',151),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',157),
  ('conditional_expression -> logical_or_expression QUESMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',158),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',164),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',165),
  ('assignment_operator -> EQUAL','assignment_operator',1,'p_assignment_operator','parser.py',171),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',172),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',173),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',174),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',175),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',176),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',177),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',178),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',179),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',180),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',181),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',187),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',188),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',194),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','parser.py',200),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','parser.py',201),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',207),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',208),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',209),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',210),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',211),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',212),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',218),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',219),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',225),
  ('init_declarator -> declarator EQUAL initializer','init_declarator',3,'p_init_declarator','parser.py',226),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',232),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',233),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',234),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',235),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',236),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',242),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',243),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',244),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',245),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',246),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',247),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',248),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',249),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',250),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',251),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',252),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER LCPAREN struct_declaration_list RCPAREN','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',257),
  ('struct_or_union_specifier -> struct_or_union LCPAREN struct_declaration_list RCPAREN','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',258),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',259),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',265),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',266),
  ('struct_or_union -> CLASS','struct_or_union',1,'p_struct_or_union','parser.py',267),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',273),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',274),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','parser.py',280),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',285),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',286),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',287),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',288),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',294),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',295),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',301),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',302),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',303),
  ('enum_specifier -> ENUM LCPAREN enumerator_list RCPAREN','enum_specifier',4,'p_enum_specifier','parser.py',309),
  ('enum_specifier -> ENUM IDENTIFIER LCPAREN enumerator_list RCPAREN','enum_specifier',5,'p_enum_specifier','parser.py',310),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','parser.py',311),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',317),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser.py',318),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','parser.py',324),
  ('enumerator -> IDENTIFIER EQUAL constant_expression','enumerator',3,'p_enumerator','parser.py',325),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',331),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',332),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',338),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',339),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser.py',345),
  ('direct_declarator -> LRPAREN declarator RRPAREN','direct_declarator',3,'p_direct_declarator','parser.py',346),
  ('direct_declarator -> direct_declarator LSPAREN constant_expression RSPAREN','direct_declarator',4,'p_direct_declarator','parser.py',347),
  ('direct_declarator -> direct_declarator LSPAREN RSPAREN','direct_declarator',3,'p_direct_declarator','parser.py',348),
  ('direct_declarator -> direct_declarator LRPAREN parameter_type_list RRPAREN','direct_declarator',4,'p_direct_declarator','parser.py',349),
  ('direct_declarator -> direct_declarator LRPAREN identifier_list RRPAREN','direct_declarator',4,'p_direct_declarator','parser.py',350),
  ('direct_declarator -> direct_declarator LRPAREN RRPAREN','direct_declarator',3,'p_direct_declarator','parser.py',351),
  ('pointer -> MULTOP','pointer',1,'p_pointer','parser.py',357),
  ('pointer -> MULTOP type_qualifier_list','pointer',2,'p_pointer','parser.py',358),
  ('pointer -> MULTOP pointer','pointer',2,'p_pointer','parser.py',359),
  ('pointer -> MULTOP type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',360),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',366),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',367),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',373),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',374),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',380),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',381),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',387),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',388),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',389),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser.py',395),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','parser.py',396),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',402),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',403),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',409),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',410),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',411),
  ('direct_abstract_declarator -> LRPAREN abstract_declarator RRPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',417),
  ('direct_abstract_declarator -> LSPAREN RSPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',418),
  ('direct_abstract_declarator -> LSPAREN constant_expression RSPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',419),
  ('direct_abstract_declarator -> direct_abstract_declarator LSPAREN RSPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',420),
  ('direct_abstract_declarator -> direct_abstract_declarator LSPAREN constant_expression RSPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',421),
  ('direct_abstract_declarator -> LRPAREN RRPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',422),
  ('direct_abstract_declarator -> LRPAREN parameter_type_list RRPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',423),
  ('direct_abstract_declarator -> direct_abstract_declarator LRPAREN RRPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',424),
  ('direct_abstract_declarator -> direct_abstract_declarator LRPAREN parameter_type_list RRPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',425),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',431),
  ('initializer -> LCPAREN initializer_list RCPAREN','initializer',3,'p_initializer','parser.py',432),
  ('initializer -> LCPAREN initializer_list COMMA RCPAREN','initializer',4,'p_initializer','parser.py',433),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',439),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',440),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',446),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',447),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',448),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',449),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',450),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',451),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',457),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',458),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',459),
  ('compound_statement -> LCPAREN RCPAREN','compound_statement',2,'p_compound_statement','parser.py',465),
  ('compound_statement -> LCPAREN statement_list RCPAREN','compound_statement',3,'p_compound_statement','parser.py',466),
  ('compound_statement -> LCPAREN declaration_list RCPAREN','compound_statement',3,'p_compound_statement','parser.py',467),
  ('compound_statement -> LCPAREN declaration_list statement_list RCPAREN','compound_statement',4,'p_compound_statement','parser.py',468),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',474),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',475),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',481),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',482),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',488),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',489),
  ('selection_statement -> IF LRPAREN expression RRPAREN statement','selection_statement',5,'p_selection_statement','parser.py',495),
  ('selection_statement -> IF LRPAREN expression RRPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',496),
  ('selection_statement -> SWITCH LRPAREN expression RRPAREN statement','selection_statement',5,'p_selection_statement','parser.py',497),
  ('iteration_statement -> WHILE LRPAREN expression RRPAREN statement','iteration_statement',5,'p_iteration_statement','parser.py',503),
  ('iteration_statement -> DO statement WHILE LRPAREN expression RRPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',504),
  ('iteration_statement -> FOR LRPAREN expression_statement expression_statement RRPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',505),
  ('iteration_statement -> FOR LRPAREN expression_statement expression_statement expression RRPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',506),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',512),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',513),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',514),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',515),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',516),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',522),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',523),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',529),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',530),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',536),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',537),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',538),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',539),
]
