
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANDOP AND_EQ ARROW ARROWSTAR ASM AUTO BANDEQOP BANDOP BITAND BITOR BNOP BOOL BOREQOP BOROP BREAK B_E_OR B_I_OR CASE CATCH CHAR CHAR16_T CHAR32_T CHAR8_T CLASS COLON COMMA COMMENT COMPL CONDTIONAL CONST CONTINUE DEFAULT DELETE DIVEQOP DIVOP DMINUSOP DO DOT DOTSTAR DOUBLE DOUBLECOLON DPLUSOP DQUOTE ELSE ENUM EQCOMP EQUAL EXPOP EXTERN FALSE FLOAT FOR GOTO GTCOMP GTECOMP HASHTAG IDENTIFIER IF INLINE INT LCPAREN LEFTQOP LEFTSHIFT LONG LRPAREN LSHIFT LSHIFTEQOP LSPAREN LTCOMP LTECOMP MINUSEQOP MINUSOP MODEQOP MODOP MODQOP MULTEQOP MULTOP NAMESPACE NEQCOMP NEW NOT NOTSYM NOT_EQ NULLPTR NUMBER OR OROP OR_EQ PLUSEQOP PLUSOP PRIVATE PROTECTED PUBLIC QUESMARK RCPAREN RETURN RIGHTLIFT RIGHTQOP RRPAREN RSHIFT RSHIFTEQOP RSPAREN SCHAR SEMICOLON SHORT SIGNED SIZEOF SQUOTE STATIC STD STRING SWITCH THIS THROW TRUE TRY TYPEDEF UMINUSOP UNION UNSIGNED UPLUSOP USING VIRTUAL VOID VOLATILE WHILE XOR XOREQOP XOROP XOR_EQprogram : NUMBER \n        | STRING\n    empty :'
    
_lr_action_items = {'NUMBER':([0,],[2,]),'STRING':([0,],[3,]),'$end':([1,2,3,],[0,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> NUMBER','program',1,'p_program','parse.1.py',11),
  ('program -> STRING','program',1,'p_program','parse.1.py',12),
  ('empty -> <empty>','empty',0,'p_empty','parse.1.py',19),
]
