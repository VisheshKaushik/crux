Stack  : . LexToken(CLASS,'class',1,0)
Stack  : CLASS . LexToken(IDENTIFIER,'Geeks',1,6)
Stack  : class_key . LexToken(IDENTIFIER,'Geeks',1,6)
Stack  : class_key IDENTIFIER . LexToken(LCPAREN,'{',2,13)
Stack  : class_head . LexToken(LCPAREN,'{',2,13)
Stack  : class_head LCPAREN . LexToken(PUBLIC,'public',3,20)
Stack  : class_head LCPAREN PUBLIC . LexToken(COLON,':',3,26)
Stack  : class_head LCPAREN access_specifier . LexToken(COLON,':',3,26)
Stack  : class_head LCPAREN access_specifier COLON . LexToken(IDENTIFIER,'string',4,33)
Stack  : class_head LCPAREN access_specifier COLON IDENTIFIER . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON typedef_name . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON qualified_type_name . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON simple_type_name . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON type_specifier . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON decl_specifier . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers . LexToken(IDENTIFIER,'geekname',4,40)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers IDENTIFIER . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers name . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers dname . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers declarator . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers member_declarator . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers member_declarator_list . LexToken(SEMICOLON,';',4,48)
Stack  : class_head LCPAREN access_specifier COLON decl_specifiers member_declarator_list SEMICOLON . LexToken(INT,'int',5,55)
Stack  : class_head LCPAREN access_specifier COLON member_declaration . LexToken(INT,'int',5,55)
Stack  : class_head LCPAREN access_specifier COLON member_declaration INT . LexToken(IDENTIFIER,'id',5,59)
Stack  : class_head LCPAREN access_specifier COLON member_declaration simple_type_name . LexToken(IDENTIFIER,'id',5,59)
Stack  : class_head LCPAREN access_specifier COLON member_declaration type_specifier . LexToken(IDENTIFIER,'id',5,59)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifier . LexToken(IDENTIFIER,'id',5,59)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers . LexToken(IDENTIFIER,'id',5,59)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers IDENTIFIER . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers name . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers dname . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers declarator . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers member_declarator . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers member_declarator_list . LexToken(SEMICOLON,';',5,61)
Stack  : class_head LCPAREN access_specifier COLON member_declaration decl_specifiers member_declarator_list SEMICOLON . LexToken(VOID,'void',7,75)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration . LexToken(VOID,'void',7,75)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration VOID . LexToken(IDENTIFIER,'printname',7,80)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration simple_type_name . LexToken(IDENTIFIER,'printname',7,80)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration type_specifier . LexToken(IDENTIFIER,'printname',7,80)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifier . LexToken(IDENTIFIER,'printname',7,80)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers . LexToken(IDENTIFIER,'printname',7,80)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers IDENTIFIER . LexToken(LPAREN,'(',7,89)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers name . LexToken(LPAREN,'(',7,89)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers dname . LexToken(LPAREN,'(',7,89)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers declarator . LexToken(LPAREN,'(',7,89)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers declarator LPAREN . LexToken(RPAREN,')',7,90)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers declarator LPAREN argument_declaration_list . LexToken(RPAREN,')',7,90)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers declarator LPAREN argument_declaration_list RPAREN . LexToken(SEMICOLON,';',7,91)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers declarator . LexToken(SEMICOLON,';',7,91)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers member_declarator . LexToken(SEMICOLON,';',7,91)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers member_declarator_list . LexToken(SEMICOLON,';',7,91)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration decl_specifiers member_declarator_list SEMICOLON . LexToken(VOID,'void',9,105)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration . LexToken(VOID,'void',9,105)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration VOID . LexToken(IDENTIFIER,'printid',9,110)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration simple_type_name . LexToken(IDENTIFIER,'printid',9,110)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration type_specifier . LexToken(IDENTIFIER,'printid',9,110)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifier . LexToken(IDENTIFIER,'printid',9,110)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers . LexToken(IDENTIFIER,'printid',9,110)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers IDENTIFIER . LexToken(LPAREN,'(',9,117)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers name . LexToken(LPAREN,'(',9,117)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers dname . LexToken(LPAREN,'(',9,117)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator . LexToken(LPAREN,'(',9,117)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LPAREN . LexToken(RPAREN,')',9,118)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LPAREN argument_declaration_list . LexToken(RPAREN,')',9,118)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LPAREN argument_declaration_list RPAREN . LexToken(LCPAREN,'{',10,125)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator . LexToken(LCPAREN,'{',10,125)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN . LexToken(IDENTIFIER,'cout',11,136)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN IDENTIFIER . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN name . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN primary_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN postfix_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN unary_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN cast_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN pm_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN multiplicative_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN additive_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression . LexToken(LSHIFT,'<<',11,141)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT . LexToken(STRING,'"Geek id is: "',11,144)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT STRING . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT literal . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT primary_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT postfix_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT unary_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT cast_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT pm_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT multiplicative_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT additive_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression . LexToken(LSHIFT,'<<',11,159)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT . LexToken(IDENTIFIER,'id',11,162)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT IDENTIFIER . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT name . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT primary_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT postfix_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT unary_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT cast_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT pm_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT multiplicative_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression LSHIFT additive_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN shift_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN relational_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN equality_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN AND_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN exclusive_OR_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN inclusive_OR_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN logical_AND_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN logical_OR_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN conditional_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN assignment_expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN expression . LexToken(SEMICOLON,';',11,164)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN expression SEMICOLON . LexToken(RCPAREN,'}',12,171)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN expression_statement . LexToken(RCPAREN,'}',12,171)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN statement . LexToken(RCPAREN,'}',12,171)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN statement_list . LexToken(RCPAREN,'}',12,171)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator LCPAREN statement_list RCPAREN . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator compound_statement . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration decl_specifiers declarator fct_body . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration function_definition . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration member_declaration . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_declaration member_list . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_declaration member_list . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_declaration member_list . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN access_specifier COLON member_list . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN member_list . LexToken(RCPAREN,'}',13,174)
Stack  : class_head LCPAREN member_list RCPAREN . LexToken(SEMICOLON,';',13,175)
Stack  : class_specifier . LexToken(SEMICOLON,';',13,175)
Stack  : type_specifier . LexToken(SEMICOLON,';',13,175)
Stack  : decl_specifier . LexToken(SEMICOLON,';',13,175)
Stack  : decl_specifiers . LexToken(SEMICOLON,';',13,175)
Stack  : decl_specifiers SEMICOLON . LexToken(VOID,'void',15,181)
Stack  : declaration . LexToken(VOID,'void',15,181)
Stack  : declaration_seq . LexToken(VOID,'void',15,181)
Stack  : declaration_seq VOID . LexToken(IDENTIFIER,'Geeks',15,186)
Stack  : declaration_seq simple_type_name . LexToken(IDENTIFIER,'Geeks',15,186)
Stack  : declaration_seq type_specifier . LexToken(IDENTIFIER,'Geeks',15,186)
Stack  : declaration_seq decl_specifier . LexToken(IDENTIFIER,'Geeks',15,186)
Stack  : declaration_seq decl_specifiers . LexToken(IDENTIFIER,'Geeks',15,186)
Stack  : declaration_seq decl_specifiers IDENTIFIER . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers typedef_name . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers qualified_type_name . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers simple_type_name . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers type_specifier . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers decl_specifier . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers . LexToken(DOUBLECOLON,'::',15,191)
Stack  : declaration_seq decl_specifiers DOUBLECOLON . LexToken(IDENTIFIER,'printname',15,193)
Stack  : declaration_seq decl_specifiers DOUBLECOLON IDENTIFIER . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers DOUBLECOLON class_name . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers DOUBLECOLON qualified_class_name . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers complete_class_name . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers simple_type_name . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers type_specifier . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers decl_specifier . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers . LexToken(LPAREN,'(',15,202)
Stack  : declaration_seq decl_specifiers LPAREN . LexToken(RPAREN,')',15,203)
Stack  : declaration_seq decl_specifiers LPAREN . error
Stack  : declaration_seq decl_specifiers . error
Stack  : declaration_seq . error
Stack  : . error
Stack  : . LexToken(LCPAREN,'{',16,206)
Stack  : . LexToken(IDENTIFIER,'cout',17,213)
Stack  : IDENTIFIER . LexToken(LSHIFT,'<<',17,218)
Stack  : name . LexToken(LSHIFT,'<<',17,218)
Stack  : name . error
Stack  : . error
Stack  : . LexToken(STRING,'"Geekname is: "',17,221)
Stack  : . LexToken(LSHIFT,'<<',17,237)
Stack  : . LexToken(IDENTIFIER,'geekname',17,240)
Stack  : IDENTIFIER . LexToken(SEMICOLON,';',17,248)
Stack  : name . LexToken(SEMICOLON,';',17,248)
Stack  : dname . LexToken(SEMICOLON,';',17,248)
Stack  : declarator . LexToken(SEMICOLON,';',17,248)
Stack  : init_declarator . LexToken(SEMICOLON,';',17,248)
Stack  : declarator_list . LexToken(SEMICOLON,';',17,248)
Stack  : declarator_list SEMICOLON . LexToken(RCPAREN,'}',18,252)
Stack  : declaration . LexToken(RCPAREN,'}',18,252)
Stack  : declaration . error
Stack  : . error
Stack  : . LexToken(INT,'int',19,255)
Stack  : INT . LexToken(IDENTIFIER,'main',19,259)
Stack  : simple_type_name . LexToken(IDENTIFIER,'main',19,259)
Stack  : type_specifier . LexToken(IDENTIFIER,'main',19,259)
Stack  : decl_specifier . LexToken(IDENTIFIER,'main',19,259)
Stack  : decl_specifiers . LexToken(IDENTIFIER,'main',19,259)
Stack  : decl_specifiers IDENTIFIER . LexToken(LPAREN,'(',19,263)
Stack  : decl_specifiers name . LexToken(LPAREN,'(',19,263)
Stack  : decl_specifiers dname . LexToken(LPAREN,'(',19,263)
Stack  : decl_specifiers declarator . LexToken(LPAREN,'(',19,263)
Stack  : decl_specifiers declarator LPAREN . LexToken(RPAREN,')',19,264)
Stack  : decl_specifiers declarator LPAREN argument_declaration_list . LexToken(RPAREN,')',19,264)
Stack  : decl_specifiers declarator LPAREN argument_declaration_list RPAREN . LexToken(LCPAREN,'{',19,266)
Stack  : decl_specifiers declarator . LexToken(LCPAREN,'{',19,266)
Stack  : decl_specifiers declarator LCPAREN . LexToken(IDENTIFIER,'Geeks',21,280)
Stack  : decl_specifiers declarator LCPAREN IDENTIFIER . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN typedef_name . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN qualified_type_name . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN simple_type_name . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN type_specifier . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN decl_specifier . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers . LexToken(IDENTIFIER,'obj1',21,286)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers IDENTIFIER . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers name . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers dname . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers declarator . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers init_declarator . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers declarator_list . LexToken(SEMICOLON,';',21,290)
Stack  : decl_specifiers declarator LCPAREN decl_specifiers declarator_list SEMICOLON . LexToken(IDENTIFIER,'obj1',22,297)
Stack  : decl_specifiers declarator LCPAREN declaration . LexToken(IDENTIFIER,'obj1',22,297)
Stack  : decl_specifiers declarator LCPAREN declaration_statement . LexToken(IDENTIFIER,'obj1',22,297)
Stack  : decl_specifiers declarator LCPAREN statement . LexToken(IDENTIFIER,'obj1',22,297)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(IDENTIFIER,'obj1',22,297)
Stack  : decl_specifiers declarator LCPAREN statement_list IDENTIFIER . LexToken(DOT,'.',22,301)
Stack  : decl_specifiers declarator LCPAREN statement_list name . LexToken(DOT,'.',22,301)
Stack  : decl_specifiers declarator LCPAREN statement_list primary_expression . LexToken(DOT,'.',22,301)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(DOT,'.',22,301)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT . LexToken(IDENTIFIER,'geekname',22,302)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT IDENTIFIER . LexToken(EQUAL,'=',22,311)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT name . LexToken(EQUAL,'=',22,311)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(EQUAL,'=',22,311)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression . LexToken(EQUAL,'=',22,311)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression EQUAL . LexToken(STRING,'"xyz"',22,313)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator . LexToken(STRING,'"xyz"',22,313)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator STRING . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator literal . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator primary_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator postfix_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator unary_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator cast_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator pm_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator multiplicative_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator additive_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator shift_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator relational_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator equality_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator AND_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator exclusive_OR_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator inclusive_OR_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator logical_AND_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator logical_OR_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator conditional_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator assignment_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list assignment_expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list expression . LexToken(SEMICOLON,';',22,318)
Stack  : decl_specifiers declarator LCPAREN statement_list expression SEMICOLON . LexToken(IDENTIFIER,'obj1',23,325)
Stack  : decl_specifiers declarator LCPAREN statement_list expression_statement . LexToken(IDENTIFIER,'obj1',23,325)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(IDENTIFIER,'obj1',23,325)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(IDENTIFIER,'obj1',23,325)
Stack  : decl_specifiers declarator LCPAREN statement_list IDENTIFIER . LexToken(DOT,'.',23,329)
Stack  : decl_specifiers declarator LCPAREN statement_list name . LexToken(DOT,'.',23,329)
Stack  : decl_specifiers declarator LCPAREN statement_list primary_expression . LexToken(DOT,'.',23,329)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(DOT,'.',23,329)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT . LexToken(IDENTIFIER,'id',23,330)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT IDENTIFIER . LexToken(EQUAL,'=',23,332)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT name . LexToken(EQUAL,'=',23,332)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(EQUAL,'=',23,332)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression . LexToken(EQUAL,'=',23,332)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression EQUAL . LexToken(NUMBER,15.0,23,333)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator . LexToken(NUMBER,15.0,23,333)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator NUMBER . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator literal . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator primary_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator postfix_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator unary_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator cast_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator pm_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator multiplicative_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator additive_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator shift_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator relational_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator equality_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator AND_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator exclusive_OR_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator inclusive_OR_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator logical_AND_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator logical_OR_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator conditional_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression assignment_operator assignment_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list assignment_expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list expression . LexToken(SEMICOLON,';',23,335)
Stack  : decl_specifiers declarator LCPAREN statement_list expression SEMICOLON . LexToken(IDENTIFIER,'obj1',25,349)
Stack  : decl_specifiers declarator LCPAREN statement_list expression_statement . LexToken(IDENTIFIER,'obj1',25,349)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(IDENTIFIER,'obj1',25,349)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(IDENTIFIER,'obj1',25,349)
Stack  : decl_specifiers declarator LCPAREN statement_list IDENTIFIER . LexToken(DOT,'.',25,353)
Stack  : decl_specifiers declarator LCPAREN statement_list name . LexToken(DOT,'.',25,353)
Stack  : decl_specifiers declarator LCPAREN statement_list primary_expression . LexToken(DOT,'.',25,353)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(DOT,'.',25,353)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT . LexToken(IDENTIFIER,'printname',25,354)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT IDENTIFIER . LexToken(LPAREN,'(',25,363)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT name . LexToken(LPAREN,'(',25,363)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(LPAREN,'(',25,363)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression LPAREN . LexToken(RPAREN,')',25,364)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression LPAREN RPAREN . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list cast_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list pm_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list multiplicative_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list additive_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list relational_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list equality_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list AND_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list exclusive_OR_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list inclusive_OR_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_AND_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_OR_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list conditional_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list assignment_expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list expression . LexToken(SEMICOLON,';',25,365)
Stack  : decl_specifiers declarator LCPAREN statement_list expression SEMICOLON . LexToken(IDENTIFIER,'cout',26,372)
Stack  : decl_specifiers declarator LCPAREN statement_list expression_statement . LexToken(IDENTIFIER,'cout',26,372)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(IDENTIFIER,'cout',26,372)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(IDENTIFIER,'cout',26,372)
Stack  : decl_specifiers declarator LCPAREN statement_list IDENTIFIER . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list name . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list primary_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list cast_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list pm_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list multiplicative_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list additive_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression . LexToken(LSHIFT,'<<',26,377)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT . LexToken(IDENTIFIER,'endl',26,380)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT IDENTIFIER . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT name . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT primary_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT postfix_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT unary_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT cast_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT pm_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT multiplicative_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression LSHIFT additive_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list relational_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list equality_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list AND_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list exclusive_OR_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list inclusive_OR_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_AND_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_OR_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list conditional_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list assignment_expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list expression . LexToken(SEMICOLON,';',26,384)
Stack  : decl_specifiers declarator LCPAREN statement_list expression SEMICOLON . LexToken(IDENTIFIER,'obj1',28,398)
Stack  : decl_specifiers declarator LCPAREN statement_list expression_statement . LexToken(IDENTIFIER,'obj1',28,398)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(IDENTIFIER,'obj1',28,398)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(IDENTIFIER,'obj1',28,398)
Stack  : decl_specifiers declarator LCPAREN statement_list IDENTIFIER . LexToken(DOT,'.',28,402)
Stack  : decl_specifiers declarator LCPAREN statement_list name . LexToken(DOT,'.',28,402)
Stack  : decl_specifiers declarator LCPAREN statement_list primary_expression . LexToken(DOT,'.',28,402)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(DOT,'.',28,402)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT . LexToken(IDENTIFIER,'printid',28,403)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT IDENTIFIER . LexToken(LPAREN,'(',28,410)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression DOT name . LexToken(LPAREN,'(',28,410)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(LPAREN,'(',28,410)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression LPAREN . LexToken(RPAREN,')',28,411)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression LPAREN RPAREN . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list postfix_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list unary_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list cast_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list pm_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list multiplicative_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list additive_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list shift_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list relational_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list equality_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list AND_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list exclusive_OR_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list inclusive_OR_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_AND_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list logical_OR_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list conditional_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list assignment_expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list expression . LexToken(SEMICOLON,';',28,412)
Stack  : decl_specifiers declarator LCPAREN statement_list expression SEMICOLON . LexToken(RETURN,'return',29,419)
Stack  : decl_specifiers declarator LCPAREN statement_list expression_statement . LexToken(RETURN,'return',29,419)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(RETURN,'return',29,419)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(RETURN,'return',29,419)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN . LexToken(NUMBER,0.0,29,426)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN NUMBER . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN literal . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN primary_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN postfix_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN unary_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN cast_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN pm_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN multiplicative_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN additive_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN shift_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN relational_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN equality_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN AND_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN exclusive_OR_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN inclusive_OR_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN logical_AND_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN logical_OR_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN conditional_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN assignment_expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN expression . LexToken(SEMICOLON,';',29,427)
Stack  : decl_specifiers declarator LCPAREN statement_list RETURN expression SEMICOLON . LexToken(RCPAREN,'}',30,430)
Stack  : decl_specifiers declarator LCPAREN statement_list jump_statement . LexToken(RCPAREN,'}',30,430)
Stack  : decl_specifiers declarator LCPAREN statement_list statement . LexToken(RCPAREN,'}',30,430)
Stack  : decl_specifiers declarator LCPAREN statement_list . LexToken(RCPAREN,'}',30,430)
Stack  : decl_specifiers declarator LCPAREN statement_list RCPAREN . $end
Stack  : decl_specifiers declarator compound_statement . $end
Stack  : decl_specifiers declarator fct_body . $end
Stack  : function_definition . $end
Stack  : declaration . $end
Stack  : declaration_seq . $end
Stack  : translation_unit . $end
Stack  : program . $end
