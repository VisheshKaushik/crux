digraph  g{
rank1 [style=invisible];
rank2 [style=invisible];
throw_expression -> expression
exception_specification -> type_list
program -> translation_unit
translation_unit -> declaration_seq
declaration_seq -> declaration
type_list -> type_name
template_argument -> argument_declaration
template_argument -> type_argument
argument_declaration -> declarator
argument_declaration -> decl_specifiers
argument_declaration -> abstract_declarator
argument_declaration -> expression
declarator -> argument_declaration_list
declarator -> cv_qualifier_list
declarator -> ptr_operator
declarator -> dname
declarator -> constant_expression
dname -> qualified_type_name
dname -> name
dname -> typedef_name
dname -> class_name
name -> conversion_function_name
name -> operator_function_name
name -> qualified_name
name -> class_name
conversion_function_name -> conversion_type_name
conversion_type_name -> type_specifier_list
conversion_type_name -> ptr_operator
type_specifier_list -> type_specifier
type_specifier -> enum_specifier
type_specifier -> class_specifier
type_specifier -> elaborated_type_specifier
type_specifier -> simple_type_name
elaborated_type_specifier -> enum_name
elaborated_type_specifier -> class_name
elaborated_type_specifier -> class_key
class_specifier -> class_head
class_specifier -> member_list
member_list -> member_declaration
member_list -> access_specifier
member_declaration -> decl_specifiers
member_declaration -> qualified_name
member_declaration -> function_definition
member_declaration -> member_declarator_list
member_declarator_list -> member_declarator
member_declarator -> pure_specifier
member_declarator -> declarator
member_declarator -> constant_expression
function_definition -> fct_body
function_definition -> declarator
function_definition -> ctor_initializer
function_definition -> decl_specifiers
ctor_initializer -> mem_initializer_list
mem_initializer_list -> mem_initializer
mem_initializer -> complete_class_name
mem_initializer -> expression_list
fct_body -> compound_statement
compound_statement -> statement_list
statement_list -> statement
statement -> expression_statement
statement -> selection_statement
statement -> try_block
statement -> jump_statement
statement -> compound_statement
statement -> declaration_statement
statement -> iteration_statement
statement -> labeled_statement
labeled_statement -> statement
labeled_statement -> constant_expression
iteration_statement -> expression
iteration_statement -> statement
iteration_statement -> for_init_statement
for_init_statement -> expression_statement
for_init_statement -> declaration_statement
declaration_statement -> declaration
declaration -> template_declaration
declaration -> linkage_specification
declaration -> declarator_list
declaration -> asm_declaration
declaration -> decl_specifiers
declaration -> template_class_name
declaration -> function_definition
template_class_name -> template_name
template_class_name -> template_arg_list
template_arg_list -> template_arg
template_arg -> expression
template_arg -> type_name
declarator_list -> init_declarator
init_declarator -> declarator
init_declarator -> initializer
initializer -> assignment_expression
initializer -> expression_list
initializer -> initializer_list
linkage_specification -> declaration
linkage_specification -> declaration_list
declaration_list -> declaration
template_declaration -> template_argument_list
template_declaration -> declaration
template_argument_list -> template_argument
jump_statement -> expression
try_block -> handler_list
try_block -> compound_statement
handler_list -> handler
handler -> exception_declaration
handler -> compound_statement
exception_declaration -> abstract_declarator
exception_declaration -> type_specifier_list
exception_declaration -> declarator
selection_statement -> expression
selection_statement -> statement
expression_statement -> expression
decl_specifiers -> decl_specifier
decl_specifier -> type_specifier
decl_specifier -> fct_specifier
decl_specifier -> storage_class_specifier
class_head -> class_name
class_head -> base_spec
class_head -> class_key
base_spec -> base_list
base_list -> base_specifier
base_specifier -> complete_class_name
base_specifier -> access_specifier
enum_specifier -> enum_list
enum_list -> enumerator
enumerator -> constant_expression
constant_expression -> conditional_expression
conditional_expression -> expression
conditional_expression -> logical_OR_expression
logical_OR_expression -> logical_AND_expression
logical_AND_expression -> inclusive_OR_expression
inclusive_OR_expression -> exclusive_OR_expression
exclusive_OR_expression -> AND_expression
AND_expression -> equality_expression
equality_expression -> relational_expression
relational_expression -> shift_expression
shift_expression -> additive_expression
additive_expression -> multiplicative_expression
multiplicative_expression -> pm_expression
pm_expression -> cast_expression
expression -> assignment_expression
assignment_expression -> unary_expression
assignment_expression -> assignment_operator
assignment_expression -> conditional_expression
unary_expression -> unary_operator
unary_expression -> deallocation_expression
unary_expression -> postfix_expression
unary_expression -> cast_expression
unary_expression -> type_name
unary_expression -> allocation_expression
allocation_expression -> type_name
allocation_expression -> placement
allocation_expression -> new_type_name
allocation_expression -> new_initializer
new_initializer -> initializer_list
initializer_list -> assignment_expression
new_type_name -> type_specifier_list
new_type_name -> new_declarator
new_declarator -> complete_class_name
new_declarator -> cv_qualifier_list
new_declarator -> expression
placement -> expression_list
postfix_expression -> primary_expression
postfix_expression -> name
postfix_expression -> expression_list
postfix_expression -> simple_type_name
postfix_expression -> expression
simple_type_name -> complete_class_name
simple_type_name -> qualified_type_name
expression_list -> assignment_expression
primary_expression -> literal
primary_expression -> name
primary_expression -> operator_function_name
primary_expression -> qualified_name
primary_expression -> expression
qualified_name -> qualified_class_name
qualified_name -> name
operator_function_name -> operator_name
deallocation_expression -> cast_expression
cast_expression -> unary_expression
cast_expression -> type_name
type_name -> abstract_declarator
type_name -> type_specifier_list
abstract_declarator -> argument_declaration_list
abstract_declarator -> cv_qualifier_list
abstract_declarator -> ptr_operator
abstract_declarator -> constant_expression
qualified_type_name -> class_name
qualified_type_name -> typedef_name
ptr_operator -> complete_class_name
ptr_operator -> cv_qualifier_list
complete_class_name -> qualified_class_name
qualified_class_name -> class_name
cv_qualifier_list -> cv_qualifier
argument_declaration_list -> arg_declaration_list
arg_declaration_list -> argument_declaration
{
rankdir = TD;
rank2 ->throw_expression -> empty -> exception_specification -> program -> translation_unit -> declaration_seq -> error -> type_list -> template_argument -> type_argument -> argument_declaration -> declarator -> dname -> name -> conversion_function_name -> conversion_type_name -> type_specifier_list -> type_specifier -> elaborated_type_specifier -> enum_name -> class_specifier -> member_list -> member_declaration -> member_declarator_list -> member_declarator -> function_definition -> ctor_initializer -> mem_initializer_list -> mem_initializer -> fct_body -> compound_statement -> statement_list -> statement -> labeled_statement -> iteration_statement -> for_init_statement -> declaration_statement -> declaration -> template_class_name -> template_arg_list -> template_arg -> template_name -> asm_declaration -> declarator_list -> init_declarator -> initializer -> linkage_specification -> declaration_list -> template_declaration -> template_argument_list -> jump_statement -> try_block -> handler_list -> handler -> exception_declaration -> selection_statement -> expression_statement -> decl_specifiers -> decl_specifier -> storage_class_specifier -> fct_specifier -> class_head -> class_key -> base_spec -> base_list -> base_specifier -> access_specifier -> enum_specifier -> enum_list -> enumerator -> constant_expression -> conditional_expression -> logical_OR_expression -> logical_AND_expression -> inclusive_OR_expression -> exclusive_OR_expression -> AND_expression -> equality_expression -> relational_expression -> shift_expression -> additive_expression -> multiplicative_expression -> pm_expression -> expression -> assignment_expression -> assignment_operator -> unary_expression -> allocation_expression -> new_initializer -> initializer_list -> new_type_name -> new_declarator -> placement -> postfix_expression -> simple_type_name -> expression_list -> primary_expression -> qualified_name -> operator_function_name -> operator_name -> literal -> deallocation_expression -> cast_expression -> type_name -> abstract_declarator -> unary_operator -> qualified_type_name -> typedef_name -> ptr_operator -> complete_class_name -> qualified_class_name -> class_name -> cv_qualifier_list -> cv_qualifier -> argument_declaration_list -> arg_declaration_list -> pure_specifier [style=invis];
}}
